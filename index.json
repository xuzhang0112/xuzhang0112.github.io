
[{"content":"推荐链接\n廖雪峰的官方网站\nGrammar # Basic Data Class # Tips List 有序，但查找效率非常低 Dict 有序，但并非插入顺序 Set 无序，顺序是随机的 Function # 函数签名 # def f(x: int, b: float): pass 参数组合 # 定义函数时，可使用必选参数、默认参数、可变参数、关键字参数和命名关键字参数。\n这5种参数都可以组合使用，但必须按顺序使用。\n有多个默认参数时，调用的时候，既可以按顺序提供默认参数，也可以不按顺序提供部分默认参数。当不按顺序提供部分默认参数时，需要把参数名写上。\n比如定义一个函数，包含上述若干种参数：\ndef f1(a, b, c=0, *args, **kw): pass def f2(a, b, c=0, *, d, **kw): pass 在函数调用的时候，必须先按顺序传入，再按参数名传入。\n由于Python解释器会按上述顺序解析5种参数，因此，如果要传入可变参数，必须先传入默认参数。\n解包 # 对于任意函数，都可以通过类似func(*args, **kw)的形式调用它，无论它的参数是如何定义的。\ntuple用*解包，dic用**解包。\nargs = (1, 2, 3, 4) kw = {\u0026#39;d\u0026#39;: 99, \u0026#39;x\u0026#39;: \u0026#39;#\u0026#39;} f(*args, **kw) zip()表示压缩；zip(*)表示解压\n\u0026gt;\u0026gt;\u0026gt; a = [1,2,3] \u0026gt;\u0026gt;\u0026gt; b = [4,5,6] \u0026gt;\u0026gt;\u0026gt; zip(a,b) # 返回一个对象 \u0026lt;zip object at 0x103abc288\u0026gt; \u0026gt;\u0026gt;\u0026gt; list(zipped) # list() 转换为列表 [(1, 4), (2, 5), (3, 6)] \u0026gt;\u0026gt;\u0026gt; a1, a2 = zip(*zip(a,b)) # 与 zip 相反，zip(*) 可理解为解压 \u0026gt;\u0026gt;\u0026gt; list(a1), list(a2) [1, 2, 3], [4, 5, 6] 装饰器 # 装饰器定义复杂，使用简单\n以定义一个log装饰器为例，其中@functools.wraps(func)可以保持装饰后函数的__name__属性不变\nimport functools def log(func): @functools.wraps(func) def wrapper(*args, **kw): print(\u0026#39;call %s():\u0026#39; % func.__name__) return func(*args, **kw) return wrapper 使用装饰器只需要在需要装饰的函数定义前加@log，即可使得装饰后的函数在每次调用时打印函数名称\n@log def my_func(*args,**kw): pass 常用装饰器\n@dataclass\n@dataclass class Point: x: float y: float z: float = 0.0 #上下两者等价 class Point: def __init__(self, x: float, y: float, z: float = 0.0): self.x = x self.y = y self.z = z def __repr__(self): return f\u0026#34;Point(x={self.x}, y={self.y}, z={self.z})\u0026#34; def __eq__(self, other): if not isinstance(other, Point): return NotImplemented return (self.x, self.y, self.z) == (other.x, other.y, other.z) 匿名函数和偏函数 # lambda在传参时传的是变量；partial在传参时传的是对象；\nIterator # 可迭代对象 定义 举例 一般可迭代对象 可通过for循环遍历的对象，可通过索引访问 字符串、列表、字典、集合…… 迭代器 惰性遍历，通过next访问下一个 一般可迭代对象创建的迭代器（使用iter创建）、生成器（使用yield创建） for循环的本质是通过iter方法获取可迭代对象的迭代器\nObject # 静态变量\nClass A: a: List[int] b: Dict[float] | str 方法\n内置方法 实例方法 实例方法最少也要包含一个 self 参数，调用时Python会自动将对象传给self参数 实例方法一般由对象直接调用，也支持使用类名调用实例方法，但此方式需要手动给 self 参数传值 类方法 类方法需要使用＠classmethod修饰符进行修饰 类方法至少要包含一个参数，通常将其命名为 cls，调用时Python 会自动将类本身传给 cls 参数 类方法推荐使用类名直接调用，当然也可以使用实例对象来调用（不推荐） 静态方法 静态方法需要使用＠staticmethod修饰 相当于函数，唯一的区别是静态方法定义在类命名空间中，而函数定义在程序的全局命名空间中 既没有类似 self、cls 这样的特殊参数，也无法调用任何类属性和类方法 既可以由类调用，也可以由对象调用 Modules # 换镜像源\npip config set global.index-url https://pypi.mirrors.ustc.edu.cn/simple # 永久切换 安装第三方库\n普通安装\npip install package # 安装到python安装目录(可修改) pip install package -e # 安装到工作目录，便于修改 pip install -i ``https://pypi.mirrors.ustc.edu.cn/simple`` matplotlib # 临时指定镜像 pip install -r requirements.txt # 批量安装 有些库在导入时和安装时的名称是不一样的，例如hydra和hydra-core，sklearn和scikit-learn等 有些库没有被pypi收录，只能在GitHub上下载和安装，例如GroundingDINO 有些库无法安装是因为操作系统的一些底层库版本太老，例如gcc和libstdcxx-ng，CUDA版本过老等，如果没有sudo权限，可以通过conda安装一些依赖库 导入第三方库\n绝对导入：沿着sys.path搜索Module，首先是被执行的python文件所在的目录，注意不是工作目录，其次是Python包的安装路径\nimport A.B或from A import B\nsys.path.append() ## NOQA: E402 将项目目录暂时添加到环境变量PYTHONPATH中\n相对导入：仅限于package内部\n通过__init__.py中的from . import A或from ..A import B实现 使用相对导入的程序无法作为主程序执行，只能用作package的入口 文件和文件夹在作为Module时是同一层级的，使用from A import *时都是导入其下所有的对象\nNLP # spacy # 第三方：用于生物医学语料的spacy模型\nWeb # FastAPI \u0026amp; Requests # https://www.runoob.com/fastapi/fastapi-tutorial.html\n利用FastAPI构建大模型接口服务\n# Server from fastapi import FastAPI from pydantic import BaseModel import uvicorn app = FastAPI() class Item(BaseModel): text: str @app.post(\u0026#34;/predict\u0026#34;) def infer(item: Item): return {\u0026#34;pred\u0026#34;:...} uvicorn.run(app, host=\u0026#34;0.0.0.0\u0026#34;, port=9898, workers=1) # Client import requests requests.post( \u0026#34;http://0.0.0.0:9898/predict\u0026#34;, json={\u0026#34;text\u0026#34;: discharge_summary} ) Data Processing # Jupter Notebook # 在cell中执行shell\n!pwd #单条shell命令 %%bash #整个cell作为shell脚本 模块自动重载，否则每次修改需要重启kernel\n%load_ext autoreload %autoreload 2 #每执行一个cell都会重载所有模块 Pandas # 菜鸟教程yyds\n创建Dataframe\n# 从外部读取 read_csv() # sep:分隔符; header:默认是第一行; names:如果指定则说明没有header; read_excel() # 创建空的DataFrame Dataframe(columns=[column_name1, column_name2]) # 根据可迭代对象创建DataFrame Dataframe([{column1:a,column2:b},{}]) # 每个元素是一个Dict，表示一行 Dataframe([[a,b],[c,d],[e,f]]，columns=[\u0026#39;c1\u0026#39;,\u0026#39;c2\u0026#39;]) # 每个元素是一个List，代表一行 # 根据Dict创建DataFrame Dataframe.from_dict({column1:[...],column2:[...]}) #字典的key表示某一列 Dataframe.from_dict({index1:[c1,c2,c3], index2:[c1,c2,c3], ...}) #字典的key表示某一行的索引 添加新的行/列\n# 创建新的列 df[new_column] = constant / df[a]+df[b] / df[a].apply(func) # 老版本的写法 df.loc[:,c] = df[a] + df[b] # 更建议的写法 # 创建新的行 df.loc[len(df)] = Series({column1=x,column2=y,...}) 筛选行/列/元素\n# 索引单行单列 df[column_name]` # 索引某一列 df.loc[idx] # 索引某一行 # 索引单一元素 df.loc[idx, column_name] # 索引某个元素 df.iloc[idx, column_idx] # df.loc[bool_index].values # # 索引多行多列 df.loc[[idx1,idx2]][[column_name1,colunmn_name2]] #索引多行多列 df.loc[[idx1,idx2],[column_name1,colunmn_name2]] #索引多行多列 # 按条件筛选 df.loc[df[a] == df[b],:] # 按列筛选的结果，本质上是一种行索引 更改索引列\ndf[new_column_list] # 重排column df.reset_index(names=[]) # 生成新的索引列，原索引列重命名 统计分析\ndf.value_counts(column_name) df.plot() 判断某个元素是否属于某一列，必须先将该列转化为可迭代对象 Matplotlib # 常用工作流\nimport matplotlib.pyplot as plt plt.pca() #清空画布 plt.plot() #画折线 plt.show() #显示图片（ssh时不可用） plt.savefig(save_path) #保存图片 柱状图/散点图\nplt.bar(bins1,height=hist1) # 柱状图 plt.scatter(x,y,size,color) # 散点图 显示中文字体\nfrom matplotlib.font_manager import FontProperties font = FontProperties(fname=\u0026#34;../PingFang.ttc\u0026#34;, size=10) #配置本地字体 plt.title(title, fontproperties=font) #标题 names = \u0026#34;\\n\u0026#34;.join(string) plt.xticks(range(len(names)), names, fontproperties=font, rotation=90) #横轴 json/yaml # 以json为例，其读写文件需要使用文件句柄\nwith open(filename,\u0026#39;r\u0026#39;) as f: json_dict = json.load(f) #读 with open(filename,\u0026#39;w\u0026#39;) as f: json.dump(json_dict, f, ensure_ascii=False) #写 yaml与json的写法是类似的，只是用到的库是yaml\nyaml校验器\nDeep Learning # Torch # Tensor # 创建tensor\ntorch.tensor() #将其他数据类型（list,array等）转换为张量 torch.empty() torch.zeros() torch.ones() torch.rand() # 均匀分布, 0-1之间 torch.randn() # 正态分布, 均值为0, 方差为1 torch.normal() # 可指定均值和方差的正态分布 torch._() torch.randint() # 需要指定上下界 创建tensor时，需要指定size和dtype 一般size=(x, y, z), dtype=torch.xx float=float32; double=float64; int=int32; long=int64 操作tensor\n#拼接 torch.cat([tensor,...], dim=0) # 在现有的维度上堆叠 torch.stack([tensor,...], dim=0) # 创建一个新的维度，在上面堆叠 torch.nn.utils.rnn.pad_seq([seq_a, seq_b, ...], batch_first=True) # 不等长序列补零后拼接 # 索引 tensor[x,y,z] # 标量索引，索引坐标为(x,y,z)的元素 tensor[[x1,x2],y,z] # 列表索引，索引坐标为(x1,y,z)和(x2,y,z)的元素 tensor[tensor1,tensor2,tensor3] # 张量索引，索引坐标为(x1,y1,z1),...(xn,yn,zn)的元素，tensor必须是一维张量 (tensor \u0026gt; 0.5).nonzero(as_tuple=False) # 获取满足条件的索引 # 扩张 tensor.expand() #沿维度扩张n倍 tensor.repeat(n1, n2) # repeat的维度必须\u0026gt;=原始维度，并且原始的tensor会置于最后 \u0026#39;\u0026#39;\u0026#39; x = randn(dim1,dim2) x.repeat(n1,n2)返回(n1*dim1,n2*dim2) x.repeat(n1,n2,1,1)返回(n1,n2,dim1,dim2) \u0026#39;\u0026#39;\u0026#39; # 转置 tensor.permute(dim1, dim2, dim3, …) tensor.transpose(dim1, dim2) #只能二维 #变形 tensor.view(dim1,dim2,dim3,...) tensor.reshape(dim1,dim2,dim3,...) #计算 tensor.norm(dim, keep_dim=True) #沿指定维度求范数 # 复制+去除梯度 tensor.clone().detatch() 交换维度：permute可以对任意高维矩阵进行转置，transpose只能在两个维度之间转换，其他维度保持不变。 Tensor重排: view更快，reshape分配新的内存，更慢但更通用 Broadcast机制：维度不等的两个Tensor在进行运算时，从后往前遍历各个维度，若两个Tensor在某一维度不等，且较小的Tensor在该维度的长度为1或不存在时，可以Broadcast至相等维度 Model # 注册参数\nmodel.register_buffer(name, tensor) model.register_parameter(name, tensor) nn.Parameter() 模型遍历\nmodel.modules() #遍历model的所有子层，类比DFS搜索，有重复。 model.children() #遍历model的所有浅层 model.parameters() #保存的是Weights和Bais参数的值 模型微调\nfor p in self.parameters(): p.requires_grad = False 显存占用\n模型参数：初始化产生 中间结果：前向传播产生（网络中如果存在一些较长的连接，比如第10层的网络需要使用来自网络第一层的输出结果，这部分的特征图就会一直占用显存） 模型参数的梯度：反向传播产生 优化器状态：例如Adam会保存每个参数的二阶梯度 常见模块的的参数量和计算量\nModule 参数量 Conv2d $C_{out} \\times H_{kernel} \\times W_{kernel} \\times C_{in}$ Linear $C_{out} \\times C_{in}$ MultiHeadAttention $N_{head} \\times (C_{in} \\times C_{query} + C_{in} \\times C_{key} +C_{in} \\times C_{value})$ Dataset \u0026amp; Dataloader # transform: 一般在Dataset中定义，在返回一个Index的sample时进行处理\nbatch_sampler: 从Dataset中获取一个batch的sample, 其中index的获取取决于采样算法\ncollect_function: 将样本变成Batch\n输入：列表，长度为Batch_size，列表的每个元素是字典，代表一个样本 输出：字典，每个键值对是一个类型和对应的Tensor，并且已经有了Batch_size这个维度 [PyTorch DataLoader工作原理可视化](\nPyG: torch_gemotry # 官方文档\nIntroduction by Example Heterogeneous Graph Learning Installation\n根据cuda版本和pytorch版本，选择合适的PyG版本 用whl安装各个PyG依赖包，然后把sparse-conv卸掉 Debug\n报错信息并不一定反映真实情况 在CPU上调试以获取尽可能有效的报错信息 可能是版本问题或者是dtype不一致这种基础错误 PyG对异构图的支持不如同构图完善 优先使用同构图 异构图需要每张图都包含所有类型的节点和边，如果没有就用torch.empty()填充 异构图的边类型命名不能含有数字 子图采样\ntorch_geometric.utils提供了若干用于从大图中进行子图采样的API\nAPI subgraph 只包含给点节点的子图；自动滤除没有边连接的节点；返回用全局索引表达的边和边属性 k_hop_subgraph 会给k-hop节点分配新的局部索引；edge_index是由新的局部索引来表达；edge_mask是按原始边索引的相对位置来排布的，用于筛选这些边对应的特征； GNN设计\n在pyg的设计理念中，边是有向的，消息传递是沿着source节点到target节点，如果是无向边，需要自己设置两条边\nExperiemnt # TorchMetrics # quick start\n预定义指标\n函数式\nimport torch import torchmetrics preds = torch.randn(10, 5).softmax(dim=-1) target = torch.randint(5, (10,)) acc = torchmetrics.functional.accuracy(preds, target, task=\u0026#34;multiclass\u0026#34;, num_classes=5) 对象式\nimport torch import torchmetrics metric = torchmetrics.classification.Accuracy(task=\u0026#34;multiclass\u0026#34;, num_classes=5) n_batches = 10 for i in range(n_batches): # simulate a classification problem preds = torch.randn(10, 5).softmax(dim=-1) target = torch.randint(5, (10,)) # metric on current batch acc = metric(preds, target) print(f\u0026#34;Accuracy on batch {i}: {acc}\u0026#34;) # metric on all batches using custom accumulation acc = metric.compute() print(f\u0026#34;Accuracy on all data: {acc}\u0026#34;) # Resetting internal state such that metric ready for new data metric.reset() 自定义指标\n在__init__中定义不同batch计算结果的聚合方式，在update中定义每个batch的前向计算，在compute中定义所有batch计算完成后的后处理。\n方式一：在每个batch进行指标计算，后处理时聚合\nfrom torchmetrics import Metric class MyAccuracy(Metric): def __init__(self, **kwargs): super().__init__(**kwargs) self.add_state(\u0026#34;correct\u0026#34;, default=torch.tensor(0), dist_reduce_fx=\u0026#34;sum\u0026#34;) self.add_state(\u0026#34;total\u0026#34;, default=torch.tensor(0), dist_reduce_fx=\u0026#34;sum\u0026#34;) def update(self, preds: Tensor, target: Tensor) -\u0026gt; None: preds, target = self._input_format(preds, target) if preds.shape != target.shape: raise ValueError(\u0026#34;preds and target must have the same shape\u0026#34;) self.correct += torch.sum(preds == target) self.total += target.numel() def compute(self) -\u0026gt; Tensor: return self.correct.float() / self.total 方式二：在每个batch保存结果，最终一起计算\nfrom torchmetrics import Metric from torchmetrics.utilities import dim_zero_cat class MySpearmanCorrCoef(Metric): def __init__(self, **kwargs): super().__init__(**kwargs) self.add_state(\u0026#34;preds\u0026#34;, default=[], dist_reduce_fx=\u0026#34;cat\u0026#34;) self.add_state(\u0026#34;target\u0026#34;, default=[], dist_reduce_fx=\u0026#34;cat\u0026#34;) def update(self, preds: Tensor, target: Tensor) -\u0026gt; None: self.preds.append(preds) self.target.append(target) def compute(self): # parse inputs preds = dim_zero_cat(self.preds) target = dim_zero_cat(self.target) # some intermediate computation... r_preds, r_target = _rank_data(preds), _rank_dat(target) preds_diff = r_preds - r_preds.mean(0) target_diff = r_target - r_target.mean(0) cov = (preds_diff * target_diff).mean(0) preds_std = torch.sqrt((preds_diff * preds_diff).mean(0)) target_std = torch.sqrt((target_diff * target_diff).mean(0)) # finalize the computations corrcoef = cov / (preds_std * target_std + eps) return torch.clamp(corrcoef, -1.0, 1.0) Tensorboard/wandb/Swanlab # Tensorboard\nfrom torch.utils.tensorboard import SummaryWriter writer = SummaryWriter(log_dir=log_dir) # 创建tensorboard的指标记录器 writer.add_scalar(loss_name, loss_val, n_iter) # 在相应的地方保存需要可视化的指标 端口映射与浏览器访问\nssh -L 16006:127.0.0.1:6006 -p server_port username@server_ip # on the local PC tensorboard --logdir log --port=6006 # on the remote server Wandb\nSwanlab\n强烈推荐\nAI Infra for LLM # LLM Download # Huggingface\nfrom huggingface_hub import hf_hub_download from huggingface_hub import snapshot_download os.environ[\u0026#34;HF_ENDPOINT\u0026#34;] = \u0026#34;https://hf-mirror.com\u0026#34; repo_id = \u0026#34;mistralai/Ministral-8B-Instruct-2410\u0026#34; snapshot_download( repo_id=repo_id, local_dir=\u0026#34;models/\u0026#34; + repo_id.split(\u0026#34;/\u0026#34;)[-1], token=token, ) 国内访问需要指定镜像源 部分LLM需要申请，在下载时需要传入huggingface token ModelScope\n国内模型推荐使用该网站，速度较快\nTransformers # AutoModel\n如果不需要调整模型结构，那么只需要使用AutoClass三件套AutoConfig、AutoTokenizer和AutoModel\nAutoModel不会对模型架构进行限制，只是根据路径名称去查找相应的模型架构和权重\nmodel = AutoModelForSequenceClassification.from_pretrained(\u0026#34;google-bert/bert-base-cased\u0026#34;, num_labels=5) 如果要实现更加定制化的操作，PLM也可以作为Backbone组件，实现自定义结构的下游任务模型\nCustom Model\n创建自己的模型\n继承PLM对应的PreTrainedModel，并传入同一个Config 可以使用init_weights，会根据config的参数来对特定的层做初始化 可以使用from_pretrained和save_pretrain方法 class CustomModel(PreTrainedModel): def __init__(self, config): super().__init__(config) self.prtrained_model = ResNet(config) self.classifier = Linear(config.hidden_size, config.num_labels) self.init_weights() def forward(self, tensor, labels=None): hidden_states = self.prtrained_model(tensor) logits = self.classifier(hidden_states) if labels is not None: loss = torch.nn.cross_entropy(logits, labels) return {\u0026#34;loss\u0026#34;: loss, \u0026#34;logits\u0026#34;: logits} return {\u0026#34;logits\u0026#34;: logits} config = AutoConfig.from_pretrained(model_name_or_path, num_labels=num_labels) tokenizer = AutoTokenizer.from_pretrained(model_name_or_path) model = CustomModel.from_pretrained(\u0026#39;pretrained_model\u0026#39;, config) Datasets # 将自己的Dataset封装成datasets库格式\nAccelerate # 导入并实例化Accelerator对象 去除所有的model.to(device)和batch.to(device) 用accelerator.prepare将model, dataloader, optimizer并行化 用accelerator.backward(loss)替代loss.backward() + from accelerate import Accelerator + accelerator = Accelerator() - device = torch.device(\u0026#34;cuda\u0026#34;) - model.to(device) + train_dataloader, eval_dataloader, model, optimizer = accelerator.prepare( + train_dataloader, eval_dataloader, model, optimizer) for epoch in range(num_epochs): for batch in train_dataloader: - batch = {k: v.to(device) for k, v in batch.items()} outputs = model(**batch) loss = outputs.loss - loss.backward() + accelerator.backward(loss) optimizer.step() lr_scheduler.step() optimizer.zero_grad() # 保存模型 if args.output_dir is not None and args.num_train_epochs \u0026gt; 0: accelerator.wait_for_everyone() unwrapped_model = accelerator.unwrap_model(model) unwrapped_model.save_pretrained(args.output_dir, save_function=accelerator.save) 基于上述代码修改，可以在命令行使用多卡或者单卡进行模型的训练\nAccelerate和tensor.to(device)不是互斥的，某些情况下仍然需要手动修改device 在命令行指定显卡\naccelerate launch --multi_gpu --gpu_ids=\u0026#34;0,1\u0026#34; --num_processes=2 --num_machines=1 main.py # 单机多卡 CUDA_VISIBLE_DEVICES=0 python main.py # 单机单卡 VLLM # 主要针对Decoder-only的LLM的KV Cache做了加速，对Encoder-only的PLM作用不大\nVLLM支持加速的模型主要分为三种：\nVLLM原生支持，见 vllm/model_executor/models Transformers中的模型部分支持（主要是Decoder-only） Pytorch模型：需要人工编写相关代码，见在VLLM中实现基本模型 多卡推理\nData Parallel\nLLaMa Factory # VERL # File System # 相关链接\n正则匹配与路径操作 # 正则\nre\nimport re text = \u0026#34;Hello, my email is example@email.com\u0026#34; pattern = r\u0026#39;\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b\u0026#39; # 使用 re.findall 匹配所有符合模式的子字符串，以列表返回 matches = re.findall(pattern, text) # 使用 re.sub 将指定模式的子串替换为新子串 redacted_text = re.sub(pattern, \u0026#34;REDACTED\u0026#34;, text) # 使用 re.split 按指定模式的子串分割文本 parts = re.split(pattern, text) # 使用 re.search 搜索文本, 返回第一个匹配项的首尾位置 match = re.search(pattern, text) # 使用 re.match 验证字符串是否符合模式 bool(re.match(pattern, number)) 正则匹配，格式是字符+限定符\n限定符\n? 0或1个 * 任意个 + 1个以上 {m,n} m-n个 字符、元字符\n[a-zA-Z0-9][abc] 小写或大写或数字a或b或c ; 否定:[^a-z] a|b|c a或b或c \\w 单词（英文/数字/下划线） \\d 数字 \\s 空格（包括换行等） \\b 边界 e.g.\\bword\\b . 任意字符 正则表达式在线测试工具 正则表达式里有转义符\u0026quot;\u0026quot;时，应该在字符串前加“r” glob\n包括*、**、? 、[ ]这四个通配符。\n* 匹配0个或多个字符\n** 匹配所有文件、目录、子目录和子目录里的文件\n? 匹配一个字符\n[] 匹配指定范围内的字符，如[0-9]匹配数字，[a-z]匹配小写字母\npathlib\n操作文件路径\np.name #获取文件名 p.suffix #获取文件后缀 # 工作目录与包管理 # 查看和更改工作目录，以及工作目录的文件情况\nos.getcwd(path) #查看工作目录 os.chdir(path) #改变工作目录 os.listdir(path) #浏览工作目录 os.walk(path) # 遍历目录 os.mkdir(path) #创建文件夹 os.remove(path) #删除文件 文件的增删改查 # 文件/文件夹的复制、删除、重命名\nshutil.copy(src, dst) #复制文件 shutil.copytree(src, dst) #复制文件夹 shutil.move(src, dst) #重命名文件/文件夹 shutil.rmtree(src, dst) #删除文件夹 os.remove()方法只能删除某个文件; os.mdir()只能删除某个空文件夹 压缩 shutil.make_archive(base_name, format=\u0026#39;zip\u0026#39;) ipdb\nipdb.set_trace() 代码会在执行到断点处时暂停，可通过vscode内置terminal查看各个变量的状态\n","date":"25 April 2025","externalUrl":null,"permalink":"/software/python/","section":"Software","summary":"\u003cp\u003e推荐链接\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://liaoxuefeng.com/books/python/reg-exp/index.html\" target=\"_blank\"\u003e廖雪峰的官方网站\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eGrammar \n    \u003cdiv id=\"grammar\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#grammar\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003eBasic Data Class \n    \u003cdiv id=\"basic-data-class\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#basic-data-class\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003eTips\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eList\u003c/td\u003e\n          \u003ctd\u003e有序，但查找效率非常低\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eDict\u003c/td\u003e\n          \u003ctd\u003e有序，但并非插入顺序\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eSet\u003c/td\u003e\n          \u003ctd\u003e无序，顺序是随机的\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3 class=\"relative group\"\u003eFunction \n    \u003cdiv id=\"function\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#function\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\u003ch4 class=\"relative group\"\u003e函数签名 \n    \u003cdiv id=\"函数签名\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%87%bd%e6%95%b0%e7%ad%be%e5%90%8d\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Plain\" data-lang=\"Plain\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edef f(x: int, b: float):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    pass\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 class=\"relative group\"\u003e参数组合 \n    \u003cdiv id=\"参数组合\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%8f%82%e6%95%b0%e7%bb%84%e5%90%88\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cp\u003e定义函数时，可使用\u003cem\u003e\u003cstrong\u003e必选参数、默认参数、可变参数、关键字参数和命名关键字参数\u003c/strong\u003e\u003c/em\u003e。\u003c/p\u003e","title":"Python","type":"software"},{"content":"","date":"25 April 2025","externalUrl":null,"permalink":"/software/","section":"Software","summary":"","title":"Software","type":"software"},{"content":"","date":"25 April 2025","externalUrl":null,"permalink":"/","section":"Xu Zhang's Blog","summary":"","title":"Xu Zhang's Blog","type":"page"},{"content":" ICD coding # ICD-9: ICD-9官方网站\nMIMIC-III official splits\nMIMIC-III Leaderboard\nMIMIC-IV official splits\nUMLS: Quick Start\nMetathesaurus: Terms and codes from many vocabularies, including CPT®, ICD-10-CM, LOINC®, MeSH®, RxNorm, and SNOMED CT® Semantic Network: semantic types \u0026amp; their relationships (semantic relations) SPECIALIST Lexicon and Lexical Tools: NLP tools ICD-10: ICD10官方API\nMetrics: 单标签多分类：precision = recall = micro f1 = accuracy\nBlogs \u0026amp; Papers:\nLLM for ICD\nKG for ICD\n","date":"10 April 2025","externalUrl":null,"permalink":"/research/med_nlp/","section":"Research","summary":"\u003ch2 class=\"relative group\"\u003eICD coding \n    \u003cdiv id=\"icd-coding\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#icd-coding\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eICD-9: \u003ca href=\"https://archive.cdc.gov/#/details?url=https://www.cdc.gov/nchs/icd/icd9cm.htm\" target=\"_blank\"\u003eICD-9官方网站\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/jamesmullenbach/caml-mimic\" target=\"_blank\"\u003eMIMIC-III official splits\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://paperswithcode.com/sota/medical-code-prediction-on-mimic-iii\" target=\"_blank\"\u003eMIMIC-III Leaderboard\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/thomasnguyen92/MIMIC-IV-ICD-data-processing\" target=\"_blank\"\u003eMIMIC-IV official splits\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eUMLS: \u003ca href=\"https://www.nlm.nih.gov/research/umls/quickstart.html\" target=\"_blank\"\u003eQuick Start\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eMetathesaurus\u003c/strong\u003e: Terms and codes from many vocabularies, including CPT®, ICD-10-CM, LOINC®, MeSH®, RxNorm, and SNOMED CT®\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSemantic Network\u003c/strong\u003e: semantic types \u0026amp; their relationships (semantic relations)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSPECIALIST Lexicon and Lexical Tools\u003c/strong\u003e: NLP tools\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eICD-10: \u003ca href=\"https://icd.who.int/icdapi\" target=\"_blank\"\u003eICD10官方API\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eMetrics: \u003ca href=\"https://developer.aliyun.com/article/1258690\" target=\"_blank\"\u003e单标签多分类：precision = recall =  micro f1 = accuracy\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBlogs \u0026amp; Papers:\u003c/p\u003e","title":"Medical NLP","type":"research"},{"content":"","date":"10 April 2025","externalUrl":null,"permalink":"/research/","section":"Research","summary":"","title":"Research","type":"research"},{"content":" Shell # Shell是用户和操作系统之间的媒介，它提供了丰富的接口，以帮助用户使用操作系统。\nShell命令的基本格式是“命令+参数”，参数可以缺省，这些参数随后会被执行该命令的解释器所解析。\n命令本质上是可执行文件，可以通过路径来调用，但大部分时候是以别名的形式调用\npwd sh *.sh python main.py 当连续执行多条命令时，如果用\u0026quot;\u0026amp;\u0026amp;\u0026ldquo;连接，则多条命令依次执行，报错则终止；如果用“||”连接则当任意一条命令执行成功，后续命令都不执行\n在命令结尾加\u0026rdquo;\u0026amp;\u0026quot;，可以使命令挂载到后台执行，从而可以在同一个Shell中并行执行多条命令\n配置默认启动脚本 # 用户使用终端登录Linux服务器时，通常只会默认执行~/.bash_profile.sh，而conda的自启动一般写在~/.bashrc中，所以一般会在~/.bash_profile.sh同时运行~/.bashrc\nif [ -f ~/.bashrc ]; then source ~/.bashrc fi 每当重新打开一个新的终端时，则会执行~/.bashrc\nconda自启动\n# \u0026gt;\u0026gt;\u0026gt; conda init \u0026gt;\u0026gt;\u0026gt; # !! Contents within this block are managed by \u0026#39;conda init\u0026#39; !! __conda_setup=\u0026#34;$(CONDA_REPORT_ERRORS=false \u0026#39;/data/shaozhisun/anaconda3/bin/conda\u0026#39; shell.bash hook 2\u0026gt; /dev/null)\u0026#34; if [ $? -eq 0 ]; then \\eval \u0026#34;$__conda_setup\u0026#34; else if [ -f \u0026#34;/data/shaozhisun/anaconda3/etc/profile.d/conda.sh\u0026#34; ]; then . \u0026#34;/data/shaozhisun/anaconda3/etc/profile.d/conda.sh\u0026#34; CONDA_CHANGEPS1=false conda activate base else export PATH=\u0026#34;/data/shaozhisun/anaconda3/bin:$PATH\u0026#34; fi fi unset __conda_setup Oh My ZSH # 配置代码高亮和自动补全插件\nShell脚本 # 尽管Linux系统中已经实现了大量的Shell脚本供用户调用，但有些时候我们仍然需要自己编写Shell脚本，以实现定制化的需求。\n如果希望shell脚本可以作为可执行文件调用，则需要在第一行指定解释器\n#!/bin/bash 当作为 否则，只需要在调用该脚本时，显式地指定解释器即可；bash和zsh的语法比sh更全\nsh *.sh bash *.sh zsh *.sh 变量的定义和使用 # 变量通过=定义，通过${}调用，通过echo可以将变量输出到控制台\nShell中有两类特殊的变量，字符串和数组。\n字符串区分单引号和双引号，单引号无视一切转义字符和变量引用，双引号则支持转义字符和变量；多个字符串可以拼接，中间不加空格即可\n数组通过()定义，通过${数组名[下标]}访问，${数组名[@]}可获取数组中全部元素\n${#变量名}可以获取指定变量的长度\n环境变量通常是大写，一般定义在~/.bashrc中，每次启动shell时都会导入；export可以显式环境变量，也可以定义临时的环境变量\n定义环境变量的方式 作用域 写在～/.bash_rc里 全局有效，每次启动shell都会导入 export PATH=$PATH:/data/xuzhang/bin 仅当前shell和子进程有效 CUDA_VISIBLE_DEVICES=1,3 python train.py 仅子进程有效 运算符 # 算数运算符一般通过expr命令或者$(())$来实现，运算符的两边需要有空格，双括号中的变量可以不使用$符号前缀\n逻辑运算符一般通过test命令或者[[]]来实现，中括号和运算符的两边需要有空格，双中括号支持更多的逻辑运算符\n流程控制 # 和其他语言类似，包括分支和循环\n分支包括if和case\nif的结束词是fi，即if倒过来\nif condition1 then command1 elif condition2 then command2 else commandN fi 此外也有case，结束词同样是倒过来esac\ncase 变量 in 1) command1 ... commandN ;; 2) ... esac 循环包括for和while，两者都支持break和continue\nfor\nfor 变量 in 数组 do command done while\nwhile condition do done 输入输出 # 输出有echo和printf，其中echo默认不开启转义，需要通过-e开启转义，而printf则支持转义\n两者的输出都可以通过\u0026gt;（覆盖写）或者\u0026gt;\u0026gt;（追加写）重定向到指定的文件\n可以通过反引号来获取指定命令的输出，以字符串的形式返回，\nssh：安全的shell # 建立连接 ssh 用户名@服务器IP 断开连接 ctrl+d或exit断开连接 内网免密登录\n本地生成公钥ssh-keygen -t rsa 上传公钥到服务器的授权列表 SSH配置公钥后仍需要输入密码 跳板机登录\n方式1：两步登录\n首先通过ssh连接跳板机（如果端口号不是ssh的默认端口22，则需要手动指定），然后在跳板机上选择要登录的服务器\n方式2：一步登录\nssh xuzhang@xuzhang@172.16.120.1@bacteria.tech -p2222\nlocal和跳板机之间的免密是通过跳板机的用户界面设置，跳板机和服务器之间的免密是由跳板机的管理员设置。\nMac/Linux OS # 文件系统 # 路径分为绝对路径和相对路径，相对路径是相对于当前工作路径，可通过pwd查看\n备注 绝对路径 /data/xuzhang/\u0026hellip; 相对路径 ~/... 用户根目录 ./ 当前目录 ../ 上一级目录 ../../ 上上一级目录 不涉及文件内容的查看\nls dir # 查看dir内的文件 du -sh # 查看dir的磁盘占用情况 df -h # 查看分区情况 find -name filename # 搜索 对文件的增删改查\ntouch filename # 创建文件 mv raw_file new_dir/new_file # 移动/重命名 cp file1 file2 # 复制，文件夹需要-r rm file/dir # 删除 chmod +x filename # 修改文件的读写权限r (只读)w (写入)x (执行) 对文件内容的查看和修改\ncat file # 本义是“concatenate and print files”，连接和查看多个文件内容，实际多用于查看单个文件内容 head -n 10 # 前10行 tail -n 10 # 后10行 grep -c [exp] # 与正则表达式匹配的行，-c返回计数 wc file # 字数 进程管理 # 杀死僵尸进程\nps aux | grep user_id | grep python | grep Rsl # 搜索某一用户运行的python进程 kill -9 PID # 杀死进程 挂载后台 nohup command \u0026amp;\n显卡占用情况\ngpustat -i # 需要pip安装 端口占用情况\nnetstat -tuln | grep 6006 # 查看6006端口的占用情况 ssh -L 8008:127.0.0.1:8008 xuzhang@172.16.120.1 #将指定端口映射到某个ip 用户管理 # 用户名 whoami``echo $USER root权限 sudo apt install gimp sudo cd /root/ 安装软件或编辑用户主目录以外的文件 修改权限 chmod [num][num][num] 6表示读写，7表示读写和执行；三个数字分别对应用户、用户组、其他用户 修改密码 passwd 退出登录 exit Ctrl+D 关机 shutdown 常用软件 # Zip # 压缩 解压 zip \u0026amp; unzip gzip \u0026amp; gunzip gunzip -r dir 解压文件夹下所有.gz文件 Tmux # Tmux 使用教程\n将会话（Section）和窗口（Terminal Window）解绑\n会话可以随时解绑（不随窗口的关闭而终止）和重新接入 可以同时发起多个会话，并进行任意的垂直和水平拆分 安装 # # Linux sudo apt-get install tmux # Mac brew install tmux CLI使用 # tmux #新建会话 tmux new -s \u0026lt;session-name\u0026gt; #新建会话 tmux detach # 分离会话 tmux ls # 查看所有会话 tmux attach -t 0 #接入会话 tmux rename-session -t 0 \u0026lt;new-name\u0026gt; # 重命名会话 tmux kill-session -t \u0026lt;session-name\u0026gt; # 杀死会话 快捷键 # Ctrl+b是前缀键，用于表示使用快捷键\nCtrl+b+ d detatch 分离当前会话 s 列出所有会话 $ 重命名当前会话 % 左右分屏（百分号的左和右） \u0026quot;\u0026quot; 上下分屏（上引号和下引号） o 切换分屏 [ 上下滚动(q退出) x 关闭分屏窗口 VIM # vim filename # 我只会这一条 正常模式（Normal-mode)\n狂按\u0026lt;Esc\u0026gt;进入 dd剪切一行；yy复制一行；p粘贴；u撤销； 插入模式（Insert-mode)\n按 i 键会进行插入模式，进入编辑状态，通过键盘输入内容。 命令模式（Command-mode)\n先切正常模式，然后按：或/ 进入 未编辑，按q退出；编辑后，wq保存退出，q!不保存强制退出 CUDA # CUDA 是什么 | Chenglu’s Log\nDriver：可通过nvidia-smi查看显卡的驱动和CUDA驱动版本，驱动版本需要高于Runtime版本\nRuntime: 可通过nvcc -V查看，表示CUDA Toolkit的runtime版本，通过CUDA Toolkit installer安装，见usr/local/cuda/include/cuda.h），一些软件会调用Runtime提供的API\n不同应用对CUDA各个层的依赖要求是不同的\nPyTorch会打包所需要的Runtime依赖，不调用本机的CUDA Toolkit，只需要驱动版本满足要求即可。 Tensorflow需要安装相应的Library，例如CuDNN，也会对Runtime有要求 Conda # 选择合适的conda版本，用wget下载并安装，并移除安装包\nmkdir -p ~/miniconda3 wget [url] -O ~/miniconda3/miniconda.sh bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3 rm ~/miniconda3/miniconda.sh 初始化\nsource ~/miniconda3/bin/activate conda init --all 配置基本的参数\nconda config --set auto_activate_base true # 自动激活conda环境 pip config set global.index-url https://mirrors.ustc.edu.cn/pypi/simple #pip换源就够了，从来不用conda 虚拟环境 # anyway，本人只用base\nconda create -n env_name python=3.9 #新建 conda activate env # 激活 conda deactivate # 取消激活 conda remove --name [env_name] --all #删除 Git # Git 基本操作 | 菜鸟教程 (runoob.com)\n初始化 # 基本配置\ngit config --global user.name [name] git config --global user.email [email] 从本地仓库初始化\ngit init # 创建git仓库 touch .gitignore # 修改.gitignore文件在其中写入需要忽略的文件和目录 # \u0026#34;/\u0026#34;开头，从.gitignore所在目录开始匹配 # \u0026#34;/\u0026#34;结尾，只匹配目录，不匹配文件 # \u0026#34;/../\u0026#34;匹配多级目录 # *.filetype，忽略指定类型的文件 # !filetype，不忽略指定类型的文件（如果文件夹已经被忽略，则文件必然被忽略） 一键生成gitignore 克隆远程仓库\ngit clone [url] # 复制仓库 分支管理 # 查看分支\ngit branch # 查看本地分支 git branch -r # 查看远程分支 git branch -a # 查看所有分支 切换分支\n如果是创建新分支，则会保持当前文件状态\ngit checkout -b \u0026lt;branchname\u0026gt; # 创建并切换到分支 如果是切换到已有的分支，则必须先提交，切换到已有分支后，文件会变成目标分支的最后一次提交\ngit add . \u0026amp;\u0026amp; git commit -m [msg] # 切换分支前，首先提交 git checkout [branchname] # 切换分支 git add . \u0026amp;\u0026amp; git commit -m [msg] # 提交分支修改 git checkout main # 切换到主分支 git merge [branch_name] # 合并分支，并手动解决冲突 git add \u0026lt;conflict-file\u0026gt; git commit -m [msg] # 合并与修改应当视为一次新的提交 远程仓库 # git remote add [origin_name] [http/ssh] # 添加远程仓库 git remote -v # 查看远程仓库 git fetch \u0026amp;\u0026amp; git merge [alias]/[branch] # 拉取远程仓库，将远程仓库的指定分支合并到当前分支 git pull [alias] [branch] #将远程仓库的[branch]拉取并合并到当前分支 git add \u0026lt;conflict-file\u0026gt; #解决冲突 git commit -m [msg] # 并提交 git push -u [alias] [branch] # 第一次需要指定远程仓库 git push # 将[branch]推送到[alias]的[branch] 私有仓库 # 在deploy key中上传服务器的公钥即可\nGDown # gdown [url] Gdown下载权限错误\nHugo # Hugo官方文档\n部署 # 将Hugo服务器部署到局域网\nhugo server --bind \u0026#34;0.0.0.0\u0026#34; # 将hugo服务器端口向局域网内所有ip开放 ifconfig | grep 192 # 查看本机在局域网的ip 将静态网站部署到Github Pages\nhugo \u0026amp;\u0026amp; cd public \u0026amp;\u0026amp; git add . \u0026amp;\u0026amp; git commit -m \u0026#39;update\u0026#39; \u0026amp;\u0026amp; git push \u0026amp;\u0026amp; cd .. 主题 # Theme PaperMod 配置简单，但功能较少 Blowfish 推荐 定制化功能 # 公式渲染 在layouts/partials中重写主题的某些文件，以blowfish为例，需要在vendor.html中重写katex部分的js脚本 社交图标 Social Icons SVG 站内搜索 Search Tools原理 iTerm2 # 修改键盘映射\nVscode # 服务器连接失败\n.vscode-sever/bin删除多余文件夹即可\n自用配置 # Theme One Dark Pro Python 编译器+格式化（black, pip安装） Matlab 编译器+gb2312 Latex xelatex Docker # Image/镜像 通过Dockerfile将需要部署的应用打包成Image Container/容器 Docker运行在OS上，Contrainer运行在Docker上 Docker 在相应地OS上安装对应的Docker Dockerfile 配置脚本 网络 # 获取ip\nifconfig 检查连通性\nping [ip] ping [url] 下载 # wget ``http://www.ipcmen.com/testfile.zip`` wget -O wordpress.zip [url] 内网传输 # # sftp sftp user@ip put 文件名 get 文件名 # scp scp src/... tgt/... ","date":"10 March 2025","externalUrl":null,"permalink":"/software/cheatsheet/","section":"Software","summary":"\u003ch2 class=\"relative group\"\u003eShell \n    \u003cdiv id=\"shell\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#shell\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/202410241649045.png\" alt=\"image-20241024164920306\" style=\"zoom: 25%;\" /\u003e\n\u003cp\u003eShell是用户和操作系统之间的媒介，它提供了丰富的接口，以帮助用户使用操作系统。\u003c/p\u003e\n\u003cp\u003eShell命令的基本格式是“命令+参数”，参数可以缺省，这些参数随后会被执行该命令的解释器所解析。\u003c/p\u003e\n\u003cp\u003e命令本质上是可执行文件，可以通过路径来调用，但大部分时候是以别名的形式调用\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epwd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esh *.sh\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epython main.py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当连续执行多条命令时，如果用\u0026quot;\u0026amp;\u0026amp;\u0026ldquo;连接，则多条命令依次执行，报错则终止；如果用“||”连接则当任意一条命令执行成功，后续命令都不执行\u003c/p\u003e\n\u003cp\u003e在命令结尾加\u0026rdquo;\u0026amp;\u0026quot;，可以使命令挂载到后台执行，从而可以在同一个Shell中并行执行多条命令\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003e配置默认启动脚本 \n    \u003cdiv id=\"配置默认启动脚本\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e9%85%8d%e7%bd%ae%e9%bb%98%e8%ae%a4%e5%90%af%e5%8a%a8%e8%84%9a%e6%9c%ac\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e用户使用终端登录Linux服务器时，通常只会默认执行\u003ccode\u003e~/.bash_profile.sh\u003c/code\u003e，而conda的自启动一般写在\u003ccode\u003e~/.bashrc\u003c/code\u003e中，所以一般会在\u003ccode\u003e~/.bash_profile.sh\u003c/code\u003e同时运行\u003ccode\u003e~/.bashrc\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e -f ~/.bashrc \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    source ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e每当重新打开一个新的终端时，则会执行\u003ccode\u003e~/.bashrc\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003econda自启动\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# \u0026gt;\u0026gt;\u0026gt; conda init \u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# !! Contents within this block are managed by \u0026#39;conda init\u0026#39; !!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e__conda_setup\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003eCONDA_REPORT_ERRORS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efalse \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;/data/shaozhisun/anaconda3/bin/conda\u0026#39;\u003c/span\u003e shell.bash hook 2\u0026gt; /dev/null\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e $? -eq \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ae81ff\"\u003e\\e\u003c/span\u003eval \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$__conda_setup\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e -f \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/data/shaozhisun/anaconda3/etc/profile.d/conda.sh\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        . \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/data/shaozhisun/anaconda3/etc/profile.d/conda.sh\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        CONDA_CHANGEPS1\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efalse conda activate base\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        export PATH\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/data/shaozhisun/anaconda3/bin:\u003c/span\u003e$PATH\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eunset __conda_setup\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 class=\"relative group\"\u003eOh My ZSH \n    \u003cdiv id=\"oh-my-zsh\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#oh-my-zsh\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://kirigaya.cn/blog/article?seq=66\" target=\"_blank\"\u003e配置代码高亮和自动补全插件\u003c/a\u003e\u003c/p\u003e","title":"CheatSheet","type":"software"},{"content":" 结构生物化学 # 生物大分子 # 生命体的元素组成和化学组成 # 生命体的元素组成 ：C、H、O和N四种元素，是组成生命体最基本的元素，约占了生物体总质量的99%以上\n生物体的化学组成：水、无机物及有机小分子、生物大分子\n生物大分子的组成 # 生物分子/构件分子 生物大分子 氨基酸 蛋白质 核苷酸 核酸 单糖 多糖 脂肪酸 脂类 生物大分子的构成 # 具有固定结构的单体亚基通过具备有限柔性的共价键连成一体，在非共价相互作用的帮助下形成特定的三维结构，其结构决定了每个大分子的具体功能\n生物大分子三维结构形成的关键作用力 # 弱相互作用是生物大分子高级结构，相互作用和功能的基础。\n弱相互作用包括：氢键，静电互作，疏水互作和范德华互作\n蛋白质 # 蛋白质是由许多氨基酸通过肽键相连形成的大分子含氮化合物。\n蛋白质结构 一级结构 氨基酸排列顺序 每个位置有20种氨基酸的选择，20n次方的序列多样性决定了其功能的多样性\n一级结构决定高级结构 二级结构 多肽链主链原子的局部空间排布，不包括侧链的构象 α－螺旋、β－折叠、β－转角和无规卷曲四种 三级结构 一条多肽链的三维结构 具备三级结构的蛋白质一般都是球蛋白\n球蛋白的疏水性氨基酸大多埋藏在分子内部，形成一个致密的疏水核，这对稳定蛋白质的构象有十分重要的作用\n亲水性氨基酸侧链都分布在蛋白质的表面，它们与水接触并强烈水化，形成亲水的分子外壳，从而使球蛋白可溶于水 按照自己的理解阐述蛋白质如何从其一级结构折叠成具有特定的生物学功能的高级结构。\n氨基酸的排列顺序称为蛋白质的一级结构，一级结构决定高级结构 弱相互作用是生物大分子高级结构形成的基础，包括氢键，静电和疏水互作等 主链氨基酸之间形成稳定的氢键，使蛋白质形成二级结构 主链和侧链氨基酸间的多种弱相互作用，使得蛋白质进一步形成三级结构 疏水的氨基酸互作形成疏水核心，亲水的氨基酸形成亲水表层，使得蛋白质在水溶液中折叠 侧链的大小，极性，带电性质等使得蛋白质折叠后的表面具备相互作用或者酶反应口袋， 促使其具备生物学功能 蛋白质的多条肽链之间相互作用，使蛋白质形成四级结构 蛋白质通过一级，二级，三级和四级结构的层次折叠，形成高级构象。 酶\n酶是在生物体内起催化剂作用的蛋白质或RNA。 酶以有序的顺序作用，催化数以百计的逐步反应，降解营养分子，保存和转化化学能，并能从简单的前体合成生物大分子 酶具有非凡的催化能力，通常远远大于合成或无机催化剂 酶对底物具有高度的专一性，能极大地促进化学反应 在温度和pH非常温和的条件下在水溶液中发挥作用，很少有非生物催化剂具有这些性质 酶的活性中心\n酶的活性中心含有催化残基和结合残基 活性中心是三维的并且有裂隙 由多种弱相互作用来实现与底物的结合 特异性结合依赖活性中心的结构 参与结合底物或催化反应的基团有时被称为酶的活性位点；活性位点只占酶的极少的部位 核酸 # 核酸是由多个核苷酸缩合而成的生物大分子\n核酸的分类 # 核酸 功能 脱氧核糖核酸（DNA） 遗传物质 核糖核酸 （RNA） 传递遗传信息，基因表达和调控 核苷酸的组成 # 核苷酸由核苷和磷酸根组成。 核苷由含氮碱基与脱氧核糖或者核糖通过糖苷键连接而成。\n核酸的组成 # 核酸即多聚核苷酸，是由多个核苷酸通过3′,5′-磷酸 二酯键相连的多聚物，可分为核糖核酸（RNA）和脱氧核糖核酸（DNA）两类\n核酸的结构 # 核酸的结构 一级结构 核苷酸残基具有一定的排列顺序，这种排列顺序就是核酸的一级结构 DNA的二级结构 1953年，Watson和Crick提出了DNA双螺旋模型，开启了分子生物学时代\n嘌呤与嘧啶碱基位于螺旋的内侧，磷酸和脱氧核糖 单位作为不变的骨架组成位于外侧； 链间碱基按A-T形成两对氢键，G-C形成三对氢键 ；疏水碱基堆叠作用。 糖类 # 糖类是自然界分布最广且含量最为丰富的一类生物分子，主要经由光合作用生成：\n糖类是具有至少两个羟基的醛和酮，或水解时能产生这些化合物的物质\n根据聚合度的不同，分为\n单糖/简单糖 不能被水解成更小分子的简单糖类 寡糖 少量单糖残基以糖苷键连接而成的短链，水解后产生单糖 多糖 由单糖残基组成的长链，分子量大于20,000，水解后能产 生单糖或其衍生物 糖复合物 与非糖物质结合的糖 脂质 # 脂质是脂肪酸和醇所形成的酯类及其衍生物。\n脂肪酸：脂肪酸是由一条长的烃链（尾）和一个末端羧基（头）组成的羧酸\n含一个或多个双键的为不饱和脂肪酸，对人体有重要营养价值。 只含一个双键的脂肪酸为单不饱和脂肪酸 含有两个或两个以上双键的称多不饱和脂肪酸| 脂肪/甘油三脂：由一分子甘油和三分子脂肪酸通过脂键缩合合成。\n甘油磷脂：属于磷脂，结构：甘油的第三个羟基被磷酸化，另外两个羟基被脂肪酸酯化。\n甘油磷脂可以分为两部分：一部分由两个长长的非极性的碳氢链构成，具有疏水性质，形象的表示为疏水尾巴；另一部分由极性的磷酸化X基团构成， 形象的称为极性头部。这种两性分子，特别适合做生物膜的骨架，因此广泛存在于各种生物膜中\n生物膜流动镶嵌模型 # 细胞膜结构是由液态的脂类双分子层中镶嵌可以移动的球形蛋白质而形成的。\n脂类物质分子的双层，形成了膜的基本结构的基本支架 而膜的蛋白质则和脂类层的内外表面结合，或嵌入脂类层，或者贯穿脂类层而部分地露在膜的内外表面 磷脂和蛋白质都有一定的流动性，使膜结构处于不断变动的状态。 分子生物学 # 细菌与噬菌体 # 名词 解释 温和噬菌体 有些噬菌体在侵入细菌后，将它们的核酸整合在寄主染色体上，同寄主细胞同步复制，并传给子代细胞，寄主细胞不裂解，这类噬菌体称为温和噬菌体。 溶源菌 含有温和噬菌体的寄主细菌则称为溶源菌。 噬菌体小组 20世纪中期形成的一个非正式的科学家组织，研究细菌和噬菌体的遗传学，极大地推动了分子生物学的发展。\n核心人物有德尔布吕克、卢里亚和赫尔希。 列举出3条源自细菌和噬菌体的遗传学研究而诞生的重大生命科学的研究技术或工具。（答出一条2分）\nPCR、质粒构造、基因克隆技术、限制性内切酶、基因表达调控研究、基因编辑\n线虫 # 1）线虫作为模式生物有何优势？\n遗传学优势：基因组小（约20,000个基因）；自交繁殖，易产生纯合基因； 生理学优势：生命周期短（从受精卵到成虫只需约3天）；身体透明，便于观察；细胞谱系确定；易于大规模培养； 2）请列举出利用线虫作为研究体系所取得的两项诺贝尔奖级别的重大科学发现。\n2002，“器官发育和程序性细胞死亡的遗传调控机制”的研究。\n2006，“RNA干扰（RNAi）机制”，双链RNA可以沉默特定基因的表达。\nDNA的复制、转录、翻译 # 名词 解释 复制叉 DNA复制时在DNA链上通过解旋、解链和SSB蛋白的结合等过程形成的Y字母状结构。 引物 一段较短的单链DNA或RNA，它能与DNA的一条链配对，提供3’-羟基末端以作为DNA聚合酶合成DNA链的起始点。 前复制体 在DNA复制起始过程中在复制起点部位形成的蛋白质复合物。 前导链 在DNA复制的过程中，与复制叉运动方向相同，以5’→3’方向连续合成的DNA链。 冈崎片段 由于DNA复制过程只能由5’→3’方向合成，因此一条链能够连续合成，另一条链分段合成，其中每一段短链称为冈崎片段 基因 是产生一条多肽链或功能RNA分子所必需的全部核苷酸序列。 DNA变性 DNA碱基对的氢键断裂，双链变成单链，从而使核酸的天然构象和性质发生改变。 重组DNA技术 是将不同的DNA片段（例如每个基因或基因片段）按照科学家预先的设计定向连接起来（或插入特定的质粒载体），在特定的受体细胞中同时复制并得到表达，产生影响受体细胞的新的遗传性状的技术。 聚合酶链式反应（PCR） 模拟体内DNA复制方式，在体外的试管中选择性地扩增模板DNA分子特定区域的技术。\n需要耐热的DNA聚合酶、模板DNA分子、两条单链DNA引物、和4种脱氧核苷酸。 核酶 具有催化功能的小分子RNA。 逆转录酶/反转录酶 又称为依赖RNA的DNA聚合酶。该酶以RNA 为模板，以dNTP 为底物，tRNA为引物，根据碱基配对的原则，按5\u0026rsquo;-3\u0026rsquo;方向合成一条与RNA 模板互补的DNA 单链。 请详细描述DNA复制的主要过程？\n解旋： DNA解旋酶: 解开双螺旋结构，将两条DNA链分开。 单链DNA结合蛋白 (SSB): 防止分离的单链DNA重新结合，保持单链状态。 拓扑异构酶： 缓解解旋过程中产生的DNA缠绕压力，防止DNA断裂。 引物合成： 引物酶： 合成短的RNA引物，为DNA聚合酶提供起始点。 DNA合成 : DNA聚合酶：以引物为起点，沿着模板链以5’到3’方向合成新的互补链。 先前链： 与模板链方向一致，DNA聚合酶可以连续合成。 滞后链：与模板链方向相反，DNA聚合酶以片段形式合成，称为冈崎片段。 冈崎片段连接: DNA连接酶: 将冈崎片段连接成完整的滞后链。 校对: DNA聚合酶: 拥有校对功能，识别并修复复制过程中的错误。 在真核生物的DNA复制的过程中，有哪几种酶参与，分别发挥何种功能？\n解旋酶：解开双螺旋DNA，将两条链分开，形成复制叉。\n单链DNA结合蛋白，SSB：防止分离的单链DNA重新结合，保持单链状态。\n拓扑异构酶：缓解解旋过程中产生的DNA缠绕压力，防止DNA断裂。\n引物酶：合成短的RNA引物，为DNA聚合酶提供起始点。\nDNA聚合酶：识别模板链上的碱基，并添加相应的核苷酸，形成新的DNA链；拥有校对功能，识别并修复复制过程中的错误。\nDNA连接酶：将冈崎片段连接成完整的滞后链。\n请简要说明中心法则的遗传信息流。\nDNA → RNA → 蛋白质\n遗传信息从DNA流向RNA，再从RNA流向蛋白质。\nDNA复制： DNA分子通过复制过程产生两个完全相同的DNA分子，保证遗传信息的完整传递。 转录： DNA序列被转录成RNA分子。这个过程由RNA聚合酶催化，它利用DNA模板合成一个互补的RNA分子。 翻译 ：RNA分子被翻译成蛋白质分子。这个过程由核糖体催化，它读取RNA分子上的密码子，并根据密码子决定蛋白质氨基酸序列。 中心法则的补充\n逆转录 ：一些病毒可以利用逆转录酶将RNA逆转录成DNA，这一过程补充了中心法则。 RNA复制：一些病毒可以利用RNA复制酶将RNA复制成新的RNA分子，这一过程也补充了中心法则。 DNA和RNA的分子结构 # 请描述核苷与核苷酸之间的结构差异。\n核苷和核苷酸都是构成核酸（DNA和RNA）的基本结构单元。\n核苷是核苷酸的前体，缺少磷酸基团；核苷酸是核酸的组成单元，包含磷酸基团。\n特征 核苷 核苷酸 结构 戊糖 + 碱基 戊糖 + 碱基 + 磷酸基团 连接方式 糖苷键 糖苷键 + 磷酸酯键 功能 核酸的基本组成单元 核酸的基本组成单元；参与能量代谢、信号传递等 请描述DNA双螺旋即DNA二级结构的主要特征。\n双螺旋的两条核苷酸链依靠碱基之间的配对而反向平行结合在一起； 碱基在内侧，磷酸与核糖在外侧； 在生命体外和体内，为什么DNA分子都比RNA分子稳定？\n脱氧核糖 vs. 核糖:：核糖比脱氧核糖多一个羟基，更容易发生水解。 尿嘧啶vs胸腺嘧啶：尿嘧啶比胸腺嘧啶更容易发生水解，也降低了RNA的稳定性。 双螺旋vs单链： DNA分子是双螺旋结构，更稳定；而RNA分子通常以单链结构存在，其稳定性远不如双螺旋DNA。 生物酶：体内环境中的酶类也保护了DNA分子，使其不易被降解，同时会降解RNA，使其作用时间短暂 修复机制：DNA分子有修复机制，RNA修复机制不完善，更容易降解 染色质/染色体 # 名词 解释 核小体 组成真核生物染色质的基本单位，由一段DNA分子缠绕组蛋白核心8聚体。\n组蛋白核心包括H2A, H2B, H3, H4，都是2个分子。 异染色质 异染色质指间期细胞核内染色质纤维折叠压缩程度高，处于聚缩状态，用碱性染料染色时着色较深，在电镜下电子密度较高的染色质。通常不发生转录。 端粒 是存在于真核细胞线状染色体末端的一小段DNA-蛋白质复合体，它与端粒结合蛋白一起构成了特殊的“帽子”结构，作用是保持染色体的完整性。 端粒酶 是负责维持真核细胞中染色体末端的端粒长度的一种具有反转录活性的酶，由RNA模板和催化蛋白构成。 请描述常染色质和异染色质的区别。\n常染色质是基因活跃的区域，允许基因转录和复制，而异染色质是基因沉默的区域，限制基因表达和复制。这两种染色质状态在细胞功能中扮演着重要角色，并通过动态调节来控制基因表达和细胞发育。\n特征 常染色质 异染色质 结构 松散 紧密 染色特性 染色较浅 染色较深 基因密度 基因密度较高，包含大量编码蛋白质的基因 基因密度较低，包含较少的编码蛋白质的基因，更多的是重复序列和转座子 基因活性 基因转录活跃 基因活性低，基因转录被抑制或很少 复制时间 在细胞周期中较早复制 在细胞周期中较晚复制 什么是端粒？为何大肠杆菌细胞不需要端粒酶？\n端粒是真核生物染色体末端的保护结构，可以保护染色体末端免受降解和融合，并确保染色体在细胞分裂过程中完整地复制，对染色体稳定性和细胞寿命至关重要。 大肠杆菌作为原核生物，其染色体是环状的，没有端粒结构，因此不需要端粒酶。 什么是组蛋白密码？组蛋白上发生的四种重要的蛋白质翻译后修饰是什么？分别发生在哪几种氨基酸残基的侧链上?\n组蛋白密码是指组蛋白上的多种蛋白质翻译后修饰，它决定染色质的活性状态，进而影响基因的表达。\n甲基化：主要发生在组蛋白H3和H4的赖氨酸精氨酸残基上\n乙酰化：主要发生在组蛋白H3和H4的赖氨酸残基上\n磷酸化：主要发生在组蛋白H3的丝氨酸，苏氨酸、酪氨酸残基上\n泛素化 ：主要发生在组蛋白H2A和H2B的赖氨酸残基上\n基因突变与修复 # 名词 解释 基因 是产生一条多肽链或功能RNA分子所必需的全部核苷酸序列 转座 一种特殊的遗传重组，将特定的遗传因子从DNA（或基因组）上一个地方移动到另一个地方 转座子/转座因子 可移动的遗传因子 导致基因突变的因素有哪些？请分类列举。\n自发突变：复制错误、碱基的自然损伤 诱发突变 物理因素：电离辐射，紫外线辐射 化学因素：碱基类似物，烷化剂，嵌入剂 生物因素：病毒感染 在细胞中，哪些生理条件下或应激条件下会发生同源重组？\n生理条件：DNA损伤修复、减数分裂、免疫球蛋白基因重排 应激条件：氧化应激、紫外线辐射、化学物质 如何理解生命和生物多样性依赖于突变和突变修复之间的良好平衡？\n突变是生命进化的源泉，是生物多样性的基础，它产生新的性状，可能是有益、中性或有害的。\n突变修复机制（例如DNA修复酶、错配修复等）保证基因组的稳定性，维护生命体的正常生存。\n如果突变率过高，基因组会快速积累有害突变，导致生物体死亡或无法生存；如果突变率过低，生物体将无法获得新的基因，难以适应环境变化，最终也会导致灭绝。\n生命需要在突变和修复之间保持平衡，才能保证物种的进化和延续。\n细胞生物学 # 细胞质膜/细胞膜 # 为细胞的生命活动提供相对稳定的内环境 选择性的物质运输 提供细胞识别位点，完成信息跨膜传导 为多种酶提供结合与反应位点 介导细胞与细胞、细胞与胞外基质间连接 参与形成细胞表面特化结构 膜蛋白的异常与某些遗传病、恶性肿瘤、自身免疫病甚至神经退行性疾病相关 物质的跨膜运输\n被动运输（包括简单扩散和协助扩散） 主动运输 胞吞与胞吐作用 细胞质基质 # 许多中间代谢过程都发生在细胞质基质中\n如糖酵解过程、磷酸戊糖途径、糖醛酸途径、糖原的合成与部分分解过程\n蛋白质合成和脂肪酸合成的场所\n与细胞质骨架相关的功能\n与维持细胞形态、运动、胞内物质运输及能量传递等过程相关\n细胞结构体系的组织者，为细胞质基质中其他成分和细胞器提供锚定位点\n细胞质基质中蛋白质的翻译后修饰、选择性降解等\n膜性细胞器和无膜细胞器 # 内质网 # 内质网是细胞内蛋白质和脂类的合成基地 糙面内质网上附着有大量核糖体，合成膜蛋白和分泌蛋白 光面内质网上无核糖体，为细胞内外糖类和脂类的合成和转运场所。 内质网是蛋白质分泌转运途径中行使质量监控的重要场所 其他功能 肝细胞的解毒作用 肌质网Ca2+储存与浓度调节 糖原代谢 高尔基体 # 高尔基体是细胞内大分子加工、转运的枢纽\n对内质网合成的蛋白质进行加工、分类与包装，然后定向转运 对内质网合成的一部分脂质向细胞质膜和溶酶体膜等部位转运 细胞内糖类合成的工厂 溶酶体 # 细胞内的消化作用，可概括成内吞作用、 吞噬作用和自噬作用3种途径\n线粒体 # 合成ATP，为细胞的活动提供了化学能量\n叶绿体 # 进行光合作用\n细胞骨架 # 微管 # 决定膜封闭细胞器的位置和直接的细胞内转运\n微丝 # 由肌动蛋白丝组成，决定了细胞表面的形状，是全细胞运动所必需的\n中间丝 # 又称中间纤维\n提供机械稳定性 维持细胞核膜稳定 参与细胞连接 参与信号转导 参与细胞分化 细胞核 # 核被膜 # 构成了核、质之间的天然选择性屏障； 调控细胞核内外的物质交换和信息交流 主要有3种结构组分：双层核膜、核孔复合体与核纤层\n核孔/核孔复合体\n双功能（被动扩散/主动运输）、双向性（出/入）的亲水性核质交换通道\n核纤层\n结构支撑 调节基因表达 调节DNA 修复 与细胞周期有关 核仁 # 核糖体的生物发生： 包括rRNA 的合成、加工和核糖体亚单位的组装 涉及mRNA 的输出与降解 ","date":"28 June 2024","externalUrl":null,"permalink":"/course/biomed/","section":"Course","summary":"\u003ch2 class=\"relative group\"\u003e结构生物化学 \n    \u003cdiv id=\"结构生物化学\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%bb%93%e6%9e%84%e7%94%9f%e7%89%a9%e5%8c%96%e5%ad%a6\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003e生物大分子 \n    \u003cdiv id=\"生物大分子\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%94%9f%e7%89%a9%e5%a4%a7%e5%88%86%e5%ad%90\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\u003ch4 class=\"relative group\"\u003e生命体的元素组成和化学组成 \n    \u003cdiv id=\"生命体的元素组成和化学组成\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%94%9f%e5%91%bd%e4%bd%93%e7%9a%84%e5%85%83%e7%b4%a0%e7%bb%84%e6%88%90%e5%92%8c%e5%8c%96%e5%ad%a6%e7%bb%84%e6%88%90\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cp\u003e生命体的元素组成 ：C、H、O和N四种元素，是组成生命体最基本的元素，约占了生物体总质量的99%以上\u003c/p\u003e\n\u003cp\u003e生物体的化学组成：水、无机物及有机小分子、生物大分子\u003c/p\u003e\n\n\u003ch4 class=\"relative group\"\u003e生物大分子的组成 \n    \u003cdiv id=\"生物大分子的组成\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%94%9f%e7%89%a9%e5%a4%a7%e5%88%86%e5%ad%90%e7%9a%84%e7%bb%84%e6%88%90\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e生物分子/构件分子\u003c/th\u003e\n          \u003cth\u003e生物大分子\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e氨基酸\u003c/td\u003e\n          \u003ctd\u003e蛋白质\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e核苷酸\u003c/td\u003e\n          \u003ctd\u003e核酸\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e单糖\u003c/td\u003e\n          \u003ctd\u003e多糖\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e脂肪酸\u003c/td\u003e\n          \u003ctd\u003e脂类\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch4 class=\"relative group\"\u003e生物大分子的构成 \n    \u003cdiv id=\"生物大分子的构成\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%94%9f%e7%89%a9%e5%a4%a7%e5%88%86%e5%ad%90%e7%9a%84%e6%9e%84%e6%88%90\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cp\u003e具有固定结构的\u003cstrong\u003e单体亚基\u003c/strong\u003e通过具备有限柔性的\u003cstrong\u003e共价键\u003c/strong\u003e连成一体，在\u003cstrong\u003e非共价相互作用\u003c/strong\u003e的帮助下形成特定的\u003cstrong\u003e三维结构\u003c/strong\u003e，其结构决定了每个大分子的具体功能\u003c/p\u003e","title":"Biomed","type":"course"},{"content":"","date":"28 June 2024","externalUrl":null,"permalink":"/course/","section":"Course","summary":"","title":"Course","type":"course"},{"content":" CT Reconstruction # Analytical CT reconstruction # Radon Transform\n数学形式化描述\n$$ p(s,\\theta)=\\int^\\infty_{-\\infty}\\int^\\infty_{-\\infty}f(x,y)\\delta(xcos\\theta+ysin\\theta-s)dxdy $$\n$s,\\theta$确定时，相当于仅在直线$xcos\\theta+ysin\\theta-s=$上作积分 代码实现\nfrom skimage.transform import warp theta = np.arange(180) # pad padded_image = np.pad(image, pad_width, mode=\u0026#39;constant\u0026#39;, constant_values=0) center = padded_image.shape[0] // 2 # 旋转+投影 radon_image = np.zeros((padded_image.shape[0], len(theta)), dtype=image.dtype) for i, angle in enumerate(np.deg2rad(theta)): cos_a, sin_a = np.cos(angle), np.sin(angle) R = np.array([[cos_a, sin_a, -center * (cos_a + sin_a - 1)], [-sin_a, cos_a, -center * (cos_a - sin_a - 1)], [0, 0, 1]]) rotated = warp(padded_image, R, clip=False) radon_image[:, i] = rotated.sum(0) Sinogram\n正弦图的每一个$\\theta$都对应一组s轴上的投影\n中心切片定理\n二维图像的中心切片定理指出：二维函数 f(x, y) 的投影 p(s) 的傅里叶变换 P(ω) 等于函数 f(x, y) 的傅里叶变换 F(ωx,ωy) 沿与探测器平行的方向过原点的片段。\nFilteredBackProjection (FBP)\n证明：\n数学形式化描述\n$$f(x,y)=\\int^\\pi_0q(s,\\theta)|_{s=x\\cos\\theta+y\\sin\\theta}d\\theta$$\n代码实现\nreconstructed = np.zeros((output_size, output_size),dtype=dtype) radius = output_size // 2 xpr, ypr = np.mgrid[:output_size, :output_size] - radius for col, angle in zip(radon_filtered.T, np.deg2rad(theta)): t = ypr * np.cos(angle) - xpr * np.sin(angle) reconstructed += interpolant(t) reconstructed = reconstructed* np.pi / (2 * angles_count) MRI Reconstruction # Image Enhancement \u0026amp; Restoration # Image Quality Assessment # Human visual system (HVS)\n视敏度 visual acuity 20/20 is ~1 arc minExtreme acuity = 0.4 arc min =1/150 of a degree 视野 field of view ~190° monocular, ~120° binocular, ~135° vertical 空间分辨率 spatial resolution ~576 megapixels 时间分辨率 temporal resolution ~60 Hz 动态范围 dynamic range 颜色 color 深度 depth cues in 3D displays 聚焦范围 accommodation range ~8cm to ∞, degrades with age Image Quality Metric\nSignal-to-Nosie Ratio (SNR) Is SNR a good metric? Nope! Structural similarity index measure (SSIM) $$ssim(x, y)={l(x, y)}^{\\alpha} {c(x, y)}^{\\beta} {s(x, y)}^{\\gamma}$$ $$luminance\\ l(x, y)=\\frac{2\\mu_x\\mu_y+c_1}{\\mu_x^2+\\mu_y^2+c_1}$$$$contrast\\ c(x, y)=\\frac{2\\sigma_x\\sigma_y+c_2}{\\sigma_x^2+\\sigma_y^2+c_2}$$$$structure\\ s(x, y)=\\frac{2\\sigma_{xy}+c_3}{\\sigma_x\\sigma_y+c_3}$$ Multi-scale SSIM No-reference image quality assessment (NR-IQA)\nBlind/Reference-less Image Spatial Quality Evaluator (BRISQUE) Naturalness Image Quality Evaluator (NIQE) Perception-based Image Quality Evaluator (PIQE) Image Enhancement # Global (or spatially uniform) operators\nReinhard $$I_{out}=\\frac{I_{in}}{I_{in} + 1}$$ Gamma compression $$I_{out}=AI_{in}^\\gamma$$ Look-up table (LUT) Histogram equalization 寻找$$s=T(r)$$使得$$f(s)=f(r)\\frac{dr}{ds}=\\frac{1}{L-1}$$，易得$$\\frac{ds}{dr}=f(r)(L-1)$$，积分可得$$s=\\int_0^r{f(r)(L-1)dr}$$ Local (or spatially varying) operators\nUnsharp masking $$I_{out}=I_{in}+\\lambda Z$$$$Z=HF(I_{in})=I_{in}-LF(I_{in})$$ 增强低频/高频分量 Guassian/Bilateral/… Filtering Gradient domain tone mapping\nMultiscale tone-mapping Image Restoration # Imaging model\nNoise Expression Solution Blur（Multiplicative） $$Y=AX$$ Deblur Downsample $$Y=\\downarrow_r X$$ Superresolution Mask $$Y=X(1-M)+ZM$$ Inpainting Noise (Addictive) $$Y=AX+N$$ Denoise Direct method: function approximation\nMean filter Assumptions: 噪声和信号独立，噪声相互独立$$E(\\overline{N}^2)=\\frac{1}{n}\\sigma^2$$ $$ SNR_{avg} = nSNR_{orig}$$ Gaussian filter $$f(p)=\\frac{1}{\\Sigma_{p\\in\\Omega} f(p-s)}\\Sigma_{p\\in\\Omega} f(p-s)I_p$$ 距离越近，权重越大 Edge-preserving filter 三大保边滤波，防止边缘因滤波而模糊 Bilateral filter (BF) $$f(p)=\\frac{1}{\\Sigma_{p\\in\\Omega} f(p-s)g(I_p-I_s)}\\Sigma_{p\\in\\Omega} f(p-s)g(I_p-I_s)I_p$$ 距离越近，像素值越接近，权重越大 Guided filter (GF) $$O_i=\\overline{a_k}G_i+\\overline{b_k}$$其中$$a_k=\\frac{Cov_{W_k}(G,I)}{Var_{W_k}(G)+\\epsilon}$$, $$b_k=E_{W_k}(I)-a_kE_{W_k}(G)$$ 物理意义等等再写 Weighted least squares filter(WLSF) Nonlocal Means 在全局范围内计算权重 Block-matching and 3D filter (BM3D) Block-matching: 寻找相似的图像块3D Filter: 在堆叠的图像块上进行3D滤波Aggregation: 3D-\u0026gt;2D Implicit method: A probabilistic framework for denoising\n由$$Y=AX+$$可得$$Y-AX=N$$，进一步有$$f(Y|X)=f(N)$$\n假定噪声服从高斯/拉普拉斯/泊松分布，则获得了$$f(Y|X)$$的含参数表达式\n使用极大似然估计，可以得到参数的估计值\n$${argmax}{\\sigma, X} P(Y|X)={argmin}{\\sigma, X} -logP(Y|X)$$\n假定噪声服从Gaussian分布，则有$$X=argmin_{X}|Y-AX|^2/2\\sigma^2$$\n假定噪声服从Laplacian分布，则有$$X=argmin_{X}|Y-AX|/2\\sigma$$\nBayesian/optimization approach\n$$max_X P(X|Y)=P(Y|X)P(X)/P(Y)$$\n$$min_X L(X)=|Y-AX|^2/2\\sigma^2+\\lambda R(X)$$\nR(X)是X的正则项/反转分布，取决于对X的先验\nImage prior: Sparsity presentation\nDictionary learning: to find D\nSparse coding $$min_{\\alpha} |\\alpha|_0\\ subject\\ to\\ x=D\\alpha$$\nDenoising (given D) $$min_\\alpha |\\alpha|_0{\\ subject \\ to}|x-D\\alpha|_2\u0026lt;\\varepsilon$$\nWhich dictionary to use?\nChoose D from a known set of transforms Eg. Fourier Transform/Cosine Transform/Steerable wavelet/Curvelet/Contourlets/Bandlets/Shearlets\nLearn D from a set of examples Such learning should sparsify the representation as much as possible.\nImage Segmentation # Distance\nConnection\nPolar\n中心扩散/梯度\n根据物体的形状/\u0026hellip;特点寻找合适的表达\nThreshold: m(x,y)=F(I(x,y))\u0026gt;t\nWater\nRegion growing\ncluster\n","date":"28 June 2024","externalUrl":null,"permalink":"/research/med_img/","section":"Research","summary":"\u003ch2 class=\"relative group\"\u003eCT Reconstruction \n    \u003cdiv id=\"ct-reconstruction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#ct-reconstruction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003eAnalytical CT reconstruction \n    \u003cdiv id=\"analytical-ct-reconstruction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#analytical-ct-reconstruction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eRadon Transform\u003c/strong\u003e\u003c/p\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/image-20240506002239402.png\" alt=\"image-20240506002239402\" style=\"zoom:50%;\" /\u003e\n\u003cp\u003e数学形式化描述\u003c/p\u003e\n\u003cp\u003e$$\np(s,\\theta)=\\int^\\infty_{-\\infty}\\int^\\infty_{-\\infty}f(x,y)\\delta(xcos\\theta+ysin\\theta-s)dxdy\n$$\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e$s,\\theta$确定时，相当于仅在直线$xcos\\theta+ysin\\theta-s=$上作积分\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e代码实现\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e skimage.transform \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e warp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etheta \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003earange(\u003cspan style=\"color:#ae81ff\"\u003e180\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# pad\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epadded_image \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epad(image, pad_width, mode\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;constant\u0026#39;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                      constant_values\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecenter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e padded_image\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eshape[\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e] \u003cspan style=\"color:#f92672\"\u003e//\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 旋转+投影\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eradon_image \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ezeros((padded_image\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eshape[\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e], len(theta)),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                       dtype\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eimage\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edtype)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e i, angle \u003cspan style=\"color:#f92672\"\u003ein\u003c/span\u003e enumerate(np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edeg2rad(theta)):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    cos_a, sin_a \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecos(angle), np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esin(angle)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    R \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003earray([[cos_a, sin_a, \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003ecenter \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e (cos_a \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e sin_a \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                  [\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003esin_a, cos_a, \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003ecenter \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e (cos_a \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e sin_a \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                  [\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e]])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    rotated \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e warp(padded_image, R, clip\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eFalse\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    radon_image[:, i] \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e rotated\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esum(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eSinogram\u003c/strong\u003e\u003c/p\u003e","title":"Medical Image Computing","type":"research"},{"content":"","date":"14 June 2024","externalUrl":null,"permalink":"/tags/course/","section":"Tags","summary":"","title":"Course","type":"tags"},{"content":" 矩阵的基本概念 # 矩阵的基本运算 # 若向量$a,b$，则它的内积、外积定义如下：\ninner product $\\sum a_ib_i$ $a\\odot b$ Outer product $ab^T$ $a\\otimes b$ Hardmard积、Kronnecker积和矩阵乘法 # 若矩阵$A\\in R^{m\\times n},B\\in R^{m\\times n}$，则它的哈达玛积、克罗内亚积如下：\nHardmard Product 逐元素相乘 $A\\circ B \\in R^{m\\times n}$ Kronnecker Product 矩阵A每个元素乘以矩阵B $A\\otimes B \\in R^{m^2\\times n^2}$ Matrix Product 矩阵乘法 $A\\cdot B$ or $AB$ 矩阵乘法一般情况下不满足交换律，但也有例外：\nA、B中任一是单位阵、数量阵、零矩阵，或者A、B均为对角阵时，满足$AB=BA$​ A、B互为逆矩阵、正交矩阵、酉矩阵时，满足交换律$AB=BA$ 当$AB=BA$时 $(A+B)(A-B)$满足交换律 $(A+B)^m$可使用二项式定理展开 直和 # 矩阵的直和定义如下：\n$$A\\oplus B=\\begin{bmatrix}A\\quad O\\newline O\\quad B\\end{bmatrix}$$\n逆矩阵 # 求解思路： 直接求逆，推导出逆矩阵 构造$AA^{-1}=I$（一般移项后对A作因式分解） 特殊构造 当A、B可逆时，注意构造$AA^{-1}$和$BB^{-1}$​ 当A正交时，注意$A^{-1}=A^T$​ 广义逆 # 左逆和右逆 左逆矩阵满足$LA=I$；右逆矩阵满足$AR=I$ 左伪逆和右伪逆 列满秩矩阵的左伪逆矩阵$L=(A^HA)^{-1}A^H$；行满秩矩阵的右伪逆矩阵$R=A^H(AA^H)^{-1}$ 列满秩则有$A^HA$可逆；行满秩则有$AA^H$可逆 M-P广义逆 若矩阵G满足$AGA=A或GAG=G或(AG)^T=AG或(GA)^T=GA$，则称矩阵G是加号逆或M-P广义逆\n特别地，若$AA^-A=A$，则称$A^-$是$A$的广义逆矩阵\n$A^{-1},L,R$都是A的广义逆矩阵 秩、行列式、迹 # 秩 # 线性映射定义\n考虑线性映射$f_A:F^n\\rightarrow F^m$在某一组基下的表示$x\\rightarrow Ax$，则$A$的秩定义为$f_A$的象空间的维度，而核空间的维度则定义为$n-r(A)$​\n性质 证明/推论 $r(AB)\\le\\min(r(A),r(B))$ 考虑矩阵的线性映射，一方面，$ABx$将$Bx$投射到$A$的象空间，因此$r(AB)\\le r(A)$；另一方面，$ABx$是$Bx$基向量的线性组合，因此$r(AB)\\le r(B)$\n若A满秩，则$r(AB)=r(B)$ $r(A)+r(B)-n\\le r(AB)$ Frobeinus不等式$r(AB)+r(BC)\\le r(B)+r(ABC)$ $r(A+B)\\le r(A)+r(B)$ 秩为k的矩阵可以分解为k个秩1矩阵的和 $r(A^TA)=r(AA^T)=r(A)=r(A^T)$ 转置不变性 含参矩阵：根据矩阵的秩，确定参数的范围\n秩为1，则每一行线性相关，即系数成比例（可据此推导出系数关系）\n矩阵满秩/秩的分类讨论（$\\alpha,\\beta$）\n将向量组排列成矩阵，用每一行消去一个维度（注意消去不含参的维度），保证剩下的两行线性无关/相关\n行列式 # 拉普拉斯展开：行列式可以按某一行或列展开为元素与其代数余子式的乘积和，即$|B|=\\sum_j b_{ij}C_{ij}$，其中代数余子式$C_{ij} = (−1)^{i + j}M_{ij}$​\n$$ 考虑矩阵B= \\begin{bmatrix} 1\\quad2\\quad3\\newline 4\\quad5\\quad6\\newline 7\\quad8\\quad9\\newline \\end{bmatrix} \\newline 它的行列式|B|= 1\\cdot \\begin{vmatrix} 5\\quad6\\newline 8\\quad9\\newline \\end{vmatrix} -2\\cdot \\begin{vmatrix} 4\\quad6\\newline 7\\quad9\\newline \\end{vmatrix} +3\\cdot \\begin{vmatrix} 4\\quad5\\newline 7\\quad8\\newline \\end{vmatrix} $$\n迹 # 性质 推论 线性性质 $tr(A+B)=tr(A)+tr(B)$ $tr(r\\cdot A)=r\\cdot tr(A)$ $tr(A)=tr(A^T)$ 矩阵乘积 若交换后乘积仍然存在，则有$tr(AB)=tr(BA)$ $tr(ABC)=tr(BCA)=tr(CAB)\\ne tr(ACB)$ $tr(AB)=\\sum_{ij}a_{ij}b_{ji}$ $tr(A^TB)=\\sum_{i,j}a_{ij}b_{ij}=vec^T(A)\\cdot vec(B)$ 相似不变性 $tr(B)=tr(PAP^{-1})=tr(A)$ $tr(XX^T)=\\sum |x_{ij}|^2$，多天线发射信号矩阵的功率 范数 # 向量范数 # 向量的p范数$||x||_p=(\\sum_i |x_i|^p)^{1/p}$​\n特别地，当$p\\rightarrow\\infty$时，称为无穷范数，返回向量的最大元素$max(x_i)$\n矩阵范数 # 矩阵范数 - 维基百科，自由的百科全书 (wikipedia.org)\n矩阵的元素范数和诱导范数都可以记为也记为$A||_p$\n矩阵的元素范数 # 矩阵的元素范数也称为$L_p$范数，$||A||_p = ( \\sum |aij|^p )^{1/p}$\n特别地，$L_2$范数也被称为Frobenius范数，记为$||A||_F$\n当$p\\rightarrow\\infty$时，称为极大值范数，返回矩阵的最大元素$max(a_{ij})$\n范数的性质 # 矩阵范数 向量范数 三角不等式 $||A+B||\\le||A||+||B||$ $||u+v||\\le||u||+||v||$ Cauchy不等式 $||AB||\\le||A||\\cdot||B||$ $||uv||\\le||u||\\cdot||v||$ 矩阵的诱导范数 # 向量$x$的p范数的缩放倍率的最大值，有$||A||_p=\\max{\\frac{||Ax||_p}{||x||_p}}$\n特别地，诱导2范数是矩阵A的最大奇异值。\n随机向量 # 自相关矩阵 $R_x=E[(x(\\xi)x^H(\\xi))]$ 互相关矩阵 $R_{xy}=E[(x(\\xi)y^H(\\xi))]$ 自协方差矩阵 $C_x=E([x(\\xi)-\\mu][x(\\xi)-\\mu]^T)$ $C_x=R_x-\\mu_x\\mu_x^T$ 互协方差矩阵 $C_x=E([x(\\xi)-\\mu_x][y(\\xi)-\\mu_y]^T)$ 高斯随机向量 # 设高斯随机向量$x(t)=[x_1(t),\\dots,x_N(t)]^T$服从多维正态分布$N(\\mu,C_x)$，均值向量$\\mu=[\\mu_1,\\dots,\\mu_N]^T$若各个维度独立，则有协方差矩阵$C_x=diag{\\sigma_1^2,\\dots,\\sigma_N^2}$，概率密度函数$f(x)=\\frac{1}{(2\\pi)^{N/2}det(C_x)^{1/2}}exp(-\\frac{1}{2}(x-\\mu)^TC_x^{-1}(x-\\mu))$​\n随机误差向量 # 误差向量的每个维度期望为0，但功率不为0（因为正负相互抵消，平方后累积）\n特殊矩阵 # 基本矩阵 # 推广 基本矩阵 $E_{mn}=e_me_n^T$是第m行第n列的元素为1的矩阵，\n其中$e_n$是第n个元素为1的单位向量 I型基本矩阵 $E_{(p,q)}$ 互换矩阵\n选择矩阵\n置换矩阵 II型基本矩阵 $E_{\\alpha(p)}$ III型基本矩阵 $E_{(p)+\\alpha(q)}$ 三角阵、对角阵 # 逆矩阵 行列式 上/下三角阵 上/下三角阵 $det(A)=\\prod_i^Na_{ii}$ 对角阵 对角阵 $det(A)=\\prod_i^Na_{ii}$ 若矩阵是三角阵，又是酉矩阵，则矩阵是对角阵，且对角线元素的范数（绝对值）为1 若矩阵是上三角分块酉矩阵，$A=\\begin{bmatrix}P\\quad B\\newline 0\\quad Q\\end{bmatrix}$，那么P、Q都是酉矩阵，且B=0 上/下三角阵的和、积仍然是上/下三角阵。\n对称、正定、正交、正规 # 实空间 复空间 常见举例 性质 对称矩阵 $A^T=A$ $A^H=A$\n(Hermitian阵) 正定矩阵 $x^TAx\u0026gt;0$ $x^HAx\u0026gt;0$\n（前提先是对称阵） 各阶顺序主子式\u0026gt;0（左上角行列式\u0026gt;0） 特征值是正数 正交矩阵 $QQ^T=Q^TQ=I$ $UU^H=U^HU=I$\n（酉矩阵） 正规矩阵 $A^TA=AA^T$ $A^HA=AA^H$ 必可以酉对角化 正规矩阵\n实空间的对称矩阵、斜对称矩阵、正交矩阵是正规的；复空间的Hermitian阵、斜Hermitian阵、酉矩阵是正规矩阵\n正规矩阵必可以酉对角化\n若$A$是反对称矩阵，则$I+A,I-A,A-I$​​是非奇异的\n正定矩阵\n正定矩阵可以酉对角化，进而分解成n个正定的秩1矩阵的和，也可以开平方根，$B=B^{\\frac{1}{2}}(B^{\\frac{1}{2}})^H$，且$I=B^{\\frac{1}{2}}B^{-\\frac{1}{2}}$ 若$A,B$为正定矩阵，则哈达玛积$AB$正定，若$A,B$为半正定矩阵，则哈达玛积$AB$半正定 若$A$是半正定矩阵，且非奇异，则$A$是正定矩阵 相似与相合 # 定义 性质 相似矩阵 $B=S^{-1}AS$ 特征值相同 相合矩阵 $B=C^HAC$ 二次型函数相吻合 中心化矩阵 # 求和矩阵$J_N=\\begin{bmatrix}1\\quad\\dots\\quad1\\newline\\dots\\newline1\\quad\\dots\\quad1\\newline\\end{bmatrix}$，$J_NX$表示将矩阵$X$的每个向量表示为N个向量的和\n中心化矩阵$C_N = I_N - \\frac{1}{N}J_N$，$C_NX$​表示矩阵X的每个向量减去这N个向量的均值\n信号直流功率、交流功率的计算 Vandermonde矩阵 # $$ A= \\begin{bmatrix} a_1^0\\ a_2^0\\ \\dots\\ a_N^0\\newline a_1\\ a_2\\ \\dots\\ a_N\\newline \\vdots \\newline a_1^{N-1}\\ a_2^{N-1}\\ \\dots\\ a_N^{N-1}\\newline \\end{bmatrix} $$\n行列式$det(A)=\\prod_{i,j}^N(a_i-a_j)$\n多项式插值中，线性方程组的系数矩阵是Vandermonde矩阵；易知，当$a_i\\ne a_j$时，范德蒙矩阵是满秩的，存在唯一解\nP个入射信号、N个阵元的信号响应矩阵是N*P维Vandermonde矩阵，其中阵元的响应强度随距离成指数级上升（0到N-1），而不同的入射信号对应不同的夹角($a_i$)。\nFourier矩阵也是一种特殊的vandermonde矩阵，指数在频率和时间两个方向都递增。DFT可以写成复空间上的内积$y(k)=\\sum_{n=0}^{N-1} x(n)e^{-j\\frac{2\\pi kn}{N}}= \u0026lt;x,f_k\u0026gt; = f_k^H x$，其中$f_k=[1,e^{-j\\frac{2\\pi k}{N}},\\dots,e^{-j\\frac{2\\pi k(N-1)}{N}}]$\n矩阵函数与优化 # 矩阵函数 # 矩阵函数是通过矩阵的加法和乘法来定义的，而对于指数函数和三角函数，则是通过推广标量函数的幂级数展开来定义。\n方法1：当矩阵是幂等矩阵时，可以将幂级数中的累加项合并，并利用指数函数的展开式来化解一系列系数的求和。\n$A=\\begin{bmatrix}1\\quad 1\\newline0\\quad 0\\end{bmatrix},B=\\begin{bmatrix} 1\\quad 1\\newline0\\quad 0\\end{bmatrix}$，求$e^A,e^B,e^{A+B}$\nA是幂等阵，$A^2=A$，进而$A^n=A$\n由幂级数展开知$e^A=I+(\\frac{1}{1!}+\\frac{1}{2!}+\\dots)A$ ，再根据$e=(1+\\frac{1}{1!}+\\frac{1}{2!}+\\dots)$进一步化简，得$e^A=I+(e-1)A$\n同理可得$e^B=I+(e-1)B$\n根据幂级数展开$e^{A+B}=I+\\sum_i\\frac{1}{i!}(A+B)^i$ 因为$A+B= \\begin{bmatrix} 2\\quad 0\\newline 0\\quad 0 \\end{bmatrix}$，所以$(A+B)^k=2^k(A+B)$ ，继而$e^{A+B}=I+\\sum_{k=1}\\frac{2^k}{k!}(A+B)$ ，根据$e^2=\\sum_{k=0}\\frac{2^k}{k!}$，化简得$e^{A+B}=I+(e^2-1)(A+B)$\n当矩阵乘法可交换时，指数函数和三角函数才满足一些交换的性质，故$e^{A+B}$不能直接使用幂的乘法 方法2：将矩阵对角化，矩阵的幂级数，即，将对角线上的各个元素代入幂级数的原函数。\n如果矩阵可对角化为$P^{-1}AP=\\Lambda$​，则有：\n$e^A=Pdiag(e^{\\lambda_1},\\dots,e^{\\lambda_n})P^{-1}$​\n$e^{tA}=Pdiag(e^{\\lambda_1t},\\dots,e^{\\lambda_nt})P^{-1}$​​\n$sinA=Pdiag(sin\\lambda_1,\\dots,sin{\\lambda_n})P^{-1}$​​\n矩阵的求导与微分 # 实值函数的自变量和因变量都可以是标量、向量、矩阵。\n函数（因变量） 向量变元$\\mathbf{x}\\in R^m$ 矩阵变元$X\\in R^{m\\times n}$ 标量函数$f\\in R$ $f:R^m\\rightarrow R^{m\\times n}$ $f:R^{m\\times n}\\rightarrow R$ 向量函数$f\\in R^p$ $f(\\mathbf{x})\\newline f:R^m\\rightarrow R^p$ $f(X)\\newline f:R^{m\\times n}\\rightarrow R^p$ 矩阵函数$f\\in R^{p\\times q}$ $F(\\mathbf{x})\\newline f:R^m\\rightarrow R^{p\\times q}$ $F(X)\\newline f:R^{m\\times n}\\rightarrow R^{p\\times q}$ 偏导 # 标量函数的偏导 # 偏导 对变元的操作 符号 行向量偏导 将矩阵X行向量化（先列向量化，再转置） $D_{vec^T(X)}f(X)=\\frac{\\partial f(X)}{\\partial vec^T(X)}$ Jacobian矩阵 将矩阵X转置 $D_Xf(X)=\\frac{\\partial f(X)}{\\partial X^T}$ 列向量偏导 将矩阵X列向量化 $\\nabla_{vec(X)}f(X)=\\frac{\\partial f(X)}{\\partial vec(X)}$ 梯度矩阵 矩阵X不变 $\\nabla_Xf(X)=\\frac{\\partial f(X)}{\\partial X}$ 行向量偏导与Jacobian矩阵的关系 # 行向量偏导$vec^T(X)=[vec(X)]^T$和Jacobian矩阵$X^T$是不同的，行向量偏导实际上并没有对$X$作转置，如果需要将jacobian矩阵转化为行向量偏导的形式，则需要$rvec(X)=vec^T(X^T)$\n矩阵/向量函数的Jacobin矩阵和梯度矩阵 # 首先向量/矩阵函数列向量化，再转置为行向量，然后求偏导，即为矩阵变元函数的Jacobian矩阵，记为$D_XF(X)$​\n如果是列向量偏导，则认为不做转置，称为梯度矩阵。\n二阶偏导 # 标量函数的二阶梯度矩阵称为Hessian矩阵，先对标量函数求一阶梯度矩阵，然后求解Jacobian矩阵。\n梯度流 # 梯度的负方向称为梯度流，即梯度下降的方向。\n矩阵微分的计算 # 将标量矩阵函数转化为迹的形式，然后同时利用迹的性质和微分的性质。\n性质 推论 $d(UV)=d(U)V+udV$ $d(UVW)=d(U)VW+Ud(V)W+UVdW$ $d(AXB)=Ad(X)B$ $d(X^TAX)=d(X)^TAX+X^TAdX$ $d(tr(F(X)))=tr(d(F(X)))$ $d(tr(X))=tr(d(X))$ $d(tr(X^TX))=2tr(X^TdX)$ $d X 若矩阵微分$df(X)=tr(AdX)$，则雅可比矩阵$D_Xf(X)=\\frac{f(X)}{\\partial X^T}=A$，转置可得梯度矩阵$\\nabla f(X)=\\frac{f(X)}{\\partial X}=A^T$，\n常见函数的微分和梯度矩阵\n函数 微分矩阵$df(X)=tr[\\frac{\\partial f(X)}{\\partial dX}^TdX]$ 梯度矩阵$\\partial f(X)/\\partial X$ $X$ $I$ $AX$ $A^T$ 注意迹可交换，因此$AX$和$XA$的梯度相同；\n若$A$和$X$其一取转置，则梯度矩阵相应转置 $X^2$ $2X^T$ $X^TX$ $2X$ $X^TAX$ $(A+A^T)X$ $XAX^T$ $X(A+A^T)$ $XAX$ $X^TA^T+A^TX^T$ $X^{-1}$ $(X^{-2})^T$ $AX^{-1}$ $-(X^{-1}AX^{-1})^{T}$ 共轭梯度 # 关于复变函数f(z)，下列叙述等价\nf(z)是全纯/复解析函数 f\u0026rsquo;(z)存在且连续 f(z)满足Cauchy-Riemann方程 f(z)的所有导数存在且拥有一个收敛的幂级数 虽然幂函数、指数函数、对数函数都是复解析函数，但存在一些常用函数不是全纯函数，例如$f(z)=z^*$和$f(z)=Re(z)$。\n如果一个给定的复变函数可以写成$f(z)=f(z,z^)$的形式， 则可以直接求取其关于$z和z^$的偏导 。\n无约束/带约束的优化问题 # 无约束优化 # 局部极小点的求解可以转化为 $$ f\u0026rsquo;(x)=0\\newline f\u0026rsquo;\u0026rsquo;(x)\u0026gt;0 $$ 对于矩阵函数，即Jacobin矩阵为0且Hessian矩阵正定。\n判断驻点是否为极大值，则判断$-f(x)$的驻点是否为极小值 既不是极大值、也不是极小值的驻点，称为鞍点 凸优化 # 线性规划 目标函数等高线是平行线 线性分式规划 二次规划 目标函数等高线是椭球面 等式不等式约束的优化：拉格朗日乘子法 # 寻找“最好”（4）——不等约束和KKT条件 - 我是8位的 - 博客园 (cnblogs.com)\n考虑某个带约束优化问题，含有等式约束和不等式约束 $$ \\min_x f(x)\\newline s.t.\\quad h_i(x)=0\\newline \\quad g_i(x)\\le0 $$ 联立模板函数和约束条件，有拉格朗日函数 $$ L(x,\\lambda,\\mu)=f(x)+\\lambda h(x)+\\mu g(x) $$\n带约束优化问题的最优解必然满足KKT条件，即 $$ \\begin{cases} \\nabla_x L=0\\newline h(x)=0\\newline \\lambda\\ne0\\newline \\mu g(x)=0\\quad互补松弛条件，不等式约束的极值，边界or无约束\\newline g(x)\\le0\\quad原始不等式约束\\newline \\mu\\ge0\\quad对偶约束\\newline \\end{cases} $$ 满足KKT条件的解需要进一步检验，是否为最优\n对KKT条件的理解 - 骚动的白米饭的文章 - 知乎\n梯度下降法 # 略\n矩阵分解 # 特征值和特征向量 # 若$Ax=\\lambda x$，则称A存在特征值为$\\lambda$的特征向量$x$\n阶数为n的矩阵A有n个特征值，特征多项式的次数称为代数重数，特征值对应的特征向量空间的维度称为几何重数。\n$A-\\lambda I$的零空间维度，即$\\lambda$对应的特征向量的维度\n若$rank(A-\\lambda I)\\le n-1$，则$\\lambda$​为矩阵A的特征值 $det(A-\\lambda I)=0$是特征方程，可据此解得特征值$\\lambda$ 若矩阵$A$满足$\\sum_{j}|a_{ij}\u0026lt;1|$，即每一行的和小于1，则$A$​的每一个特征值的绝对值$|\\lambda|\u0026lt;1$\n考察矩阵A对向量x左乘变行，即每一行的线性组合，矩阵A的每一行是组合系数，而对于最大的元素，其它元素系数和为1的线性组合必然小于该元素，因此特征值必然小于1（不等式放缩）\n若矩阵$A$的特征值为$\\lambda$，则它的不同运算结果的特征值如下：\n矩阵 特征值 $A^T,P^{-1}AP$ ${\\lambda}$ 转置和相似不改变$A-\\lambda I$的秩 $A^k$ ${\\lambda}^k$ $A^{-1}$ $1/\\lambda$ $A+\\sigma^2I$ $\\lambda+\\sigma^2$ $AA^H$的特征值可通过在$Ax=\\lambda x$方程两边同乘以$A$的方式，构造出$AA^H$对特征向量$Ax$的特征值。 某些特殊矩阵的特征值如下：\n矩阵 特征值 幂等矩阵 0或1 实正交矩阵 1或-1 单位阵 1 全1阵 对全1向量的特征值为N，其他特征值全为0 特征值与迹、行列式、秩的关系 # 推论 迹 特征值之和 行列式 特征值之积 秩 非零特征值的个数 若矩阵A存在一个单重特征值0，则秩为n-1 广义特征值 # 若$Ax=\\lambda Bx$则称$\\lambda,x$是矩阵束$A,B$的广义特征值和特征向量\n矩阵束左乘/右乘非奇异矩阵，不会改变广义特征值和特征向量\n特征值分解（EVD） # 若$A$有**$n$个线性无关的特征向量**，则有$AU=U\\Sigma$，其中$U$是特征向量构成的矩阵，因为$U$满秩，所以$U$可逆，有特征值分解$A=U\\Sigma U^{-1}$​​\n特别地，矩阵$A$可酉对角化的充要条件是$A$是正规矩阵，即$A^HA=A^HA$​，有$A=U\\Lambda U^H$\n对称阵（实对称阵、Hermitian阵）、正定阵可以酉对角化 正定阵的特征值\u0026gt;0 奇异值分解（SVD) # 任意矩阵$A$可以奇异值分解为$A=U\\Sigma V^H$，其中$U$的列向量是$AA^H$的特征向量，$V$的列向量是$A^HA$的特征向量，对角线上是矩阵$A$的奇异值，是$AA^H$和$A^HA$​的特征值的非负平方根，通常由大到小排列\n由$AV=U\\Sigma$可知$A\\overrightarrow{v_i}=\\sigma_i\\overrightarrow{u_i}$​，奇异值的个数取决于其中维数小的矩阵 由矩阵乘法的秩1分解视角，$A=\\sum_i \\lambda_iu_iv_i^H$，其中$\\lambda_i$​是非零奇异值 若矩阵可EVD，则奇异值和特征值等价 SVD生动动画演示：旋转-拉伸-升降维度-旋转 SVD vs EVD # SVD EVD 适用于任何$m\\times n$矩阵 只适用于$n\\times n$方阵 奇异值与奇异向量的关系\n$u_i^HAv_i=\\sigma_i$ 特征值与特征向量的关系\n$Av_i=\\lambda_iv_i$ A的非零奇异值是$A^HA$或$AA^H$的非零特征值的正平方根；\nA的左奇异向量是$AA^H$的特征向量；A的右奇异向量是$A^HA$​的特征向量；\nJordan标准形 # 任一方阵可块对角化为Jordan标准型，即$J=P^{-1}AP$\n其中$J=\\begin{bmatrix} J_1(\\lambda_1)\\quad \\quad \\newline \\quad J_2(\\lambda_2) \\quad \\newline \\quad \\quad J_3(\\lambda_3)\\end{bmatrix}$，而$J_i(\\lambda_i)=\\begin{bmatrix} \\lambda_i\\quad1\\quad0\\newline 0\\quad \\lambda_i \\quad1\\newline 0\\quad 0\\quad \\lambda_i\\end{bmatrix}$\n特征分析 # Cayley–Hamilton定理 # 将矩阵$A$代入其特征多项式$f(\\lambda)=0$，即为矩阵$A$​的零化多项式\n根据多项式除法，任意矩阵幂可以由矩阵的零次幂到N-1次幂线性组合得到，线性系数可以通过n个特征值的线性方程组联立得到\n逆矩阵的计算\n矩阵微分方程的求解\nRayleigh商 # 瑞利商和广义瑞利商 - Void的文章 - 知乎\n瑞利商$R(A,x)=\\frac{x^TAx}{x^Tx}$\n为了简化问题令$X^xx=1$，求$x^TAx$的条件极值\n构造拉格朗日乘子函数$L(x,\\lambda)=x^tAx+\\lambda(x^Tx-1)$，对$x$求梯度，令梯度为0，解得极值点$Ax=\\lambda x$\n显然，在最大的特征值对应的特征向量处，瑞利商有最大值；在最小的特征值对应的特征向量处，瑞利商有最小值\n根据瑞利商的性质，结合放缩，可推导出以下结论：\n取等 $\\lambda_1(A+B)\\ge\\lambda_1(A)+\\lambda_N(B)$ $A$的最大特征向量是$B$的最小特征向量 $\\lambda_N(A+B)\\ge\\lambda_N(A)+\\lambda_N(B)$ $A,B$最小特征向量相同 $\\lambda_1(A+B)\\le\\lambda_1(A)+\\lambda_1(B)$ $A,B$最大特征向量相同 广义瑞利商 # 考虑广义特征值$Ax=\\lambda Bx$，则有广义瑞利商$R(A,B,x)=\\frac{x^TAx}{x^TBx}$，可以进一步转化为$B^{-1}A$的瑞利商\n线性方程 # 线性方程组$AX=b$​​的解 # 假设线性方程组$AX=b$有m个方程、n个未知数，即系数矩阵$A\\in C^{m\\times n}$，则解的情况为：\n独立方程个数 增广矩阵和系数矩阵的关系 系数矩阵 线性空间 有唯一解 适定方程 $r(A|b)=r(A)$ $r(A)=m=n$ $b\\in Col(A)$ 有无穷多解 欠定方程 $r(A|b)=r(A)$ $b\\in Col(A)$ 无解 超定方程 $r(A|b)\u0026gt;r(A)$ $b\\notin Col(A)$ 最小二乘 # 对于超定方程，可使用最小二乘法求取近似解\n代价函数 优化视角 投影视角 普通最小二乘 $(Ax-b)^T(Ax-b)$ 认为观测量$b$含噪，最小化$e$ 考察方程$Ax=b$的近似解，即$b$在$A$的列空间的投影$p=Pb=A\\hat{x}$，投影$p$是$A$的列向量的线性组合$b$去除投影分量后与$A$的列空间垂直，即$A^T(A\\hat{x}-b)=0$，解得$A\\hat{x}=A(A^TA)^{-1}A^Tb$投影矩阵$P=A(A^TA)^{-1}A^T$满足最小二乘的近似解$\\hat{x}=(A^TA)^{-1}A^Tb$ 数据最小二乘 $\\frac{(Ax-b)^T(Ax-b)}{x^Tx}$ 认为原始数据$A$含噪，最小化$E$ 总体最小二乘 $\\frac{\\begin{bmatrix}x\\newline-1\\end{bmatrix}^T[A,b]^T[A,b]\\begin{bmatrix}x\\newline-1\\end{bmatrix}}{1+x^Tx}$ 认为总体含噪，即$(A+E)x=b+e$，最小化$[E,e]$的二范数\n设增广数据矩阵为$A$，则总体最小二乘的解向量是$A$最小的奇异值对应的右奇异向量，或者$A^TA$的最小特征值对应的特征向量 线性空间 # 在集合$V$和数域$K$上定义加法和数乘运算，若满足8条基本性质，则称集合$V$是$K$上的线性空间\n如果没有定义新的加法和数乘，则只需满足对加法和数乘封闭 线性变换：满足线性性质，即齐次性和可加性 维数 # 线性空间中向量构成的极大无关组的向量个数是该空间的维数\n维数公式：$dim(S_1+S_2)=dim(S_1)+dim(S_2)-dim(S_1 \\cap S_2)$\n和空间的维数可以求解矩阵的秩，基向量可以消去任意若干直至等于秩 交空间的维数可以用维数公式，基向量的求解方式为：将交空间的向量用两个空间的向量分别表示，得到线性方程组，将交空间的向量用某一个空间的系数和基向量表示出来，再合并系数即可。 子空间 # 线性空间的子集，若封闭，则称为子空间，即$\\forall v_1,v_2 \\in V, \\exists \\lambda_1,\\lambda_2, \\lambda_1v_1+\\lambda_2v_2 \\in V$\n列空间、行空间、零空间 # 设矩阵$A\\in R^{M\\times N}$，则相应地有下列子空间：\n子空间 维度 原空间 等价 列空间 $Col(A)$ $R^m$ $R^M$ $Row(A^H)$ 行空间 $Row(A)$ $R^n$ $R^N$ $Col(A^H)$ 零空间 $Null(A)$ $R^n$ $AX=0$的解空间 $Null(A^H)$ $R^m$ 若矩阵是非奇异的，则说明$Ax=0$的解空间是零向量空间（只有零解）\nN维实数空间$R^N$可以分解为矩阵的列空间和零空间的直和，即$R^N=Col(A)\\oplus Null(A)$\n直和：无交子空间的和\n证明两个子空间的和是直和（无交）\n首先计算两个子空间的和，计算极大无关组的秩，得到和空间的维数，然后根据维数公式计算交空间的维数（为0），证明无交，即为直和\n不变子空间 # 若$Ax=\\lambda x$的特征向量张成的子空间称为矩阵$A$​​​的不变子空间，即对A封闭\n投影矩阵 # 投影矩阵必定是幂等矩阵，有$A^2=A$​，特征值为0和1，相当于只保留若干个方向的分量，其余方向的分量置零\n但是，投影矩阵未必一定是正交投影，特征值为1的特征向量实际上有无穷多个，然而只有一个和投影方向是正交的\n投影矩阵是正交投影矩阵，当且仅当它是对称幂等矩阵\n","date":"14 June 2024","externalUrl":null,"permalink":"/course/matrix/","section":"Course","summary":"\u003ch2 class=\"relative group\"\u003e矩阵的基本概念 \n    \u003cdiv id=\"矩阵的基本概念\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%9f%a9%e9%98%b5%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003e矩阵的基本运算 \n    \u003cdiv id=\"矩阵的基本运算\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%9f%a9%e9%98%b5%e7%9a%84%e5%9f%ba%e6%9c%ac%e8%bf%90%e7%ae%97\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e若向量$a,b$，则它的内积、外积定义如下：\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003einner product\u003c/td\u003e\n          \u003ctd\u003e$\\sum a_ib_i$\u003c/td\u003e\n          \u003ctd\u003e$a\\odot b$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eOuter product\u003c/td\u003e\n          \u003ctd\u003e$ab^T$\u003c/td\u003e\n          \u003ctd\u003e$a\\otimes b$\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch4 class=\"relative group\"\u003eHardmard积、Kronnecker积和矩阵乘法 \n    \u003cdiv id=\"hardmard积kronnecker积和矩阵乘法\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#hardmard%e7%a7%afkronnecker%e7%a7%af%e5%92%8c%e7%9f%a9%e9%98%b5%e4%b9%98%e6%b3%95\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cp\u003e若矩阵$A\\in R^{m\\times n},B\\in R^{m\\times n}$，则它的哈达玛积、克罗内亚积如下：\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eHardmard Product\u003c/td\u003e\n          \u003ctd\u003e逐元素相乘\u003c/td\u003e\n          \u003ctd\u003e$A\\circ B \\in R^{m\\times n}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eKronnecker Product\u003c/td\u003e\n          \u003ctd\u003e矩阵A每个元素乘以矩阵B\u003c/td\u003e\n          \u003ctd\u003e$A\\otimes B \\in R^{m^2\\times n^2}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eMatrix Product\u003c/td\u003e\n          \u003ctd\u003e矩阵乘法\u003c/td\u003e\n          \u003ctd\u003e$A\\cdot B$ or $AB$\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e矩阵乘法一般情况下不满足交换律，但也有例外：\u003c/p\u003e","title":"Matrix","type":"course"},{"content":" 相似性度量 # 最小距离分类器 # 将样本归入距离最近的类别\n平均样本法 样本到每个类别的各样本平均值的距离 平均距离法 样本到每个类别的各个样本的距离的平均值 最近邻法 样本最近的样本 距离，即相似性测度，常用的测度有：欧式距离、马氏距离（$(X-M)^T\\Sigma(X-M)$，衡量了样本到分布的距离）、向量夹角余弦\n线性分类器 # n维线性分类器可以表达为超平面$w^Tx+b=0$ 如果将样本X的第n+1维设为1，则超平面可以简化为$w^Tx=0$ 若样本集线性可分，则存在分类器使得所有样本满足$\\begin{cases}w^Tx\u0026gt;0\\quad if\\ x\\in w_1\\newline w^Tx\u0026lt;0\\quad if\\ x\\in w_2\\end{cases}$\n线性分类器的解必然构成解区域，解是不确定的\n多分类问题按照是否线性可分、是否存在不确定区域的解可以分成三种情况\n情况 分类器 总体线性可分 训练n个超平面，分隔每个类和其他所有类 成对线性可分 用$C_n^2$个独立的超平面，将两个类别分开 成对线性可分，且存在没有不确定区域的解 每个类别训练一个判别函数，采用最大值判决\n$G_{ij}(X)=g_i(X)-g_j(X)$ 感知器 # 线性分类器+阶跃函数\n按顺序遍历样本，直到所有样本被正确分类\n若样本$X_i$满足$\\begin{cases}W^TX_i\u0026gt;0\\quad if X_i\\in\\omega_1\\newline W^TX\u0026lt;0\\quad if X_i\\in\\omega_2\\end{cases}$，则说明该样本被正确分类；\n否则：$W=\\begin{cases}W+\\rho X_i\\quad if X_i\\in\\omega_1\\newline W-\\rho X_i\\quad if X_i\\in\\omega_2\\end{cases}$\n学习率和优化器 # 学习速率$\\rho$​有很多设定方法，例如固定值、绝对修正（保证当前的单个训练样本被修正）、部分修正（对绝对修正的速率取0-2之间的调节因子）、变速学习（例如先快后满）、优化学习（令每一步最优，但计算量大）等。\n常用的梯度下降法有：批量梯度法（BGD）、随机梯度法（SGD）、小批次梯度法（MBGD），分别对应整个数据集、单个样本、一小批样本进行梯度的计算。\n最小平方和，LMSE # 如果引入松弛变量，给每个样本的判别函数值规定一个数值，那么n个样本相当于添加了n个约束（具体取决于秩），当n＞样本维度时，这是一个超定方程，只能转化为最优化问题来求解。\n如果使用最小均方误差（Least Mean Square Error, LMSE）来求解，准则函数为 $$ J(w)=||Xw-b||^2 $$ 相应的梯度为 $$ \\nabla J(w)=\\nabla ||Xw-b||^2 = 2X^T(Xw-b) $$ 相应的更新方式为 $$ w_{k+1}=w_k+\\rho_{k+1}X^T(Xw+b) $$ 但是，上述方法需要给定松弛变量，事实上，松弛变量也可以在优化中求解，即H-K算法。 $$ b_{k+1}=b_k-\\eta_{k+1}\\nabla J(w(k))|b $$\n$$ \\nabla J(w(k))|_b = -2(Xw(k)-b) = -2e(k) $$\n$$ b_{k+1}=b_k+2\\eta_{k+1}e_k $$\n为保证b\u0026gt;0，使其单调递增， $$ b_{k+1}=b_k+\\eta_{k+1}(e_k+|e_k|) $$\n而对于w，直接令偏导数为0， $$ \\nabla J(w(k))|_w = 2X^T(Xw-b)=0 $$\n解得 $$ w_{k+1}=(X^TX)^{-1}X^Tb_{k+1} =w_k+\\eta_{k+1}(X^TX)^{-1}X^T|e_k| $$\n若训练集线性可分，则误差向量e可以优化至0；反之，当误差向量\u0026lt;0，说明样本集线性不可分。\nSVM # 寻找一个最优分类超平面，到两类中最靠近的样本点的距离同时达到最大\n边界上的样本点称为支持向量，支持向量到超平面的距离可通过点到直线的距离公式求得， $$ r = \\frac{G(x)}{||w||} $$ 进而有优化式 $$ \\max d = \\max 2r = \\max \\frac{2|G_{ij}(x_s)|}{||w||} $$ 由于直线的系数w可以等比例地放大或缩小，不妨令分子为1，则有 $$ \\min||w|| $$ 等价于 $$ \\min \\frac{1}{2}||w||^2 $$ 支持向量是距离超平面最近的点，其他向量到超平面的距离必须更大，则有不等式 $$ G_{ij}(x)=w^Tx_i+w_0\\ge1\\newline 或者\\newline G_{ij}(x)=w^Tx_i+w_0\\le-1 $$ 合并为 $$ sgn(G_{ij}(x_i))(w^Tx_i+w0)\\ge1 $$\n使用拉格朗日乘子法，不等式约束可转化为 $$ \\min_{||w||}\\max_{\\alpha}L(w,w_0,\\alpha)=\\frac{1}{2}||w||^2-\\sum_i^l \\alpha_isgn(G_{ij}(x_i))(w^Tx_i+w_0-1) $$ 最优化问题的解必满足KKT条件 $$ \\begin{cases} \\alpha_i\\ge0\\newline sgn(G_{ij}(x_i))(w^Tx_i+w0)\\ge1\\newline \\sum\\alpha_isgn(G_{ij}(x_i))(w^Tx_i+w0-1)=0 \\end{cases} $$ 权向量是支持向量的线性组合 $$ w=\\sum_i sgn(G_{ij}(x_i))\\alpha_ix_i $$ 偏置量$w_0$​可代入任意一个支持向量求得。\nFisher线性判别，LDA # 将样本点投影到一条直线上，使得投影后的类间距离尽可能大，类内距离尽可能小。\n类内离散度矩阵$S_i=\\sum_{x_k\\in w_i} (x_k-\\mu_i)(x_k-\\mu_i)^T$，它刻画了样本偏离均值的差异程度；总的类内离散度矩阵$S_w=\\sum_i S_i$，它刻画了两类样本偏离各自均值的总的差异程度\n当样本数足够多时，$S_w$非奇异，最优投影直线的方向存在解析解$w^*=S_w^{-1}(m_1-m_2)$\n非线性分类器 # 势函数法 # 定义位势函数$K(X)=\\sum \\lambda_iK(X,X_i)$​，使得正样本的位势\u0026gt;0，负样本的位势\u0026lt;0\n其中$K(X,X_i)$​是单个样本点的位势，在样本点处有极大值，单调递减，在无穷处趋于0\n位势函数本质上是样本点位势的加权和，但每个样本点的权重是不同的，需要在迭代中更新\n按顺序遍历样本，直到所有样本满足：正样本的位势\u0026gt;0，负样本的位势\u0026lt;0\n若样本$X_i$满足$\\begin{cases}K_A(X_i)\u0026gt;0\\quad if X_i\\in\\omega_1\\newline K_A(X_i)\u0026lt;0\\quad if X_i\\in\\omega_2\\end{cases}$，则$K_A(X)$不变；\n否则：$K_A=\\begin{cases}K_A(X)+K(X,X_i)\\quad if X_i\\in\\omega_1\\newline K_A(X)-K(X,X_i)\\quad if X_i\\in\\omega_2\\end{cases}$\n非线性SVM # 软间隔：对于异常点，设置松弛变量，允许异常点在一定程度内的存在，以防止无解\n核函数：将样本点映射到高维空间，进行线性可分的求解\n贝叶斯分类器 # $P(w_i)$先验概率：类别的先验\n$P(x|w_i)$​类条件概率：每个类别内样本的分布\n根据先验概率和类条件概率，可以计算后验概率 $$ P(w_i|x)=\\frac{P(x|w_i)P(w_i)}{\\sum_j P(x|w_j)P(w_j)} $$\n贝叶斯判别器 # 判别准则 最大后验概率/最小错误概率判决 $g_i(X)=P(\\omega_i|X)$ 概率越大，值越大 最小风险判决 $g_i(X)=-R(\\alpha_i|X)=-\\sum_i R(\\alpha_i|w_i)$ 风险越小，值越大（风险：误判成其它类的风险之和） Neyman-Pearson判决 调整判决阈值，使一类错误率不变。另一类错误率减小，可使用拉格朗日方法求解 最小最大判决 使风险最大的判决可能性最小（保守，最坏情况下结果最好，其他情况下结果可用） 最小错误概率本质上是最小风险的在正确风险为0、错误风险为1的一种特例\n类条件概率密度的估计 # 参数估计 # 如果知道类间概率服从何种分布，则可以估计相应的分布参数。\n极大似然估计 $\\max_\\theta P(X|\\theta)$，\n其中第i类样本的似然函数$p(X_i|\\theta_i)=\\prod_k^Np(x_k|\\theta_i)$ 调整$\\theta$，使取得样本集$X$的概率最大 贝叶斯估计 设待估参数的先验概率为$P(\\theta_i)$，则后验概率为$p(\\theta_i|X_i)=\\frac{p(X_i|\\theta_i)P(\\theta_i)}{\\int_{\\theta_i}p(X_i|\\theta_i)P(\\theta_i)d\\theta}$ 利用贝叶斯公式，根据样本集的概率分布，反推参数$\\theta$的后验概率，然后计算$\\theta$的数学期望 朴素贝叶斯认为样本的各个维度独立，故似然概率可以表达为 $$ P(x|w)=\\prod_j P(x_j|w) $$\n非参数估计 # 包括Parzen窗估计法和k近邻估计法。\n聚类 # 聚类定义：不知道每个类别的具体分布\n聚类准则：类间距离大，类内距离小\n离散度矩阵 类内离散度矩阵 $S_j=\\frac{1}{N_j}\\sum_{x_k\\in w_j} (x_k-m_j)(x_k-m_j)^T$ 总的类内离散度矩阵 $S_w=\\sum_j P_j S_j$ within 类间离散度矩阵 $S_b=\\sum_j P_j(m_j-m)(m_j-m)^T$ between 总的离散度矩阵 $S_t=\\frac{1}{N}\\sum_k (x_k-m)(x_k-m)^T$ total 三个离散度矩阵满足$S_t=S_w+S_b$\n聚类准则函数 误差平方和 $J_e=\\sum_j^C \\sum_i^{N_j} ||x-m_j||^2$ 加权平方和 $J_l=\\sum_j^C P_jD_j$其中$D_j=E(||x-m_j||^2)$ 增类聚类：最大最小距离 # 最大最小距离：先计算每个点到最近的聚类中心的距离（最小），然后选择其中距离最远的点（最大）\n先指定一个聚类中心，相距最远的作为另一个聚类中心\n不断迭代，增加新的聚类中心，直至样本点的最大最小距离＜阈值\n减类聚类：层次聚类 # 不断合并距离最近的两个类，第K次合并时的类别数$C=N-K+1$​\n初始情况，每个样本各成一类；\n计算类间距离，合并距离最小的两个类；（新的类间距离取决于类内样本的均值）\n继续合并类，直至类间距离大于阈值或者类别数k满足要求；\n动态聚类：C均值聚类(k-means) # 优化准则函数$J_e$，使得类内误差平方和最小\n设定k个聚类中心\n每个样本进行分类，使得类内误差平方和最小（实际就是KNN），从而更新聚类中心\n不断地迭代（分类+更新中心），直至聚类中心不再被更新\n初始聚类中心和类别数会影响收敛速度和边界样本的类别归属（但总是收敛的）\n可以选择几何意义明确的点作为聚类中心。\n准则函数实质上是MSE，可以选择MSE曲线的拐点作为最佳类别数k。\n近邻函数聚类 # 近邻函数：每个样本点到其他样本点的距离\n计算距离矩阵D\n计算近邻系数矩阵$M=[m_{ij}]$，$X_i$是$X_j$的第$m_{ij}$个近邻\n计算近邻函数值矩阵$A=[a_{ij}],a_{ij}=\\begin{cases}m_{ij}+m_{ji}-2,i\\ne j\\newline2N,i=j\\end{cases}$​\n找出每行的最小元素，将距离最近的样本点连起来，形成初始聚类\n对于每个类别，寻找与之距离最近的类别，若类间距离(min)\u0026lt;类内距离(max,min)，则合并两个类别；不断迭代，直至无法合并\n最小生成树聚类 # 先构建出最小生成树\n然后找到权值最大的一条边，将样本集分为两个子集，递归地进行，直至最大边小于阈值\n最小生成树算法 适用 Prim 先找到最小边，然后依次向外扩展最小的边，且不能构成环路，直至连通 节点少 Kruskal 依次寻找最小的边，且不能构成环路，直至连通 边少 句法分析 # 文法：根据一定规则产生样本\n类型 符号 终止符 $V_T$$V_T=\\set{a,b,c}$ Terminal 非终止符 $V_N=\\set{S,A,B,C}$ Nonterminal 起始符 $S$，一类特殊的非终止符 产生式 $\\alpha\\rightarrow\\beta,\\alpha\\in V^+,\\beta \\in V^*$ Parse 4种基本文法与自动机 # 类型 文法 限制 0型文法 无约束文法 $\\alpha\\rightarrow\\beta$ 无 递归特性，可以产生一切类型的样本 图灵机 1型文法 上下文有关 $\\alpha_1A\\alpha_2\\rightarrow\\alpha_1B\\alpha_2$ 考虑上下文，但上下文也可以为空\n单个非终止符 上下文也可以是空句 线性界限自动机 2型文法 上下文无关 $A\\rightarrow\\beta$ 单个非终止符 最左推导/最右推导（从最左/最优的非终止符开始推导） 下推自动机 3型文法 正则 $A\\rightarrow a$\n$A\\rightarrow aB$ 左：单个非终止符\n右：单个终止符/单个终止符+单个非终止符 可以用状态图表示 有限状态自动机 4种文法的关系：限制逐渐增加，范围逐渐缩小\n编译原理之文法的分类和判别-CSDN博客\n句法识别 # 句法识别方法：样本是否能被模式类的文法生成\n$模式类\\omega_i对应的文法是G_i，如果x\\in L(G_i)，那么则判定x\\in w_i$\n参考匹配法 每个模式类根据对应的文法生成对应的参考列，将样本与每一列的参考列逐个比对 状态图法 对于正则文法，若能找到状态图中的通路，则属于模式类 填充树法 对于上下文无关文法，在每一步时考虑所有可能得文法，直到产生样本或无法产生样本为止（本质上是穷举） ","date":"14 June 2024","externalUrl":null,"permalink":"/course/pr/","section":"Course","summary":"\u003ch2 class=\"relative group\"\u003e相似性度量 \n    \u003cdiv id=\"相似性度量\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%9b%b8%e4%bc%bc%e6%80%a7%e5%ba%a6%e9%87%8f\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003e最小距离分类器 \n    \u003cdiv id=\"最小距离分类器\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e6%9c%80%e5%b0%8f%e8%b7%9d%e7%a6%bb%e5%88%86%e7%b1%bb%e5%99%a8\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e将样本归入距离最近的类别\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e平均样本法\u003c/td\u003e\n          \u003ctd\u003e样本到每个类别的各样本平均值的距离\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e平均距离法\u003c/td\u003e\n          \u003ctd\u003e样本到每个类别的各个样本的距离的平均值\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e最近邻法\u003c/td\u003e\n          \u003ctd\u003e样本最近的样本\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e距离，即相似性测度，常用的测度有：欧式距离、马氏距离（$(X-M)^T\\Sigma(X-M)$，衡量了样本到分布的距离）、向量夹角余弦\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003e线性分类器 \n    \u003cdiv id=\"线性分类器\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%ba%bf%e6%80%a7%e5%88%86%e7%b1%bb%e5%99%a8\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003en维线性分类器可以表达为超平面$w^Tx+b=0$\n如果\u003cstrong\u003e将样本X的第n+1维设为1\u003c/strong\u003e，则超平面可以简化为$w^Tx=0$\n若样本集线性可分，则存在分类器使得所有样本满足$\\begin{cases}w^Tx\u0026gt;0\\quad if\\ x\\in w_1\\newline\nw^Tx\u0026lt;0\\quad if\\ x\\in w_2\\end{cases}$\u003c/p\u003e\n\u003cp\u003e线性分类器的解必然构成解区域，解是不确定的\u003c/p\u003e\n\u003cp\u003e多分类问题按照\u003cstrong\u003e是否线性可分、是否存在不确定区域的解\u003c/strong\u003e可以分成三种情况\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e情况\u003c/th\u003e\n          \u003cth\u003e分类器\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e总体线性可分\u003c/td\u003e\n          \u003ctd\u003e训练n个超平面，分隔每个类和其他所有类\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e成对线性可分\u003c/td\u003e\n          \u003ctd\u003e用$C_n^2$个独立的超平面，将两个类别分开\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e成对线性可分，且存在没有不确定区域的解\u003c/td\u003e\n          \u003ctd\u003e每个类别训练一个判别函数，采用最大值判决\u003cbr /\u003e$G_{ij}(X)=g_i(X)-g_j(X)$\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3 class=\"relative group\"\u003e感知器 \n    \u003cdiv id=\"感知器\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e6%84%9f%e7%9f%a5%e5%99%a8\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e线性分类器+阶跃函数\u003c/p\u003e","title":"Pattern Recogniton","type":"course"},{"content":"","date":"14 June 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" About Me # I am a fisrt year PhD student at Biomedical Engineering School of the University of Science and Technology of China (USTC) supervised by Prof. S. Kevin Zhou. I received my bachelor’s degree from Soochow University (SCU) in 2023. My bachelor’s tutor is Prof. Dehui Xiang.\nI\u0026rsquo;m currently focusing on AI for Medicine, especially Clinical NLP (including ICD Coding, Diagnosis \u0026amp; Treatment). My research goal is to inject medical knowledge into large language models, or design appropriate workflow for them, equipping LLMs with capabilities of dealing with complex clinical tasks.\n","date":"1 January 0001","externalUrl":null,"permalink":"/cv/","section":"Xu Zhang's Blog","summary":"\u003ch2 class=\"relative group\"\u003eAbout Me \n    \u003cdiv id=\"about-me\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#about-me\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eI am a fisrt year PhD student at Biomedical Engineering School of the University of Science and Technology of China (\u003ca href=\"https://en.ustc.edu.cn\" target=\"_blank\"\u003eUSTC\u003c/a\u003e) supervised by Prof. \u003ca href=\"https://scholar.google.com/citations?user=8eNm2GMAAAAJ\u0026amp;hl=en\" target=\"_blank\"\u003eS. Kevin Zhou\u003c/a\u003e. I received my bachelor’s degree from Soochow University (\u003ca href=\"https://eng.suda.edu.cn\" target=\"_blank\"\u003eSCU\u003c/a\u003e) in 2023. My bachelor’s tutor is Prof. \u003ca href=\"https://scholar.google.com/citations?user=egSgzRQAAAAJ\u0026amp;hl=zh-CN\u0026amp;oi=ao\" target=\"_blank\"\u003eDehui Xiang\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m currently focusing on AI for Medicine, especially Clinical NLP (including ICD Coding, Diagnosis \u0026amp; Treatment). My research goal is to inject medical knowledge into large language models, or design appropriate workflow for them, equipping LLMs with capabilities of dealing with complex clinical tasks.\u003c/p\u003e","title":"","type":"page"},{"content":"AI Research\nSurveyX\n","date":"1 January 0001","externalUrl":null,"permalink":"/research/ai4research/","section":"Research","summary":"\u003cp\u003eAI Research\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://surveyx.cn/list\" target=\"_blank\"\u003eSurveyX\u003c/a\u003e\u003c/p\u003e","title":"","type":"research"},{"content":" 2025 # A General Knowledge Injection Framework for ICD Coding\nXu Zhang, Kun Zhang, Wenxinma, \u0026hellip;, S. Kevin Zhou\nACL 2025 Findings 📝 Paper | 🔗 Code\nAA-CLIP: Enhancing zero-shot anomaly detection via anomaly-aware clip\nWenxin Ma, Xuzhang, \u0026hellip;\nCVPR 2025 📝 Paper | 🔗 Code\n2022 # Cross modality fusion for modality-specific lung tumor segmentation in PET-CT images\nXu Zhang, \u0026hellip;, Dehui Xiang\nPMB 2022 📝 Paper | 🔗 Code For a full list of my work, please visit my Google Scholar profile.\n","date":"1 January 0001","externalUrl":null,"permalink":"/publication/","section":"Xu Zhang's Blog","summary":"\u003ch2 class=\"relative group\"\u003e2025 \n    \u003cdiv id=\"2025\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#2025\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eA General Knowledge Injection Framework for ICD Coding\u003c/strong\u003e\u003cbr\u003e\n\u003cem\u003eXu Zhang, Kun Zhang, Wenxinma, \u0026hellip;, S. Kevin Zhou\u003c/em\u003e\u003cbr\u003e\n\u003cem\u003eACL 2025 Findings\u003c/em\u003e\n📝 \u003ca href=\"https://arxiv.org/abs/2505.18708\" target=\"_blank\"\u003ePaper\u003c/a\u003e | 🔗 \u003ca href=\"https://github.com/xuzhang0112/GKI-ICD\" target=\"_blank\"\u003eCode\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAA-CLIP: Enhancing zero-shot anomaly detection via anomaly-aware clip\u003c/strong\u003e\u003cbr\u003e\n\u003cem\u003eWenxin Ma, Xuzhang, \u0026hellip;\u003c/em\u003e\u003cbr\u003e\n\u003cem\u003eCVPR 2025\u003c/em\u003e\n📝 \u003ca href=\"https://arxiv.org/abs/2503.06661\" target=\"_blank\"\u003ePaper\u003c/a\u003e | 🔗 \u003ca href=\"https://github.com/Mwxinnn/AA-CLIP\" target=\"_blank\"\u003eCode\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e2022 \n    \u003cdiv id=\"2022\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#2022\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCross modality fusion for modality-specific lung tumor segmentation in PET-CT images\u003c/strong\u003e\u003cbr\u003e\n\u003cem\u003eXu Zhang, \u0026hellip;, Dehui Xiang\u003c/em\u003e\u003cbr\u003e\n\u003cem\u003ePMB 2022\u003c/em\u003e\n📝 \u003ca href=\"https://iopscience.iop.org/article/10.1088/1361-6560/ac994e/meta\" target=\"_blank\"\u003ePaper\u003c/a\u003e | 🔗 \u003ca href=\"https://github.com/xuzhang0112/PET-CT-Lung-Tumor-Segmentation\" target=\"_blank\"\u003eCode\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003eFor a full list of my work, please visit my \u003ca href=\"https://scholar.google.com/citations?user=6-NiSKYAAAAJ\u0026amp;hl=zh-CN\" target=\"_blank\"\u003eGoogle Scholar\u003c/a\u003e profile.\u003c/p\u003e","title":"📚Publications","type":"page"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/conference/","section":"Conference","summary":"","title":"Conference","type":"conference"},{"content":" Arcitecture # 所有类型的神经网络都可以看成是线性变换+交互。线性变换是不变的，即对每一个像素/token/节点的特征向量进行相同的Linear+Activation；交互则取决于具体的任务：CNN的交互是相邻的像素点加权平均，RNN的交互是下一个token依赖上一个token，Transformer的交互是token与token之间的注意力加权平均，GNN的交互是一阶邻域内节点的加权平均。大部分模型结构层面的优化也是根据任务场景来设计新的交互方式。\nCNN # Series Model Time Consumption UNet UNet 2014 跳跃连接，精细分割 RCNN RCNN 2013 用CNN做Dectection，再用CNN做Classification 40-50s Fast-RCNN 2015 使用同一个CNN计算bounding box和Label 2s Faster-RCNN 2015 去除了Selective Search 0.2s Mask-RCNN 支持Instance Segmentation YOLO Yolo v1 2015 用回归问题统一了Bounding Box的坐标预测和类别预测 Yolo v2 2016 支持不同输入尺寸 Yolo v3 2018 支持多标签；引入多尺度； Yolo v4, v5, v6 2020 2021 Yolo v6, v7 2022 Yolo v8 2023 RNN # 感觉已经G了，不想写了，随便写点吧\nModel RNN t时刻的输出与t时刻的输入和t-1时刻的隐状态有关 LSTM 设置遗忘门、输入门和输出门，输出是记忆和输入的加权和，以达到选择性遗忘和选择性输入的目的。 Mamba 一文通透想颠覆Transformer的Mamba：从SSM、HiPPO、S4到Mamba Transformer # 注意力机制：计算每个向量（Q）与其他向量（K, V）的相关性，用加权和取代原来的向量\n多头：将c维向量拆成n个c/n维向量，分别使用注意力机制，然后再拼接回\n多头注意力的使用方式 并行计算 自注意力 Encoder 第n个token是Q，当前Encoder层输入的所有token是K和V 完全并行 Decoder 第n个token是Q，当前Decoder层输出的前n-1个token是K和V 高度并行（Teacher Forcing） 交叉注意力 Decoder 第n个token是Q，最后一层Encoder输出的所有token是K和V 高度并行（Teacher Forcing） Series Model BERT Roberta 字节对编码(BPE)；动态掩码；去除NSP；大bs和大lr；10倍规模的数据集； Albert Embedding低秩矩阵分解；NSP改成SOP；跨层attention参数共享； ERNIE (THU) 设计Aggregator来使文本和实体进行充分交互；使文本在映射后可以预测实体； ERNIE1.0 (Baidu) 在MLM阶段额外进行phrase-level和entity-level的mask ERNIE2.0 (Baidu) 持续多任务学习，渐进地增加更复杂的任务 GPT GPT-2 Pretraining+Zero-Shot 在9个任务上超过有监督SOTA；在摘要、翻译、问答等任务上不如无监督模型 GPT-3 Pretraining+Few-Shot 超过了有监督BERT，尚未超过有监督SOTA GPT3.5：InsturctGPT GPT3+SFT+RM+PPO VIT 将图片拆成patch，每个patch通过reshape和MLP转化为词向量，送入Tansformer的encoder SwinTransformer UNETR Transformer Encoder + UNet Decoder SwinUnet GNN # 在神经网络兴起之前，主流方法是通过构造合理的度量函数来优化每个实体的表示\nKG2E 度量函数 建模关系 TransE 平移 Inversion; Composition DisMult 双线性 Symmetry; CompIEx 复空间内积/共轭内积 Symmerty; Antisymmerty RotateE 复空间旋转 Inversion; Compostition; Symmertry; 随着神经网络的发展，GNN被提出，通过建模邻域节点的特征，来获取更好的中心节点表示；GNN的层数一般取2或3\nGNN 聚合方式 GCN 邻域内平均 GAT 邻域注意力加权 GraphSAGE 邻域，区分自身和邻居 通常情况下，每次前向传播是将采样的子图作为一个Batch，以当前子图上所有含有标签的节点/边作为监督信号计算Loss并进行反向传播。\nApplication # AlphaGo # AlphaGo 的训练分为几个阶段：\n策略网络：Supervised Learning 数据来源：从人类棋谱中收集大量数据。 目标：通过神经网络拟合人类的落子策略，训练初始的策略网络，使其能够预测人类棋手的走法。 方法：利用交叉熵损失函数优化策略网络。 策略网络：Reinforcement Learning 数据来源：AlphaGo 自我对弈产生的新棋谱。 目标：在与自身对弈的过程中改进策略网络，使其超越人类棋谱中的策略。 方法：基于策略梯度方法优化网络，最大化自我对弈的胜率。 价值网络：Reinforcement Learning 数据来源：大量终局数据，标注每个局面的实际胜负结果。 目标：通过监督学习训练价值网络，使其能评估局面的胜率。 蒙特卡洛树搜索：MCTS AlphaGo 将策略网络和价值网络结合到蒙特卡洛树搜索中进行优化。 策略网络指导扩展和模拟，价值网络评估局面，提升搜索的效率和精度。 VAE # 变分：用人为构造的分布近似无法准确获知的分布；例如在贝叶斯公式中丢弃分母就是一种变分\n熵：信息量的期望；概率越小熵越大；独立事件的熵具有可加性\nKL散度：真实分布和估计分布的交叉熵-真实分布的熵；两个分布差别越大，KL散度越大；不是对称度量；\n推导：为了用Encoder拟合出$P(z|x)$的分布，需要最小化两者的KL散度，然后通过推导（X的分布于Z的分布无关，联合概率和条件概率，等等）得出只需最大化ELBO，进一步化简ELBO的相反数，即可得到损失函数\n损失函数：Z条件下X的分布的对数似然（正态分布下是X和预测结果的插值）+ X条件下Z的分布和正态分布的KL散度（有解析解）\n重参数化：将采样转化为标准正态随机变量和X条件下Z分布的参数的线性运算\nDDPM # 前向（加噪）：给定某个图像，视为从latent space中的一次采样，可以计算出从噪声扩散成图像的过程中的每一步图像，常见的步数有10步、20步、100步\n逆向（去噪/采样）：训练神经网络，可以从每个时刻扩散到下一时刻，并基于最新时刻的采样点，，扩散成想要的图像\n应用\nRestoration：根据加噪类型，添加合理的逆变换，以最大程度保留原图特征，然后基于此训练扩散模型\nGeneration：施加不同的噪声，产生多样化的结果\nMetrics # Label Ranking Average Precision\n在Multi Label问题中，对于每个Positive Label，用按照logits从高到底排序查找该Label，用过程中所有的Positive Label除以该过程中涉及的Label个数，即为该Label的LRP。 $$ MAP=\\frac{1}{N_Y}\\sum_{y\\in Y}{Precision@Rank(y)} $$\nLearning # Contrastive Learning # InstDisc：提出了个体判别的代理任务，核心思想是每张图片都是一个类 # batch_size=256, 256个正样本，4096个负样本 Backbone是ResNet50，2048降维到128 200个epoch,温度0.07，学习率1e-2\n数据结构：memory bank\nInvaSpread：端到端，SimCLR前身 # 端到端，正负样本来自同一个mini batch，正样本是任一图片及其变换，负样本是其他图片及其变换\n因为字典不够大（batchsize只有256），数据增广不够，没有加MLP，因此效果不好\nMoCo：提出了“字典查找”的概念，认为对比学习本质上是在构建一个大字典 # 用队列取代memory bank\n使用动量编码来解决大字典内key的不一致，由于key的编码器更新缓慢，因此可以认为一致\n损失函数：infoNCE\n普适性强，Q和K的编码器可以不同，输入可以是任意模态\nsimCLR：成功实现了端到端的对比学习 # 只有一个编码器\n更多的数据增强：对比学习非常依赖数据增强 对比学习时增加了一个MLP层（迁移到下游任务时去除） 更大的batchsize：从而实现端到端训练 MoCov2 # MoCo+数据增强+MLP+cos schedule\nbatch=256时，效果远优于sim CLR\nsimCLRv2 # 模型更大\nMLP：fn-ReLu-fn\n动量编码器\nMeta Learning # 参考：Meta-Learning in Neural Networks*: A Survey（2020）\nMeta-learning经常被理解为learn to learn，可以分为两个阶段：内循环和外循环。\n内循环阶段，模型利用训练样本拟合某个特定任务；在外循环阶段，对外循环的某个目标函数进行优化。\n内循环和外循环迭代交替进行。\nMAML: Model-Agnostic Meta-Learning for Fast Adaptation of Deep Networks（2017) # 与传统机器学习的区别\n传统机器学习：训练集和测试集是同一个task，在训练集样本上训练模型，希望模型在测试集样本上表现好 MAML：task不同，在训练集可见的task上训练模型，希望在未见过的task上效果好 利用训练集的task学习一个初始化参数，使这个参数在未见过的任务上finetune几轮，就能达到较好的效果 两个阶段：meta-train（内循环+外循环迭代更新，support set \u0026amp; query set）、meta-test（在具体任务上finetune）\nReinforcement Learning # 监督学习（Supervised Learning） 强化学习（Reinforcement Learning） 数据形式 独立同分布（i.i.d）的样本-标签对 (x,y)(x,y) 时序相关的状态-动作-奖励序列 (s,a,r)(s,a,r) 反馈类型 显式标签（正确答案） 延迟且稀疏的奖励信号（如游戏得分） 学习目标 最小化预测误差（如交叉熵损失） 最大化长期累积奖励（通过策略优化） 环境交互 无需与环境实时交互 需通过试错与环境动态交互 探索与利用 无需平衡探索与利用 需在探索新动作和利用已知高奖励动作间权衡 典型任务 图像分类、文本翻译 游戏控制、机器人导航 ","date":"1 January 0001","externalUrl":null,"permalink":"/research/basic_knowledge/","section":"Research","summary":"\u003ch2 class=\"relative group\"\u003eArcitecture \n    \u003cdiv id=\"arcitecture\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#arcitecture\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e所有类型的神经网络都可以看成是线性变换+交互。线性变换是不变的，即对每一个像素/token/节点的特征向量进行相同的Linear+Activation；交互则取决于具体的任务：CNN的交互是相邻的像素点加权平均，RNN的交互是下一个token依赖上一个token，Transformer的交互是token与token之间的注意力加权平均，GNN的交互是一阶邻域内节点的加权平均。大部分模型结构层面的优化也是根据任务场景来设计新的交互方式。\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003eCNN \n    \u003cdiv id=\"cnn\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#cnn\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eSeries\u003c/th\u003e\n          \u003cth\u003eModel\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003eTime Consumption\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eUNet\u003c/td\u003e\n          \u003ctd\u003eUNet\u003c/td\u003e\n          \u003ctd\u003e2014\u003c/td\u003e\n          \u003ctd\u003e跳跃连接，精细分割\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRCNN\u003c/td\u003e\n          \u003ctd\u003eRCNN\u003c/td\u003e\n          \u003ctd\u003e2013\u003c/td\u003e\n          \u003ctd\u003e用CNN做Dectection，再用CNN做Classification\u003c/td\u003e\n          \u003ctd\u003e40-50s\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eFast-RCNN\u003c/td\u003e\n          \u003ctd\u003e2015\u003c/td\u003e\n          \u003ctd\u003e使用同一个CNN计算bounding box和Label\u003c/td\u003e\n          \u003ctd\u003e2s\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eFaster-RCNN\u003c/td\u003e\n          \u003ctd\u003e2015\u003c/td\u003e\n          \u003ctd\u003e去除了Selective Search\u003c/td\u003e\n          \u003ctd\u003e0.2s\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eMask-RCNN\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e支持Instance Segmentation\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eYOLO\u003c/td\u003e\n          \u003ctd\u003eYolo v1\u003c/td\u003e\n          \u003ctd\u003e2015\u003c/td\u003e\n          \u003ctd\u003e用回归问题统一了Bounding Box的坐标预测和类别预测\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eYolo v2\u003c/td\u003e\n          \u003ctd\u003e2016\u003c/td\u003e\n          \u003ctd\u003e支持不同输入尺寸\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eYolo v3\u003c/td\u003e\n          \u003ctd\u003e2018\u003c/td\u003e\n          \u003ctd\u003e支持多标签；引入多尺度；\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eYolo v4, v5, v6\u003c/td\u003e\n          \u003ctd\u003e2020\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e2021\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eYolo v6, v7\u003c/td\u003e\n          \u003ctd\u003e2022\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003eYolo v8\u003c/td\u003e\n          \u003ctd\u003e2023\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3 class=\"relative group\"\u003eRNN \n    \u003cdiv id=\"rnn\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#rnn\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e感觉已经G了，不想写了，随便写点吧\u003c/p\u003e","title":"Deep Learning","type":"research"},{"content":" Introduction \u0026amp; Background # LLM和KG各有利弊：LLM富含通用知识、擅长语言处理、具有泛化性；KG具有结构化的精确知识，可解释性强，知识专业性强，可演化；\nLLM # Encoder-only、Decoder-only、Encoder-Decoder的LLM发展路线图\nEncoder和Decoder之间的异同，以及Self-Attention的内部结构\nKG # 各种类型的KG，包括百科全书、常识、领域知识和多模态的知识图谱\nLLM与KG的结合 # LLM和KG交互的3种方式：KG增强LLM，LLM增强KG，两者协同\n目前LLM和KG的结合应用较少，知名的有ERNIE3.0、Bard和Doctor.ai\n重点在于如何将LLM与KG结合，一些可能的技术手段有Prompt工程、GNN、神经符号推理、表征学习、上下文学习、少样本学习。\nKG-ENHANCED LLMS # KG-enhanced LLM Pre-training # Integrating KGs into Training Objective # 增强KG实体 # Method GLM 基于KG来计算mask概率，n-hop的实体被赋予更高的mask概率 E-BERT 基于token和entity的loss大小来动态调整各自的权重 SKEP 基于PMI来挖掘表达情感倾向的词语，然后赋予这些词语更高的概率 利用KG和文本之间的连接 # Method ERNIE 对齐文本token和KG实体 KALM 整合实体嵌入，预测实体 KEPLER 同时训练KG嵌入和Mask token预测 Deterministic LLM 遮盖事实性关系的决定性token，并设置相应的预测任务和对比任务 WKLM 替换同类型的实体，让LLM鉴别是否被替换 ERNIE：将对齐文本和KG作为训练目标\nIntegrating KGs into LLM Inputs # Method ERNIE3.0 将KG三元组与句子拼接，同时预测masked token和三元组中的relation；会引入Knowledge Noise K-BERT 引入visible matrix，仅句子中的实体token与三元组有交互 COLAKE 将输入token建立成子图，从而拼接相应的KG子图 DkLLM 检测长尾实体，用pseudo token替代 Dict-BERT 将长尾实体用字典中的定义描述替换，并将长尾概念与描述对齐 Colake：输入文本子图拼接KG子图\nKG指令微调 # Method KPPLM 将结构化KG子图构建成文本prompt，并进一步自监督微调LLM利用这些Prompt OntoPrompt 将KG实体放在LLM的上下文中，并进一步微调 ChatKBQA 训练LLM在KG上进行逻辑查询 RoG 训练LLM进行规划-检索-推理，在KG上产生可信的推理路径 KG-enhanced LLM Inference # 主要解决LLM无法更新知识的问题，多用于QA。\nRetrieval-Augmented Knowledge Fusion # Method RAG 用非参数化的模块MIPS检索相关文档，然后编码成隐变量，作为LLM的上下文，做进一步生成 Story-fragments 添加额外模块来决定相关的知识实体，并添加到上下文 EMAT 将外部知识编码成K-V Cache，加速推理 REALM 在预训练阶段，加入知识检索器，训练模型检索和关注语料库中的相关知识 KGLM 使用上下文从KG中选择事实 RAGPipeline\nKG\u0026rsquo;s Prompting # Method Li 将三元组转化为模板短句 MindMap 将图结构转化为思维导图 ChatRule 将Relation Path转化为文本Prompt Cok 将三元组序列构成知识链条 LLM-AUGMENTED KGS # LLM-augmented KG Embedding # LLMs as Text Encoders # Pretrain-KGE 将三元组中的文本用LLM编码，并计算KG损失函数 KEPLER 统一KG embedding和预训练LM的embedding Nayyeri等 将篇章结构视为图结构，进一步整合文本的嵌入 Huang等 多模态KG嵌入 CoDEx 提出新的损失函数，度量三元组的可能性 LLMs for Joint Text and KG Embedding # kNN-KGE 将实体和关系作为LLM的特殊token LMKE 对比学习方法 LambdaKG 添加KG中的1-hop邻居 kNN-KGE\nLLM-augmented KG Completion # LLM-augmented KG Construction # LLM-augmented KG-to-text Generation # LLM-augmented KG Question Answering # SYNERGIZED LLMS + KGS # Synergized Knowledge Representation # Method ERNIE 文本-KG双编码器 BERT-MK 额外引入相邻实体 Coke-BERT 基于GNN，利用输入文本滤除无关实体 JAKET 在LLM中部融合实体信息 KEPLER 用LLM统一KG实体和文本的嵌入 JointGT 提出3个预训练任务来对齐KG实体和文本 DRAGON 文本-KG交互的自监督预训练，掩码文本恢复+链路预测 HKLM LLM结合KG来学习领域知识 ERNIE：文本-知识图谱双编码器结构\nSynergized Reasoning # LLM-KG Fusion Reasoning # Method KagNet 编码输入KG，增强文本 MHGRN 用LLM输出来引导KG推理 QA-GNN 将文本嵌入成一个节点，与KG构成图，用GNN处理 JointLK 文本和KG之间双向的细粒度注意力交互 GreaseLM 文本和KG在LLM的每一层发生交互 JointLK：LLM的输出和KG Encoder的输出通过注意力交互，以修剪KG得到答案\nLLMs as Agents Reasoning # LLM在KG中检索到对应的事实路径，以给出正确的答案\nMethod KD-CoT 迭代检索KG路径，获取事实 KSL LLM检索事实、产生答案 StructGPT LLM调用API获取KG知识 ThinkonGraph LLM进行Beam Search以获取KG知识 AgentTuning 数据集，用于LLM的KG推理 ","date":"1 January 0001","externalUrl":null,"permalink":"/research/kg4llm/","section":"Research","summary":"\u003ch2 class=\"relative group\"\u003eIntroduction \u0026amp; Background \n    \u003cdiv id=\"introduction--background\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction--background\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eLLM和KG各有利弊：LLM富含通用知识、擅长语言处理、具有泛化性；KG具有结构化的精确知识，可解释性强，知识专业性强，可演化；\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003eLLM \n    \u003cdiv id=\"llm\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#llm\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e\n\n\n\n\n\n\u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" alt=\"image-20240704172235679\" src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/202407041722595.png\" /\u003e\n\n  \n\u003c/figure\u003e\n\u003c/p\u003e\n\u003cp\u003eEncoder-only、Decoder-only、Encoder-Decoder的LLM发展路线图\u003c/p\u003e\n\u003cp\u003e\n\n\n\n\n\n\u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" alt=\"image-20240704172732196\" src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/202407041727026.png\" /\u003e\n\n  \n\u003c/figure\u003e\n\u003c/p\u003e\n\u003cp\u003eEncoder和Decoder之间的异同，以及Self-Attention的内部结构\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003eKG \n    \u003cdiv id=\"kg\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#kg\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e\n\n\n\n\n\n\u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" alt=\"image-20240704173050791\" src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/202407041730828.png\" /\u003e\n\n  \n\u003c/figure\u003e\n\u003c/p\u003e\n\u003cp\u003e各种类型的KG，包括百科全书、常识、领域知识和多模态的知识图谱\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003eLLM与KG的结合 \n    \u003cdiv id=\"llm与kg的结合\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#llm%e4%b8%8ekg%e7%9a%84%e7%bb%93%e5%90%88\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e\n\n\n\n\n\n\u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" alt=\"image-20240704173249398\" src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/202407041732894.png\" /\u003e\n\n  \n\u003c/figure\u003e\n\u003c/p\u003e","title":"KG for LLM","type":"research"},{"content":" 图表 # figure*,table*表示双栏\n公式 # ALphabet # 大写 小写 Α α Alpha Β β Beta Γ γ Gamma Δ δ Delte Ε ε Epsilon Ζ ζ zeta Ε η Eta Θ θ Theta Ι ι Iota Κ κ Kappa ∧ λ Lambda Μ μ Mu Ν ν Nu Ξ ξ Xi Ο ο Omicron ∏ π Pi Ρ ρ Rho ∑ σ Sigma Τ τ Tau Υ υ Upsilon Φ φ Phi Χ χ Chi Ψ ψ Psi Ω ω Omega ","date":"1 January 0001","externalUrl":null,"permalink":"/software/latex/","section":"Software","summary":"\u003ch2 class=\"relative group\"\u003e图表 \n    \u003cdiv id=\"图表\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%9b%be%e8%a1%a8\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003efigure*,table*\u003c/code\u003e表示双栏\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003e公式 \n    \u003cdiv id=\"公式\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%85%ac%e5%bc%8f\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch2 class=\"relative group\"\u003eALphabet \n    \u003cdiv id=\"alphabet\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#alphabet\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e大写\u003c/th\u003e\n          \u003cth\u003e小写\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΑ\u003c/td\u003e\n          \u003ctd\u003eα\u003c/td\u003e\n          \u003ctd\u003eAlpha\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΒ\u003c/td\u003e\n          \u003ctd\u003eβ\u003c/td\u003e\n          \u003ctd\u003eBeta\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΓ\u003c/td\u003e\n          \u003ctd\u003eγ\u003c/td\u003e\n          \u003ctd\u003eGamma\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΔ\u003c/td\u003e\n          \u003ctd\u003eδ\u003c/td\u003e\n          \u003ctd\u003eDelte\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΕ\u003c/td\u003e\n          \u003ctd\u003eε\u003c/td\u003e\n          \u003ctd\u003eEpsilon\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΖ\u003c/td\u003e\n          \u003ctd\u003eζ\u003c/td\u003e\n          \u003ctd\u003ezeta\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΕ\u003c/td\u003e\n          \u003ctd\u003eη\u003c/td\u003e\n          \u003ctd\u003eEta\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΘ\u003c/td\u003e\n          \u003ctd\u003eθ\u003c/td\u003e\n          \u003ctd\u003eTheta\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΙ\u003c/td\u003e\n          \u003ctd\u003eι\u003c/td\u003e\n          \u003ctd\u003eIota\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΚ\u003c/td\u003e\n          \u003ctd\u003eκ\u003c/td\u003e\n          \u003ctd\u003eKappa\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e∧\u003c/td\u003e\n          \u003ctd\u003eλ\u003c/td\u003e\n          \u003ctd\u003eLambda\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΜ\u003c/td\u003e\n          \u003ctd\u003eμ\u003c/td\u003e\n          \u003ctd\u003eMu\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΝ\u003c/td\u003e\n          \u003ctd\u003eν\u003c/td\u003e\n          \u003ctd\u003eNu\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΞ\u003c/td\u003e\n          \u003ctd\u003eξ\u003c/td\u003e\n          \u003ctd\u003eXi\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΟ\u003c/td\u003e\n          \u003ctd\u003eο\u003c/td\u003e\n          \u003ctd\u003eOmicron\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e∏\u003c/td\u003e\n          \u003ctd\u003eπ\u003c/td\u003e\n          \u003ctd\u003ePi\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΡ\u003c/td\u003e\n          \u003ctd\u003eρ\u003c/td\u003e\n          \u003ctd\u003eRho\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e∑\u003c/td\u003e\n          \u003ctd\u003eσ\u003c/td\u003e\n          \u003ctd\u003eSigma\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΤ\u003c/td\u003e\n          \u003ctd\u003eτ\u003c/td\u003e\n          \u003ctd\u003eTau\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΥ\u003c/td\u003e\n          \u003ctd\u003eυ\u003c/td\u003e\n          \u003ctd\u003eUpsilon\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΦ\u003c/td\u003e\n          \u003ctd\u003eφ\u003c/td\u003e\n          \u003ctd\u003ePhi\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΧ\u003c/td\u003e\n          \u003ctd\u003eχ\u003c/td\u003e\n          \u003ctd\u003eChi\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΨ\u003c/td\u003e\n          \u003ctd\u003eψ\u003c/td\u003e\n          \u003ctd\u003ePsi\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eΩ\u003c/td\u003e\n          \u003ctd\u003eω\u003c/td\u003e\n          \u003ctd\u003eOmega\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e","title":"Latex","type":"software"},{"content":" 作业1 # 线性空间 # 数域：对加减乘除封闭\n常微分方程的通解：特征方程，指数函数\n线性空间：对加法\u0026amp;数乘封闭+8条\n基：线性无关+表出整个空间\n柯西不等式：根据内积半正定得到不等式，然后再根据结论构造；\n施密特正交化：范数由区间上的内积定义，而不是本身的模长；奇函数/偶函数在对称区间上积分的性质；减去在标准正交基上的分量+单位化；\n作业2 # 格拉姆矩阵：向量的内积；对角线上是范数的平方；注意非标准正交基的内积不为1；\n傅里叶变换 # 傅立叶变换：向量和不同正交基在酉空间上的内积结果；变换后的内积与原始内积的比值等于基向量的内积；\n帕萨瓦尔定理：时空域和频域的概率密度函数的范数相等；\n时域/频域概率密度函数的期望和方差：一阶矩和二阶矩，三角函数相关的微积分（三角恒等式，三角换元，点火公式考虑平方时的特殊情况pi/4）\n二维傅立叶变换：频域每一个点的基向量沿着二维空间的两个方向变化；而CT重建时是投影后再作一维傅立叶变换，本质上只有沿着一个方向变换的基向量，所以在频域只是过中心的直线（因为基向量只沿着一个方向变化，而不是两个）；\n作业3 # 子空间：对加法和数乘封闭+属于原线性空间；\n对角阵：对每一个基向量分别乘以一个系数（左乘变行/右乘变列，本质是分块矩阵乘法）\n若矩阵左乘对角阵和右乘对角阵相等，则该矩阵也是对角阵\n解空间的维度=n-系数矩阵的秩\n直和：和+线性无关；两个空间相等的充要条件是相互包含；\n相抵标准型：先行变换，再列变换；PAQ，行变换倒序，列变换正序；初等变换矩阵本质上还是对行和列的线性组合，可以视情况合并（例如所有列依次调换）；\n广义加号逆 # 已经掌握了流畅的推导！\n根据投影的正则方程$C^TAx=C^Tb$可得b在A的列空间的投影$\\hat{b}=C(C^TC)C^Tb$\n同时最优最小二乘解$x^*$属于A的行空间，所以可以表达为$\\bar{x}=A^Ty=R^T\\bar{y}$\n进一步代入$CRR^Ty=C(C^TC)C^Tb$，解得$\\bar{x}=R^T(RR^T)^{-1}(C^TC)^{-1}C^T$\n（关键在于凑可逆阵，行满秩乘以列满秩必可逆，即$C^TC和RR^T$可逆）\nCR分解：寻找PAQ满足标准形，然后将标准形拆成两个矩阵的乘积；本质是秩1矩阵的和；\n子空间的和：基向量的和；\n反证法：若a属于A空间+b不属于A空间,则a+b必不属于A空间（否则可以倒推出b属于A空间）\n作业4 # 二范数/四范数：最小值考虑one-hot（最小值为1）；最大值考虑柯西不等式（全1向量）；\n线性映射 # 线性变换矩阵 # 线性变换：考虑基变换时，不同的基对应不同的矩阵；\n不同基下的线性变换矩阵公式$$B=P^{-1}AP$$，其中P是A的基到B的基的过渡矩阵；到平凡基的过渡矩阵即现有基的逆矩阵；线性变换和矩阵同构，可以加法、数乘、乘法；\n核空间与象空间 # 核空间是该线性变换的零解空间，象空间是一切向量经线性变换后所能张成的空间\n核空间外的基经过线性变换后构成象空间（假设线性相关，则有核空间外的基的线性组合经过线性变换后落入核空间，反证出线性无关+象空间的每个向量可以由这组基表达，即该组基能张成整个象空间），注意线性变换对基和向量的不同作用\n考虑线性变换对空间中向量的作用$\\beta=\\phi\\alpha$，若满足$\\alpha = (\\epsilon_1,\\epsilon_2,\\epsilon_3,\u0026hellip;)x$，则对基的作用表现为$\\phi(\\epsilon_1,\\epsilon_2,\\epsilon_3,\u0026hellip;)=(\\epsilon_1,\\epsilon_2,\\epsilon_3,\u0026hellip;)A$，注意$\\phi$可以和后面的任意项结合，$（\\phi(\\epsilon_1,\\epsilon_2,\\epsilon_3,\u0026hellip;)x=\\phi((\\epsilon_1,\\epsilon_2,\\epsilon_3,\u0026hellip;)x)=(\\epsilon_1,\\epsilon_2,\\epsilon_3,\u0026hellip;)xA$，对坐标的作用表现为$y=Ax$\n特征值与特征向量 # 不同特征值的特征向量线性无关：1.两个特征值，反证法，若线性相关，则属于相同的特征值；2.多个特征值，数学归纳法，若前i+1个特征值的特征向量线性相关则推出前i个特征值的特征向量线性相关；\n秩1矩阵的相似对角化：考虑非零特征值和零特征值的特征子空间，非零特征值取决于是否正交，零特征值的特征子空间维数是n-1\n幂等变换：根据特征多项式得到特征值0和1；根据特征值的矩阵方程得到特征空间的维度\u0026gt;=n，（A是（A-I）X=0的解）进而=n。\n虚特征值的特征向量必为虚特征向量，设未知数，由特征方程推导即可；\n作业5 # 正交矩阵：一般是根据定义的矩阵方程，作转置/同乘转置/共轭/两式相乘等操作，注意向量内积的结果是标量；所有复特征值的模为1，模的平方=本身乘以共轭；行列式=实特征值的乘积；互异特征值的特征向量在酉空间正交；同一复特征值的特征向量在实空间的内积为0；\n奇异值分解 # 本质是$A^T$是半正定实对称矩阵，可以正交相似对角化；注意V是正交矩阵；并对AV作单位化处理；对于相似对角化，特征值即奇异值；\n诱导范数：线性变换对向量的最大伸缩比例；\n条件数：最大奇异值和最小奇异值的比值；反映了Ax=b的解空间对b的扰动的稳定性；\nKey # 1.判断线性空间\n2.判断卷积/微分是否线性移不变系统，判断高通低通\n3.不同基下的线性变换矩阵\n4.反对称矩阵的复特征值和复特征向量的讨论（内积满足的关系）\n5.幂等矩阵的解空间与列空间，证明解空间和列空间的和构成整个空间，证明是直和，分别讨论特征向量的维数\n6.I-ae1e1T的特征值、特征子空间，奇异值分解，最优秩1分解（F范数结论）\n","date":"1 January 0001","externalUrl":null,"permalink":"/course/algebra/","section":"Course","summary":"\u003ch2 class=\"relative group\"\u003e作业1 \n    \u003cdiv id=\"作业1\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e4%bd%9c%e4%b8%9a1\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003e线性空间 \n    \u003cdiv id=\"线性空间\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e7%ba%bf%e6%80%a7%e7%a9%ba%e9%97%b4\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e数域：对加减乘除封闭\u003c/p\u003e\n\u003cp\u003e常微分方程的通解：特征方程，指数函数\u003c/p\u003e\n\u003cp\u003e线性空间：对加法\u0026amp;数乘封闭+8条\u003c/p\u003e\n\u003cp\u003e基：线性无关+表出整个空间\u003c/p\u003e\n\u003cp\u003e柯西不等式：根据内积半正定得到不等式，然后再根据结论构造；\u003c/p\u003e\n\u003cp\u003e施密特正交化：范数由区间上的内积定义，而不是本身的模长；奇函数/偶函数在对称区间上积分的性质；减去在标准正交基上的分量+单位化；\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003e作业2 \n    \u003cdiv id=\"作业2\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e4%bd%9c%e4%b8%9a2\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e格拉姆矩阵：向量的内积；对角线上是范数的平方；注意非标准正交基的内积不为1；\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003e傅里叶变换 \n    \u003cdiv id=\"傅里叶变换\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%82%85%e9%87%8c%e5%8f%b6%e5%8f%98%e6%8d%a2\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e傅立叶变换：向量和不同正交基在酉空间上的内积结果；变换后的内积与原始内积的比值等于基向量的内积；\u003c/p\u003e\n\u003cp\u003e帕萨瓦尔定理：时空域和频域的概率密度函数的范数相等；\u003c/p\u003e\n\u003cp\u003e时域/频域概率密度函数的期望和方差：一阶矩和二阶矩，三角函数相关的微积分（三角恒等式，三角换元，点火公式考虑平方时的特殊情况pi/4）\u003c/p\u003e","title":"Linear Algebra","type":"course"},{"content":" Dataset # MIMIC-CXR # 377,110 images, 227,835 reports\nNIH-CXR # 112,120 X-ray images from 30,805 unique patients, with labels of 14 diseases\nThe labels are expected to be \u0026gt;90% accurate and suitable for weakly-supervised learning\nCheXpert # 224,316 images of 65,240 patients, labels of 14 diseases: positive, negative, uncertain\nTrain: all labeled by CheXpert Labeler\nValidation: 200, labeled by experts\nTest: 500, labeled by experts\nPadChest # 160,000+ images from 67,000 patients, from 2009 to 2017 reports labeled with 174 different radiographic findings, 19 differential diagnoses and 104 anatomic locations 27% were manually annotated and the remaining set was labeled by RNN (0.93 Micro-F1 score) RadGraph # structure clinical information in a radiology report with 4 entities and 3 relations, with MIMIC-CXR and CheXpert\nhttps://physionet.org/content/radgraph/1.0.0/\nAnnotations: 500 for train, 100 for test train.json: File containing annotations obtained by board-certified radiologists for 425 radiology reports (MIMIC-CXR) dev.json: File containing annotations obtained by board-certified radiologists for 75 radiology reports (MIMIC-CXR) test.json: File containing annotations obtained by 2 different board-certified radiologists for 100 radiology reports (50 MIMIC-CXR, 50 CheXpert) Graphs MIMIC-CXR_graphs.json: File containing annotations obtained by our deep learning model for 220,763 radiology reports (MIMIC-CXR) CheXpert_graphs.json: File containing annotations obtained by our deep learning model for 500 radiology reports (CheXpert) Models models/model_checkpoint: Folder containing the saved model parameters used to automatically generate the annotations in MIMIC-CXR_graphs.json and CheXpert_graphs.json models/README.txt: File containing instructions for performing inference using model checkpoint models/inference.py: File containing code to extract entities and relations given a directory containing reports in txt format Chest ImaGenome # scene graph to describe 242,072 images bounding boxes for 29 unique anatomical regions in the chest sentences describing each region if they exist in the corresponding radiology report Chest Disease # 疾病 中文名 症状 归纳 Cardiomegaly 心脏肥大 大小 Mass 肿块 Nodule 结节 Atelectasis 肺不张 一边没气，心脏也跟着挤过来 偏移 Pneumothorax 气胸 有气，肺被挤压 Effusion 积液 膈角很容易被填满，可能把心脏挤到另一边 Pneumonia 肺炎 Infiltrastion 浸润 Edema 水肿 Emphysema 肺气肿 Fibrosis 纤维化 Pleural Thickening 胸膜增厚 Hernia 疝 Consolidation 肺实变 ","date":"1 January 0001","externalUrl":null,"permalink":"/research/med_mm/","section":"Research","summary":"\u003ch2 class=\"relative group\"\u003eDataset \n    \u003cdiv id=\"dataset\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#dataset\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003eMIMIC-CXR \n    \u003cdiv id=\"mimic-cxr\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#mimic-cxr\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e377,110 images, 227,835 reports\u003c/p\u003e\n\n\u003ch3 class=\"relative group\"\u003eNIH-CXR \n    \u003cdiv id=\"nih-cxr\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#nih-cxr\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e112,120 X-ray images from 30,805 unique patients, with labels of 14 diseases\u003c/p\u003e\n\u003cp\u003eThe labels are expected to be \u0026gt;90% accurate and suitable for weakly-supervised learning\u003c/p\u003e","title":"Medical Multimodal","type":"research"},{"content":" 作业要点 # 作业1\n几何分布：概率为p的事件首次发生时的次数，期望=1/p\n协方差的计算公式推导：定义+期望的性质\n期望=条件期望的概率加权和\n泊松分布：小概率事件在一段时间内发生的次数，服从泊松分布的随机变量的和服从泊松分布，且$$\\lambda=\\lambda_1+\\lambda_2$$\nX+Y的概率分布：卷积公式，本质上是全概率公式（条件概率）\n贝叶斯公式：后验概率=先验概率+似然概率（后验颠倒）\n作业2\n马尔可夫链：利用含有条件概率的全概率公式\nXY的概率分布：独立则可拆分，并灵活运用方差=二阶矩-一阶矩^2\n多元概率分布之间的转换：利用雅可比行列式（顺序的记忆方法：不同分布都满足概率和为1）\n样本方差的期望：利用期望和方差的性质进行一通推导（期望是线性的，方差不是线性的，虽然可加）\n布朗运动：参考弹珠下落在分隔板上左/右移，借此思考其性质，然后根据定义一通推导就行了\nMatropolis hasting算法：可以采样出任意分布（建议看龙哥博客，因为我现在也忘了）\n作业3\n基于样本的均值和方差估计正态分布的均值和方差\n基于样本最大值估计均匀分布的上界\n估计量的均方误差=偏差的平方+估计量的方差\n区间估计：样本均值服从正态分布，样本方差服从自由度n-1的卡方分布（卡方分布，即多个正态分布的随机变量的平方和的分布）考试考了一道均值和方差都未知时的估计均值，有点坑\n基于区间估计进行假设检验\n作业4\n最大后验估计：基于贝叶斯公式可以获得参数的后验概率，然后将样本代入，即可得到该组样本下待估参数的分布函数，然后取极值点即可\n随机变量的换元：代入计算即可，没什么特别的\n线性回归：b1是相关系数，b0相应减去，基本上就是一通推导得到的，注意利用求和符号的性质\nKey # 1.一道简单的证明，忘了\n2.3个变量的次序统计量的联合概率分布，转化成最大值最小值，注意组合数公式\n3.马尔可夫链（赌徒），需要利用条件期望证明\n4.利用期望和方差的性质计算一堆量\n5.均值和方差都未知的区间估计和假设检验，这道题巨坑\n6.很简单的一道证明题，好像就是代入定义，忘了\n","date":"1 January 0001","externalUrl":null,"permalink":"/course/prob/","section":"Course","summary":"\u003ch2 class=\"relative group\"\u003e作业要点 \n    \u003cdiv id=\"作业要点\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e4%bd%9c%e4%b8%9a%e8%a6%81%e7%82%b9\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e作业1\u003c/p\u003e\n\u003cp\u003e几何分布：概率为p的事件首次发生时的次数，期望=1/p\u003c/p\u003e\n\u003cp\u003e协方差的计算公式推导：定义+期望的性质\u003c/p\u003e\n\u003cp\u003e期望=条件期望的概率加权和\u003c/p\u003e\n\u003cp\u003e泊松分布：小概率事件在一段时间内发生的次数，服从泊松分布的随机变量的和服从泊松分布，且$$\\lambda=\\lambda_1+\\lambda_2$$\u003c/p\u003e\n\u003cp\u003eX+Y的概率分布：卷积公式，本质上是全概率公式（条件概率）\u003c/p\u003e\n\u003cp\u003e贝叶斯公式：后验概率=先验概率+似然概率（后验颠倒）\u003c/p\u003e\n\u003cp\u003e作业2\u003c/p\u003e\n\u003cp\u003e马尔可夫链：利用含有条件概率的全概率公式\u003c/p\u003e\n\u003cp\u003eXY的概率分布：独立则可拆分，并灵活运用方差=二阶矩-一阶矩^2\u003c/p\u003e\n\u003cp\u003e多元概率分布之间的转换：利用雅可比行列式（顺序的记忆方法：不同分布都满足概率和为1）\u003c/p\u003e\n\u003cp\u003e样本方差的期望：利用期望和方差的性质进行一通推导（期望是线性的，方差不是线性的，虽然可加）\u003c/p\u003e\n\u003cp\u003e布朗运动：参考弹珠下落在分隔板上左/右移，借此思考其性质，然后根据定义一通推导就行了\u003c/p\u003e\n\u003cp\u003eMatropolis hasting算法：可以采样出任意分布（建议看龙哥博客，因为我现在也忘了）\u003c/p\u003e\n\u003cp\u003e作业3\u003c/p\u003e\n\u003cp\u003e基于样本的均值和方差估计正态分布的均值和方差\u003c/p\u003e\n\u003cp\u003e基于样本最大值估计均匀分布的上界\u003c/p\u003e\n\u003cp\u003e估计量的均方误差=偏差的平方+估计量的方差\u003c/p\u003e\n\u003cp\u003e区间估计：样本均值服从正态分布，样本方差服从自由度n-1的卡方分布（卡方分布，即多个正态分布的随机变量的平方和的分布）考试考了一道均值和方差都未知时的估计均值，有点坑\u003c/p\u003e\n\u003cp\u003e基于区间估计进行假设检验\u003c/p\u003e\n\u003cp\u003e作业4\u003c/p\u003e\n\u003cp\u003e最大后验估计：基于贝叶斯公式可以获得参数的后验概率，然后将样本代入，即可得到该组样本下待估参数的分布函数，然后取极值点即可\u003c/p\u003e\n\u003cp\u003e随机变量的换元：代入计算即可，没什么特别的\u003c/p\u003e\n\u003cp\u003e线性回归：b1是相关系数，b0相应减去，基本上就是一通推导得到的，注意利用求和符号的性质\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eKey \n    \u003cdiv id=\"key\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#key\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e1.一道简单的证明，忘了\u003c/p\u003e\n\u003cp\u003e2.3个变量的次序统计量的联合概率分布，转化成最大值最小值，注意组合数公式\u003c/p\u003e\n\u003cp\u003e3.马尔可夫链（赌徒），需要利用条件期望证明\u003c/p\u003e\n\u003cp\u003e4.利用期望和方差的性质计算一堆量\u003c/p\u003e\n\u003cp\u003e5.均值和方差都未知的区间估计和假设检验，这道题巨坑\u003c/p\u003e\n\u003cp\u003e6.很简单的一道证明题，好像就是代入定义，忘了\u003c/p\u003e","title":"Probability","type":"course"},{"content":" Reading # 段落间的逻辑关系\nObject/Phenomenon \u0026amp; Origin (Why) \u0026amp; Feature (Why) \u0026amp; Relationship \u0026amp; Effects \u0026amp; Discussion (Opinions \u0026amp; Limit)\n段落内的逻辑关系\n详略得当地扫一遍（一段话最好全看）+有意识的分层（每层用关键词概括，确保看懂）\n首尾句 观点句：跳过例子，找观点（人名/地名/数字等都不重要，简写即可） 逻辑关系 转折：but/ yet/ however/ nevertheless/ nonetheless/ rather/ on the other hand 递进：furthermore/ moreover/ above all 强调：chiefly/ mainly/ in a large part/ basically/ fundamentally/ more specifically 并列：also/ Along with \u0026hellip; is \u0026hellip;（重要的过渡句，暗示分层） 单句话抓主干：主系表，主谓宾，去修饰 系动词：be/ seem/ look/ get/ feel/ become/ appear/ symbolize/ represent/ refer to\n情感态度词： love/ like / care/ distaste\n插入语：逗号隔开的第一句可以不看；破折号和括号是表示强调的插入语\n观点类的动词和名词：admit/ think/ question/ opionion 跳过看后面内容\n题型\nExcept：排除法\nInfer：一定有原文依据，不是无端推测\nSummary：每一段用一个关键词概括，并结合先验知识（常见的逻辑结构）\nInsertion：必须通读整段\nListening # 分层分层分层！目的是为了让自己集中注意力+把握内容的变化\nWriting # T1 # Reading材料在写作时会被提供\nThe reading passage presents several points regarding (topic of the reading). Specifically, it discusses (main idea of the reading). In contrast, the lecture challenges the claims made in the reading, arguing that (main idea of the lecture) because (none can be definably proven).\nFirst, the reading asserts that (R1), suggesting that (explanation of R1). However, the lecturer refutes this by stating that (L1), emphasizing that (explanation of L1).\nSecond, the reading suggests that (R2), supported by (evidence or reasoning from the reading). On the other hand, the lecturer disputes this argument, pointing out that (L2), and further explaining that (explanation of L2).\nFinally, the reading posits that (R3), arguing that (evidence or reasoning from the reading). Nevertheless, the lecturer opposes this view, arguing that (L3), and elaborating that (explanation of L3).\nT2 # 模板\nWhile A posits that (观点A), I concur with B\u0026rsquo;s view that (观点B). Furthermore, I firmly believe that (观点C). In other words, (展开). For example, (举例). Consequently, (观点B和C的立场).\n举例：正向+反向的幻想\n万能理由\n方便 效率 经济 耐久 安全 环保 交流 经验 乐趣 成就 情感 健康 放松 Speaking # T1 # 培养能力 fosters creativity and problem-solving skills broadens my skill set the abilitiy to learn and adapt continuously aligns better with my desire for continuous growth and learning Multi-task \u0026amp; handle many tasks at the same time 不无聊 become monotonous over time break the monotony 效率 improve efficiency 方便 making it easier and faster to connect with others regardless of distance greatly enhancing convenience in daily life become versatile tools, combining multiple devices into one serve as cameras, GPS systems, and portable libraries 放松 relax mind \u0026amp; body stay in one\u0026rsquo;s comfort zone have more time to 社交类：\ndeepen connections / friendships foster a sense of camaraderie 培养情谊 share insights and ideas with peers improvement类：\nenhance their writing abilities, communication skills, and critical thinking capabilities – all of which are extremely crucial for their future development (这些skills可以随便改) cultivate an enjoyable atmosphere for… enhance / improve xxx’s well-being; foster a sense of well-being improve self-confidence 花钱 / 省钱：\neffectively ease / reduce my financial concerns alleviate financial burdens reduce stress levels cost-effectiveness expense 花费 政府类：\nboost revenue create lucrative opportunities generate profits impose an undue tax burden on citizens 其他：\n… serve as … contribute to … rather than strengthen solid foundation 省钱\nhave a financial cushion in case of emergencies\nbigger purchases\ntake out a loan\nuse a credit card\nfun activities\n童年\ndon\u0026rsquo;t have to worry about bills, work or any\nenjoy one\u0026rsquo;s life and have fun\nbe able to experience so many new things and learn about the world\nyou know, to explore and make new friends\nget to spend time with \u0026hellip; and create memories that will last a lifetime\nAll these makes childhood a special and unique time that one can never get back\n闲暇时间\nkeep my free time open\nhave some flexibility in life and not be tied down to a strict schedule\nsomething unexpexted happens or comes up\nRearrange or reschedule my plans\nmake plans in advance\nCome up with some creative ideas about how to\nTry new hobbies\n事实类 it depends\n教育类 学知识 提升成绩 拿奖学金 有成就感\n生活类 节省金钱和时间\n人际关系类 开心 改善人际关系\n模板\nI would prefer \u0026hellip; rather than \u0026hellip; First, \u0026hellip; Second, \u0026hellip;\nT2 # Proposal (2 Points) \u0026amp; Comments (2 Points)\nThe proposal suggests that \u0026hellip; The man/woman supports the idea of/that \u0026hellip; However, he/she disagrees with doing \u0026hellip; Instead, he/she suggests \u0026hellip;\nT3 # Concept \u0026amp; Example\nThe professor\u0026rsquo;s lecture provides an example of \u0026hellip; He/she describes one\u0026rsquo;s experience\nT4 # 2 Points \u0026amp; Examples\n","date":"1 January 0001","externalUrl":null,"permalink":"/course/tofel/","section":"Course","summary":"\u003ch2 class=\"relative group\"\u003eReading \n    \u003cdiv id=\"reading\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#reading\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e段落间的逻辑关系\u003c/p\u003e\n\u003cp\u003eObject/Phenomenon \u0026amp; Origin (Why) \u0026amp; Feature (Why) \u0026amp; Relationship \u0026amp; Effects \u0026amp; Discussion (Opinions \u0026amp; Limit)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e段落内的逻辑关系\u003c/p\u003e\n\u003cp\u003e详略得当地扫一遍（一段话最好全看）+有意识的分层（每层用关键词概括，确保看懂）\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e首尾句\u003c/li\u003e\n\u003cli\u003e观点句：跳过例子，找观点（人名/地名/数字等都不重要，简写即可）\u003c/li\u003e\n\u003cli\u003e逻辑关系\n\u003cul\u003e\n\u003cli\u003e转折：but/ yet/ however/ nevertheless/ nonetheless/ rather/ on the other hand\u003c/li\u003e\n\u003cli\u003e递进：furthermore/ moreover/ above all\u003c/li\u003e\n\u003cli\u003e强调：chiefly/ mainly/ in a large part/ basically/ fundamentally/ \u003cstrong\u003emore specifically\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e并列：also/ \u003cstrong\u003eAlong with \u0026hellip; is \u0026hellip;\u003c/strong\u003e（重要的过渡句，暗示分层）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e单句话抓主干：主系表，主谓宾，去修饰\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e系动词：be/ seem/ look/ get/ feel/ become/ appear/ symbolize/ represent/ refer to\u003c/p\u003e","title":"Tofel","type":"course"},{"content":" 基于PyQt5的应用开发 # 最简单的应用程序=应用进程+窗口组件 # import PyQt5.QtWidgets as QtWidgets import sys class MainWindow(QtWidgets.QMainWindow, QtWidgets.QApplication): def __init__(self, app): self.app = app QtWidgets.QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;Demo\u0026#39;) self.show() if __name__ == \u0026#34;__main__\u0026#34;: # 创建应用程序进程 app = QtWidgets.QApplication(sys.argv) # 创建主窗口 window = MainWindow(app) # 主程序开始运行 app.exec_() 在主窗口中添加组件 # 添加单个组件 # class MainWindow(QtWidgets.QMainWindow, QtWidgets.QApplication): def __init__(self, app): self.app = app QtWidgets.QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;MainWindow\u0026#39;) self.setCentralWidget(QtWidgets.QPushButton(\u0026#34;Button\u0026#34;)) self.show() 添加多个组件 # from PyQt5.QtWidgets import ( QApplication, QMainWindow, QPushButton, QSlider, QLabel, QCheckBox, QComboBox, QSpinBox, QDoubleSpinBox, QGroupBox, QGridLayout, QFileDialog) import sys from PyQt5.QtCore import Qt class MainWindow(QMainWindow, QApplication): def __init__(self, app): self.app = app QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;MainWindow\u0026#39;) # define a groupbox box = QGroupBox() layout = QGridLayout() layout.addWidget(QLabel(\u0026#34;Text\u0026#34;), 0, 0) layout.addWidget(QPushButton(\u0026#34;Press\u0026#34;), 0, 1) layout.addWidget(QCheckBox(\u0026#34;Tick\u0026#34;), 0, 2) layout.addWidget(QComboBox(), 0, 3) layout.addWidget(QSpinBox(), 1, 0) layout.addWidget(QDoubleSpinBox(), 1, 1) layout.addWidget(QSlider(Qt.Horizontal), 1, 2) layout.addLayout(QGridLayout(), 1, 3) box.setLayout(layout) self.setCentralWidget(box) self.show() 自定义你的组件 # 自定义按钮 # 将按钮变成文件选择键 # class SelectButton(QPushButton): def __init__(self, name): super().__init__(name) self.clicked.connect(self.select_file) def select_file(self): # 选择nii.gz图像文件 filename = QFileDialog.getOpenFileName( self, \u0026#39;Open file\u0026#39;)[0] return filename 将按钮变成调色板 # class ColorButton(QPushButton): def __init__(self, color): super().__init__() self.color = color self.setFixedSize(20, 20) rgb = self.color self.setStyleSheet( \u0026#34;background-color: rgb({},{},{})\u0026#34;.format(rgb[0], rgb[1], rgb[2])) self.clicked.connect(lambda: self.color_vc()) def color_vc(self): # 改变颜色 color = QColorDialog.getColor() # 获取调色板,并返回选择的颜色 if color.isValid(): rgb = color.getRgb()[:-1] self.color = rgb # 使按钮的颜色变成选择的颜色，以此展示已经选择的颜色 self.setStyleSheet( \u0026#34;background-color: rgb({},{},{})\u0026#34;.format(rgb[0], rgb[1], rgb[2])) 自定义微调框 # 设置最小值，最大值，步长，默认值 # class SpinBox(QDoubleSpinBox): def __init__(self, min_value, max_value, step, default_value, value_changed_func=None): super().__init__() self.setMaximum(max_value) self.setMinimum(min_value) self.setSingleStep(step) self.setValue(default_value) if value_changed_func: self.valueChanged.connect(value_changed_func) 基于VTK的三维医学图像可视化 # 基于2D Slice的可视化 # import vtk image = vtk.vtkNIFTIImageReader() image.SetFileName(\u0026#39;./CT_image.nii.gz\u0026#39;) image.Update() lut = vtk.vtkLookupTable() lut.SetTableRange(0, 255) lut.SetSaturationRange(0, 0) lut.SetHueRange(0, 0) lut.SetValueRange(0, 1) lut.Build() color_mapper = vtk.vtkImageMapToColors() color_mapper.SetInputConnection(image.GetOutputPort()) color_mapper.SetLookupTable(lut) color_mapper.Update() actor = vtk.vtkImageActor() actor.GetMapper().SetInputConnection(color_mapper.GetOutputPort()) renderer = vtk.vtkRenderer() renderer.AddActor(actor) render_window = vtk.vtkRenderWindow() render_window.AddRenderer(renderer) interactor = vtk.vtkRenderWindowInteractor() interactor.SetRenderWindow(render_window) interactor.Start() 基于3D Surface Rendering的可视化 # import vtk reader = vtk.vtkNIFTIImageReader() reader.SetFileNameSliceOffset(1) reader.SetDataByteOrderToBigEndian() reader.SetFileName(\u0026#39;./PET_label.nii.gz\u0026#39;) extractor = vtk.vtkDiscreteMarchingCubes() extractor.SetInputConnection(reader.GetOutputPort()) extractor.SetValue(0, 1) # 设置提取的等值面 reducer = vtk.vtkDecimatePro() reducer.SetInputConnection(extractor.GetOutputPort()) reducer.SetTargetReduction(0.5) # magic number reducer.PreserveTopologyOn() smoother = vtk.vtkSmoothPolyDataFilter() smoother.SetInputConnection(reducer.GetOutputPort()) smoother.SetNumberOfIterations(100) normals = vtk.vtkPolyDataNormals() normals.SetInputConnection(smoother.GetOutputPort()) normals.SetFeatureAngle(60.0) mapper = vtk.vtkPolyDataMapper() mapper.SetInputConnection(normals.GetOutputPort()) mapper.ScalarVisibilityOff() prop = vtk.vtkProperty() prop.SetColor((1, 0, 0)) prop.SetOpacity(1) actor = vtk.vtkActor() actor.SetMapper(mapper) actor.SetProperty(prop) renderer = vtk.vtkRenderer() renderer.AddActor(actor) render_window = vtk.vtkRenderWindow() render_window.AddRenderer(renderer) interactor = vtk.vtkRenderWindowInteractor() interactor.SetRenderWindow(render_window) interactor.Start() 使用vtkContourFilter提取等值面 # 设置等值线\nSetValue(…)设置一条等值线值 GenerateValues(…)产生n条在区间内线性分布的等值线 两者结合使用举例\n首先调用GenerateValues(3, 100, 300)产生3条等值线，分别为100、200、300；然后调用SetValue(0, 125)，则最终效果为共有3条等值线，分别为125、200、300；如果改为调用SetValue(3, 400)，则最终效果为共有4条等值线，分别为100、200、300、400。 SetValue一般用于覆盖某一条已经存在的等值线，或者增加一条等值线；GenerateValues一般重新设置等值线的条数。 基于PyQt5和VTK的医学图像可视化应用程序 # 在主窗口中添加可视化组件 # 添加可视化组件 # class MainWindow(QMainWindow, QApplication): def __init__(self, app): self.app = app QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;MainWindow\u0026#39;) box = QGroupBox() layout = QGridLayout() layout.addLayout(QGridLayout(), 0, 0) vtk_interactor = QVTKRenderWindowInteractor() vtk_interactor.show() vtk_interactor.Initialize() vtk_interactor.Start() layout.addWidget(vtk_interactor, 0, 1) box.setLayout(layout) self.setCentralWidget(box) self.show() 自定义可视化管线和可视化组件 # class VisualizationPipeline: def __init__(self): reader = vtk.vtkNIFTIImageReader() reader.SetFileName(\u0026#39;./CT_image.nii.gz\u0026#39;) reader.Update() lut = vtk.vtkLookupTable() lut.SetTableRange(0, 255) lut.SetSaturationRange(0, 0) lut.SetHueRange(0, 0) lut.SetValueRange(0, 1) lut.Build() color_mapper = vtk.vtkImageMapToColors() color_mapper.SetInputConnection(reader.GetOutputPort()) color_mapper.SetLookupTable(lut) color_mapper.Update() actor = vtk.vtkImageActor() actor.GetMapper().SetInputConnection(color_mapper.GetOutputPort()) self.actor = actor class VisualizationWindow(QVTKRenderWindowInteractor): def __init__(self): super().__init__() self.render_window = self.GetRenderWindow() self.renderer = vtk.vtkRenderer() self.render_window.AddRenderer(self.renderer) self.actor = VisualizationPipeline().actor self.renderer.AddActor(self.actor) self.SetInteractorStyle(vtk.vtkInteractorStyleTrackballCamera()) self.show() self.Initialize() self.Start() class MainWindow(QMainWindow, QApplication): def __init__(self, app): self.app = app QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;MainWindow\u0026#39;) box = QGroupBox() layout = QGridLayout() layout.addWidget(VisualizationWindow(), 0, 1, 2, 2) box.setLayout(layout) self.setCentralWidget(box) self.show() 在主窗口中添加控制组件 # class ControlBox(QGroupBox): def __init__(self): super().__init__() layout = QGridLayout() self.setLayout(layout) layout.addWidget(QLabel(\u0026#34;FIle\u0026#34;), 0, 0) layout.addWidget(SelectButton(\u0026#34;Select File\u0026#34;), 1, 1) layout.addWidget(QLabel(\u0026#34;x\u0026#34;), 2, 0) layout.addWidget(Slider(), 2, 1, 1, 2) layout.addWidget(QLabel(\u0026#34;y\u0026#34;), 3, 0) layout.addWidget(Slider(), 3, 1, 1, 2) layout.addWidget(QLabel(\u0026#34;z\u0026#34;), 4, 0) layout.addWidget(Slider(), 4, 1, 1, 2) class MainWindow(QMainWindow, QApplication): def __init__(self, app): self.app = app QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;MainWindow\u0026#39;) box = QGroupBox() layout = QGridLayout() layout.addWidget(ControlBox(), 0, 0) vtk_interactor = QVTKRenderWindowInteractor() vtk_interactor.show() vtk_interactor.Initialize() vtk_interactor.Start() layout.addWidget(vtk_interactor, 0, 1, 2, 2) box.setLayout(layout) self.setCentralWidget(box) self.show() 组件交互 # 在这个简单的应用中，有三个组件在交互：前端的控制组件ControlBox、可视化窗口VisualizationWindow，后端的可视化管线VisualizationPipeline。\n在交互过程中，用户可以看到的，是左侧的ControlBox和右侧的VisualizationWindow，而真正进行一系列渲染操作的，是后端的可视化管线VisualizationPipeline。\n在这里，我们通过PyQt5的信号与槽机制，来实现三个组件之间的交互。\n选择文件并可视化 # class SelectButton(QPushButton): filename = pyqtSignal(str) def __init__(self, name): super().__init__(name) self.clicked.connect(self.select_file) def select_file(self): # 选择图像文件 filename = QFileDialog.getOpenFileName( self, \u0026#39;Open file\u0026#39;)[0] self.filename.emit(filename) class ControlBox(QGroupBox): def __init__(self): super().__init__() layout = QGridLayout() self.setLayout(layout) layout.addWidget(QLabel(\u0026#34;FIle\u0026#34;), 0, 0) filename = QLabel(\u0026#34;------\u0026#34;) layout.addWidget(filename, 0, 1) self.select_button = SelectButton(\u0026#34;Select File\u0026#34;) layout.addWidget(self.select_button, 1, 1) layout.addWidget(QLabel(\u0026#34;axial\u0026#34;), 2, 0) self.axis_slider = Slider(0, 54) layout.addWidget(self.axis_slider, 2, 1, 1, 2) layout.addWidget(QLabel(\u0026#34;coronal\u0026#34;), 3, 0) self.coronal_slider = Slider(0, 511) layout.addWidget(self.coronal_slider, 3, 1, 1, 2) layout.addWidget(QLabel(\u0026#34;saggital\u0026#34;), 4, 0) self.saggital_slider = Slider(0, 511) layout.addWidget(self.saggital_slider, 4, 1, 1, 2) self.select_button.filename.connect( lambda path: filename.setText(path.split(\u0026#39;/\u0026#39;)[-1])) class VisualizationPipeline(QWidget): render = pyqtSignal(int) def __init__(self): super().__init__() reader = vtk.vtkNIFTIImageReader() self.reader = reader lut = vtk.vtkLookupTable() lut.SetTableRange(0, 255) lut.SetSaturationRange(0, 0) lut.SetHueRange(0, 0) lut.SetValueRange(0, 1) lut.Build() color_mapper = vtk.vtkImageMapToColors() color_mapper.SetInputConnection(reader.GetOutputPort()) color_mapper.SetLookupTable(lut) self.color_mapper = color_mapper actor = vtk.vtkImageActor() actor.GetMapper().SetInputConnection(color_mapper.GetOutputPort()) self.actor = actor def set_filename(self, filename): self.reader.SetFileName(filename) self.reader.Update() self.color_mapper.Update() class VisualizationWindow(QVTKRenderWindowInteractor): def __init__(self): super().__init__() self.view = 0 self.render_window = self.GetRenderWindow() self.renderer = vtk.vtkRenderer() self.render_window.AddRenderer(self.renderer) self.SetInteractorStyle(vtk.vtkInteractorStyleTrackballCamera()) self.show() self.Initialize() self.Start() def add_actor(self, actor): self.renderer.AddActor(actor) self.set_view(self.view) def set_view(self, view): # 根据view信号，设置相机vtkCamera的位置和角度 self.view = view self.renderer.ResetCamera() fp = self.renderer.GetActiveCamera().GetFocalPoint() p = self.renderer.GetActiveCamera().GetPosition() dist = math.sqrt((p[0] - fp[0]) ** 2 + (p[1] - fp[1]) ** 2 + (p[2] - fp[2]) ** 2) if self.view == 0: self.renderer.GetActiveCamera().SetPosition( fp[0], fp[1], fp[2] + dist) self.renderer.GetActiveCamera().SetViewUp(0.0, 1.0, 0.0) elif self.view == 1: self.renderer.GetActiveCamera().SetPosition( fp[0], fp[1] - dist, fp[2]) self.renderer.GetActiveCamera().SetViewUp(0.0, 0.0, 1.0) elif self.view == 2: self.renderer.GetActiveCamera().SetPosition( fp[0] + dist, fp[1], fp[2]) self.renderer.GetActiveCamera().SetViewUp(0.0, 0.0, 1.0) self.renderer.GetActiveCamera().Zoom(1.8) self.render_window.Render() class MainWindow(QMainWindow, QApplication): def __init__(self, app): self.app = app QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;MainWindow\u0026#39;) box = QGroupBox() layout = QGridLayout() self.control_box = ControlBox() layout.addWidget(self.control_box, 0, 0) self.vtk_pipeline = VisualizationPipeline() self.visualization_window = VisualizationWindow() self.control_box.select_button.filename.connect( self.vtk_pipeline.set_filename) self.control_box.select_button.filename.connect( lambda: self.visualization_window.add_actor(self.vtk_pipeline.actor)) self.vtk_pipeline.render.connect(self.visualization_window.set_view) layout.addWidget(self.visualization_window, 0, 1, 2, 2) box.setLayout(layout) self.setCentralWidget(box) self.show() 通过滑动条，控制2D切片在3D图像中对应的范围 # class Slider(QSlider): pos = pyqtSignal(int) def __init__(self, min, max, orientation=Qt.Horizontal): super().__init__(orientation) self.valueChanged.connect(self.value_changed) self.setMinimum(min) self.setMaximum(max) def value_changed(self): pos = self.value() self.pos.emit(pos) class SpinBox(QDoubleSpinBox): def __init__(self, min_value, max_value, step, default_value, value_changed_func=None): super().__init__() self.setMaximum(max_value) self.setMinimum(min_value) self.setSingleStep(step) self.setValue(default_value) if value_changed_func: self.valueChanged.connect(value_changed_func) class VisualizationPipeline(QWidget): render = pyqtSignal(int) def __init__(self): super().__init__() reader = vtk.vtkNIFTIImageReader() self.reader = reader lut = vtk.vtkLookupTable() lut.SetTableRange(0, 255) lut.SetSaturationRange(0, 0) lut.SetHueRange(0, 0) lut.SetValueRange(0, 1) lut.Build() color_mapper = vtk.vtkImageMapToColors() color_mapper.SetInputConnection(reader.GetOutputPort()) color_mapper.SetLookupTable(lut) self.color_mapper = color_mapper actor = vtk.vtkImageActor() actor.GetMapper().SetInputConnection(color_mapper.GetOutputPort()) self.actor = actor # print(self.actor) def set_filename(self, filename): self.reader.SetFileName(filename) self.reader.Update() self.color_mapper.Update() def set_slice_range(self, axis, pos): # 修改Slice的显示范围 x0, x1, y0, y1, z0, z1 = self.reader.GetDataExtent() if axis == 0: self.actor.SetDisplayExtent(x0, x1, y0, y1, pos, pos) elif axis == 1: self.actor.SetDisplayExtent(x0, x1, pos, pos, z0, z1) elif axis == 2: self.actor.SetDisplayExtent(pos, pos, y0, y1, z0, z1) self.render.emit(axis) class VisualizationWindow(QVTKRenderWindowInteractor): def __init__(self): super().__init__() self.view = 0 self.render_window = self.GetRenderWindow() self.renderer = vtk.vtkRenderer() self.render_window.AddRenderer(self.renderer) self.SetInteractorStyle(vtk.vtkInteractorStyleTrackballCamera()) self.show() self.Initialize() self.Start() def add_actor(self, actor): self.renderer.AddActor(actor) self.set_view(self.view) def set_view(self, view): # 根据view信号，设置相机vtkCamera的位置和角度 self.view = view self.renderer.ResetCamera() fp = self.renderer.GetActiveCamera().GetFocalPoint() p = self.renderer.GetActiveCamera().GetPosition() dist = math.sqrt((p[0] - fp[0]) ** 2 + (p[1] - fp[1]) ** 2 + (p[2] - fp[2]) ** 2) if self.view == 0: self.renderer.GetActiveCamera().SetPosition( fp[0], fp[1], fp[2] + dist) self.renderer.GetActiveCamera().SetViewUp(0.0, 1.0, 0.0) elif self.view == 1: self.renderer.GetActiveCamera().SetPosition( fp[0], fp[1] - dist, fp[2]) self.renderer.GetActiveCamera().SetViewUp(0.0, 0.0, 1.0) elif self.view == 2: self.renderer.GetActiveCamera().SetPosition( fp[0] + dist, fp[1], fp[2]) self.renderer.GetActiveCamera().SetViewUp(0.0, 0.0, 1.0) self.renderer.GetActiveCamera().Zoom(1.8) self.render_window.Render() class ControlBox(QGroupBox): def __init__(self): super().__init__() layout = QGridLayout() self.setLayout(layout) layout.addWidget(QLabel(\u0026#34;FIle\u0026#34;), 0, 0) self.select_button = SelectButton(\u0026#34;Select File\u0026#34;) layout.addWidget(self.select_button, 1, 1) layout.addWidget(QLabel(\u0026#34;axial\u0026#34;), 2, 0) self.axis_slider = Slider(0, 54) layout.addWidget(self.axis_slider, 2, 1, 1, 2) layout.addWidget(QLabel(\u0026#34;coronal\u0026#34;), 3, 0) self.coronal_slider = Slider(0, 511) layout.addWidget(self.coronal_slider, 3, 1, 1, 2) layout.addWidget(QLabel(\u0026#34;saggital\u0026#34;), 4, 0) self.saggital_slider = Slider(0, 511) layout.addWidget(self.saggital_slider, 4, 1, 1, 2) class MainWindow(QMainWindow, QApplication): def __init__(self, app): self.app = app QMainWindow.__init__(self) self.setWindowTitle(\u0026#39;MainWindow\u0026#39;) box = QGroupBox() layout = QGridLayout() self.control_box = ControlBox() layout.addWidget(self.control_box, 0, 0) self.vtk_pipeline = VisualizationPipeline() self.visualization_window = VisualizationWindow() self.control_box.select_button.filename.connect( self.vtk_pipeline.set_filename) self.control_box.select_button.filename.connect( lambda: self.visualization_window.add_actor(self.vtk_pipeline.actor)) self.control_box.axis_slider.pos.connect( lambda pos: self.vtk_pipeline.set_slice_range(0, pos)) self.control_box.coronal_slider.pos.connect( lambda pos: self.vtk_pipeline.set_slice_range(1, pos)) self.control_box.saggital_slider.pos.connect( lambda pos: self.vtk_pipeline.set_slice_range(2, pos)) self.vtk_pipeline.render.connect(self.visualization_window.set_view) layout.addWidget(self.visualization_window, 0, 1, 2, 2) box.setLayout(layout) self.setCentralWidget(box) self.show() ","date":"1 January 0001","externalUrl":null,"permalink":"/software/visualization/","section":"Software","summary":"\u003ch1 class=\"relative group\"\u003e基于PyQt5的应用开发 \n    \u003cdiv id=\"基于pyqt5的应用开发\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%9f%ba%e4%ba%8epyqt5%e7%9a%84%e5%ba%94%e7%94%a8%e5%bc%80%e5%8f%91\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\u003ch2 class=\"relative group\"\u003e最简单的应用程序=应用进程+窗口组件 \n    \u003cdiv id=\"最简单的应用程序应用进程窗口组件\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e6%9c%80%e7%ae%80%e5%8d%95%e7%9a%84%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f%e5%ba%94%e7%94%a8%e8%bf%9b%e7%a8%8b%e7%aa%97%e5%8f%a3%e7%bb%84%e4%bb%b6\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e PyQt5.QtWidgets \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e QtWidgets\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e sys\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMainWindow\u003c/span\u003e(QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQMainWindow, QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQApplication):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self, app):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eapp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e app\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQMainWindow\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetWindowTitle(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Demo\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eshow()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e __name__ \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;__main__\u0026#34;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e# 创建应用程序进程\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    app \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQApplication(sys\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eargv)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e# 创建主窗口\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    window \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e MainWindow(app)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e# 主程序开始运行\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    app\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eexec_()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/0.png\" alt=\"0\" style=\"zoom: 50%;\" /\u003e\n\n\u003ch2 class=\"relative group\"\u003e在主窗口中添加组件 \n    \u003cdiv id=\"在主窗口中添加组件\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%9c%a8%e4%b8%bb%e7%aa%97%e5%8f%a3%e4%b8%ad%e6%b7%bb%e5%8a%a0%e7%bb%84%e4%bb%b6\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003e添加单个组件 \n    \u003cdiv id=\"添加单个组件\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e6%b7%bb%e5%8a%a0%e5%8d%95%e4%b8%aa%e7%bb%84%e4%bb%b6\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMainWindow\u003c/span\u003e(QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQMainWindow, QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQApplication):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self, app):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eapp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e app\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQMainWindow\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetWindowTitle(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;MainWindow\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetCentralWidget(QtWidgets\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eQPushButton(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Button\u0026#34;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eshow()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/1.png\" alt=\"1\" style=\"zoom:50%;\" /\u003e\n\n\u003ch3 class=\"relative group\"\u003e添加多个组件 \n    \u003cdiv id=\"添加多个组件\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e6%b7%bb%e5%8a%a0%e5%a4%9a%e4%b8%aa%e7%bb%84%e4%bb%b6\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e PyQt5.QtWidgets \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    QApplication, QMainWindow,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    QPushButton, QSlider, QLabel, QCheckBox, QComboBox, QSpinBox, QDoubleSpinBox,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    QGroupBox, QGridLayout,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    QFileDialog)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e sys\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e PyQt5.QtCore \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e Qt\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMainWindow\u003c/span\u003e(QMainWindow, QApplication):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self, app):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eapp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e app\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        QMainWindow\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetWindowTitle(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;MainWindow\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e# define a groupbox\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        box \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e QGroupBox()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e QGridLayout()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddWidget(QLabel(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Text\u0026#34;\u003c/span\u003e), \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddWidget(QPushButton(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Press\u0026#34;\u003c/span\u003e), \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddWidget(QCheckBox(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Tick\u0026#34;\u003c/span\u003e), \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddWidget(QComboBox(), \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddWidget(QSpinBox(), \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddWidget(QDoubleSpinBox(), \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddWidget(QSlider(Qt\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eHorizontal), \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        layout\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eaddLayout(QGridLayout(), \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        box\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetLayout(layout)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetCentralWidget(box)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eshow()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/2.png\" alt=\"2\" style=\"zoom:50%;\" /\u003e\n\n\u003ch2 class=\"relative group\"\u003e自定义你的组件 \n    \u003cdiv id=\"自定义你的组件\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e8%87%aa%e5%ae%9a%e4%b9%89%e4%bd%a0%e7%9a%84%e7%bb%84%e4%bb%b6\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\u003ch3 class=\"relative group\"\u003e自定义按钮 \n    \u003cdiv id=\"自定义按钮\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e8%87%aa%e5%ae%9a%e4%b9%89%e6%8c%89%e9%92%ae\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\u003ch4 class=\"relative group\"\u003e将按钮变成文件选择键 \n    \u003cdiv id=\"将按钮变成文件选择键\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%b0%86%e6%8c%89%e9%92%ae%e5%8f%98%e6%88%90%e6%96%87%e4%bb%b6%e9%80%89%e6%8b%a9%e9%94%ae\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSelectButton\u003c/span\u003e(QPushButton):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self, name):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        super()\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(name)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eclicked\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003econnect(self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eselect_file)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eselect_file\u003c/span\u003e(self):  \u003cspan style=\"color:#75715e\"\u003e# 选择nii.gz图像文件\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        filename \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e QFileDialog\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003egetOpenFileName(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            self, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Open file\u0026#39;\u003c/span\u003e)[\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e filename\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch4 class=\"relative group\"\u003e将按钮变成调色板 \n    \u003cdiv id=\"将按钮变成调色板\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%b0%86%e6%8c%89%e9%92%ae%e5%8f%98%e6%88%90%e8%b0%83%e8%89%b2%e6%9d%bf\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eColorButton\u003c/span\u003e(QPushButton):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self, color):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        super()\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecolor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e color\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetFixedSize(\u003cspan style=\"color:#ae81ff\"\u003e20\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e20\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        rgb \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecolor\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetStyleSheet(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;background-color: rgb(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e,\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e,\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e)\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eformat(rgb[\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e], rgb[\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e], rgb[\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e]))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eclicked\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003econnect(\u003cspan style=\"color:#66d9ef\"\u003elambda\u003c/span\u003e: self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecolor_vc())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecolor_vc\u003c/span\u003e(self):  \u003cspan style=\"color:#75715e\"\u003e# 改变颜色\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        color \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e QColorDialog\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003egetColor()  \u003cspan style=\"color:#75715e\"\u003e# 获取调色板,并返回选择的颜色\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e color\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eisValid():\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            rgb \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e color\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003egetRgb()[:\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecolor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e rgb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e# 使按钮的颜色变成选择的颜色，以此展示已经选择的颜色\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetStyleSheet(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;background-color: rgb(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e,\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e,\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e)\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eformat(rgb[\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e], rgb[\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e], rgb[\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e]))\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/3.png\" alt=\"3\" style=\"zoom:50%;\" /\u003e\n\n\u003ch3 class=\"relative group\"\u003e自定义微调框 \n    \u003cdiv id=\"自定义微调框\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e8%87%aa%e5%ae%9a%e4%b9%89%e5%be%ae%e8%b0%83%e6%a1%86\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\u003ch4 class=\"relative group\"\u003e设置最小值，最大值，步长，默认值 \n    \u003cdiv id=\"设置最小值最大值步长默认值\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e8%ae%be%e7%bd%ae%e6%9c%80%e5%b0%8f%e5%80%bc%e6%9c%80%e5%a4%a7%e5%80%bc%e6%ad%a5%e9%95%bf%e9%bb%98%e8%ae%a4%e5%80%bc\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSpinBox\u003c/span\u003e(QDoubleSpinBox):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e(self, min_value, max_value, step, default_value, value_changed_func\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eNone\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        super()\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e__init__\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetMaximum(max_value)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetMinimum(min_value)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetSingleStep(step)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003esetValue(default_value)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e value_changed_func:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            self\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evalueChanged\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003econnect(value_changed_func)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch1 class=\"relative group\"\u003e基于VTK的三维医学图像可视化 \n    \u003cdiv id=\"基于vtk的三维医学图像可视化\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%9f%ba%e4%ba%8evtk%e7%9a%84%e4%b8%89%e7%bb%b4%e5%8c%bb%e5%ad%a6%e5%9b%be%e5%83%8f%e5%8f%af%e8%a7%86%e5%8c%96\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\u003ch2 class=\"relative group\"\u003e基于2D Slice的可视化 \n    \u003cdiv id=\"基于2d-slice的可视化\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%9f%ba%e4%ba%8e2d-slice%e7%9a%84%e5%8f%af%e8%a7%86%e5%8c%96\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e vtk\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eimage \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkNIFTIImageReader()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eimage\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetFileName(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;./CT_image.nii.gz\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eimage\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eUpdate()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elut \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkLookupTable()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elut\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetTableRange(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e255\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elut\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetSaturationRange(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elut\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetHueRange(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elut\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetValueRange(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elut\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eBuild()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolor_mapper \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkImageMapToColors()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolor_mapper\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetInputConnection(image\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetOutputPort())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolor_mapper\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetLookupTable(lut)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolor_mapper\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eUpdate()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkImageActor()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetMapper()\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetInputConnection(color_mapper\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetOutputPort())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erenderer \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkRenderer()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erenderer\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eAddActor(actor)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erender_window \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkRenderWindow()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erender_window\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eAddRenderer(renderer)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003einteractor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkRenderWindowInteractor()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003einteractor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetRenderWindow(render_window)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003einteractor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eStart()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/4.png\" alt=\"4\" style=\"zoom:50%;\" /\u003e\n\n\u003ch2 class=\"relative group\"\u003e基于3D Surface Rendering的可视化 \n    \u003cdiv id=\"基于3d-surface-rendering的可视化\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e5%9f%ba%e4%ba%8e3d-surface-rendering%e7%9a%84%e5%8f%af%e8%a7%86%e5%8c%96\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e vtk\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereader \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkNIFTIImageReader()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereader\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetFileNameSliceOffset(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereader\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetDataByteOrderToBigEndian()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereader\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetFileName(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;./PET_label.nii.gz\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eextractor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkDiscreteMarchingCubes()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eextractor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetInputConnection(reader\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetOutputPort())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eextractor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetValue(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)  \u003cspan style=\"color:#75715e\"\u003e# 设置提取的等值面\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereducer \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkDecimatePro()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereducer\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetInputConnection(extractor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetOutputPort())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereducer\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetTargetReduction(\u003cspan style=\"color:#ae81ff\"\u003e0.5\u003c/span\u003e)  \u003cspan style=\"color:#75715e\"\u003e# magic number\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereducer\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ePreserveTopologyOn()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esmoother \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkSmoothPolyDataFilter()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esmoother\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetInputConnection(reducer\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetOutputPort())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esmoother\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetNumberOfIterations(\u003cspan style=\"color:#ae81ff\"\u003e100\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enormals \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkPolyDataNormals()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enormals\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetInputConnection(smoother\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetOutputPort())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enormals\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetFeatureAngle(\u003cspan style=\"color:#ae81ff\"\u003e60.0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emapper \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkPolyDataMapper()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emapper\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetInputConnection(normals\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGetOutputPort())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emapper\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eScalarVisibilityOff()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprop \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkProperty()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprop\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetColor((\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprop\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetOpacity(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkActor()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetMapper(mapper)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetProperty(prop)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erenderer \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkRenderer()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erenderer\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eAddActor(actor)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erender_window \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkRenderWindow()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erender_window\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eAddRenderer(renderer)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003einteractor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e vtk\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evtkRenderWindowInteractor()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003einteractor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eSetRenderWindow(render_window)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003einteractor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eStart()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cimg src=\"https://raw.githubusercontent.com/xuzhang0112/pic-repo/main/5.png\" alt=\"5\" style=\"zoom:50%;\" /\u003e\n\n\u003ch3 class=\"relative group\"\u003e使用vtkContourFilter提取等值面 \n    \u003cdiv id=\"使用vtkcontourfilter提取等值面\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e4%bd%bf%e7%94%a8vtkcontourfilter%e6%8f%90%e5%8f%96%e7%ad%89%e5%80%bc%e9%9d%a2\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e设置等值线\u003c/p\u003e","title":"Visualization","type":"software"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/year/","section":"Year","summary":"","title":"Year","type":"year"}]